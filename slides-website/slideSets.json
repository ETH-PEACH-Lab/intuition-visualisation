[
  {
    "title": "01-matrix",
    "paths": [
      "/slides/01-matrix/1/page_1.png",
      "/slides/01-matrix/1/page_2.png",
      "/slides/01-matrix/1/page_3.png",
      "/slides/01-matrix/1/page_4.png",
      "/slides/01-matrix/1/page_5.png",
      "/slides/01-matrix/1/page_6.png",
      "/slides/01-matrix/1/page_7.png",
      "/slides/01-matrix/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Breadth-First Search",
      " Matrix"
    ]
  },
  {
    "title": "132-pattern",
    "paths": [
      "/slides/132-pattern/1/page_1.png",
      "/slides/132-pattern/1/page_10.png",
      "/slides/132-pattern/1/page_2.png",
      "/slides/132-pattern/1/page_3.png",
      "/slides/132-pattern/1/page_4.png",
      "/slides/132-pattern/1/page_5.png",
      "/slides/132-pattern/1/page_6.png",
      "/slides/132-pattern/1/page_7.png",
      "/slides/132-pattern/1/page_8.png",
      "/slides/132-pattern/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Binary Search",
      " Stack",
      " Monotonic Stack",
      " Ordered Set"
    ]
  },
  {
    "title": "3sum-closest",
    "paths": [
      "/slides/3sum-closest/1/page_1.png",
      "/slides/3sum-closest/1/page_10.png",
      "/slides/3sum-closest/1/page_11.png",
      "/slides/3sum-closest/1/page_12.png",
      "/slides/3sum-closest/1/page_13.png",
      "/slides/3sum-closest/1/page_14.png",
      "/slides/3sum-closest/1/page_2.png",
      "/slides/3sum-closest/1/page_3.png",
      "/slides/3sum-closest/1/page_4.png",
      "/slides/3sum-closest/1/page_5.png",
      "/slides/3sum-closest/1/page_6.png",
      "/slides/3sum-closest/1/page_7.png",
      "/slides/3sum-closest/1/page_8.png",
      "/slides/3sum-closest/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Two Pointers",
      " Sorting"
    ]
  },
  {
    "title": "4sum",
    "paths": [
      "/slides/4sum/1/page_1.png",
      "/slides/4sum/1/page_10.png",
      "/slides/4sum/1/page_2.png",
      "/slides/4sum/1/page_3.png",
      "/slides/4sum/1/page_4.png",
      "/slides/4sum/1/page_5.png",
      "/slides/4sum/1/page_6.png",
      "/slides/4sum/1/page_7.png",
      "/slides/4sum/1/page_8.png",
      "/slides/4sum/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Two Pointers",
      " Sorting"
    ]
  },
  {
    "title": "4sum-ii",
    "paths": [
      "/slides/4sum-ii/1/page_1.png",
      "/slides/4sum-ii/1/page_2.png",
      "/slides/4sum-ii/1/page_3.png",
      "/slides/4sum-ii/1/page_4.png",
      "/slides/4sum-ii/1/page_5.png",
      "/slides/4sum-ii/1/page_6.png",
      "/slides/4sum-ii/1/page_7.png",
      "/slides/4sum-ii/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table"
    ]
  },
  {
    "title": "accounts-merge",
    "paths": [
      "/slides/accounts-merge/1/page_1.png",
      "/slides/accounts-merge/1/page_2.png",
      "/slides/accounts-merge/1/page_3.png",
      "/slides/accounts-merge/1/page_4.png",
      "/slides/accounts-merge/1/page_5.png",
      "/slides/accounts-merge/1/page_6.png",
      "/slides/accounts-merge/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Hash Table",
      " String",
      " Depth-First Search",
      " Breadth-First Search",
      " Union Find",
      " Sorting"
    ]
  },
  {
    "title": "add-binary",
    "paths": [
      "/slides/add-binary/1/page_1.png",
      "/slides/add-binary/1/page_2.png",
      "/slides/add-binary/1/page_3.png",
      "/slides/add-binary/1/page_4.png",
      "/slides/add-binary/1/page_5.png",
      "/slides/add-binary/1/page_6.png",
      "/slides/add-binary/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Math",
      " String",
      " Bit Manipulation",
      " Simulation"
    ]
  },
  {
    "title": "add-one-row-to-tree",
    "paths": [
      "/slides/add-one-row-to-tree/1/page_1.png",
      "/slides/add-one-row-to-tree/1/page_10.png",
      "/slides/add-one-row-to-tree/1/page_11.png",
      "/slides/add-one-row-to-tree/1/page_12.png",
      "/slides/add-one-row-to-tree/1/page_13.png",
      "/slides/add-one-row-to-tree/1/page_14.png",
      "/slides/add-one-row-to-tree/1/page_15.png",
      "/slides/add-one-row-to-tree/1/page_16.png",
      "/slides/add-one-row-to-tree/1/page_2.png",
      "/slides/add-one-row-to-tree/1/page_3.png",
      "/slides/add-one-row-to-tree/1/page_4.png",
      "/slides/add-one-row-to-tree/1/page_5.png",
      "/slides/add-one-row-to-tree/1/page_6.png",
      "/slides/add-one-row-to-tree/1/page_7.png",
      "/slides/add-one-row-to-tree/1/page_8.png",
      "/slides/add-one-row-to-tree/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "add-strings",
    "paths": [
      "/slides/add-strings/1/page_1.png",
      "/slides/add-strings/1/page_2.png",
      "/slides/add-strings/1/page_3.png",
      "/slides/add-strings/1/page_4.png",
      "/slides/add-strings/1/page_5.png",
      "/slides/add-strings/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Math",
      " String",
      " Simulation"
    ]
  },
  {
    "title": "add-two-numbers-ii",
    "paths": [
      "/slides/add-two-numbers-ii/1/page_1.png",
      "/slides/add-two-numbers-ii/1/page_2.png",
      "/slides/add-two-numbers-ii/1/page_3.png",
      "/slides/add-two-numbers-ii/1/page_4.png",
      "/slides/add-two-numbers-ii/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Linked List",
      " Math",
      " Stack"
    ]
  },
  {
    "title": "all-elements-in-two-binary-search-trees",
    "paths": [
      "/slides/all-elements-in-two-binary-search-trees/1/page_1.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_10.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_2.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_3.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_4.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_5.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_6.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_7.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_8.png",
      "/slides/all-elements-in-two-binary-search-trees/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Search Tree",
      " Sorting",
      " Binary Tree"
    ]
  },
  {
    "title": "arithmetic-slices",
    "paths": [
      "/slides/arithmetic-slices/1/page_1.png",
      "/slides/arithmetic-slices/1/page_2.png",
      "/slides/arithmetic-slices/1/page_3.png",
      "/slides/arithmetic-slices/1/page_4.png",
      "/slides/arithmetic-slices/1/page_5.png",
      "/slides/arithmetic-slices/1/page_6.png",
      "/slides/arithmetic-slices/1/page_7.png",
      "/slides/arithmetic-slices/1/page_8.png",
      "/slides/arithmetic-slices/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "array-partition",
    "paths": [
      "/slides/array-partition/1/page_1.png",
      "/slides/array-partition/1/page_10.png",
      "/slides/array-partition/1/page_2.png",
      "/slides/array-partition/1/page_3.png",
      "/slides/array-partition/1/page_4.png",
      "/slides/array-partition/1/page_5.png",
      "/slides/array-partition/1/page_6.png",
      "/slides/array-partition/1/page_7.png",
      "/slides/array-partition/1/page_8.png",
      "/slides/array-partition/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Greedy",
      " Sorting",
      " Counting Sort"
    ]
  },
  {
    "title": "asteroid-collision",
    "paths": [
      "/slides/asteroid-collision/1/page_1.png",
      "/slides/asteroid-collision/1/page_2.png",
      "/slides/asteroid-collision/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Array",
      " Stack",
      " Simulation"
    ]
  },
  {
    "title": "average-of-levels-in-binary-tree",
    "paths": [
      "/slides/average-of-levels-in-binary-tree/1/page_1.png",
      "/slides/average-of-levels-in-binary-tree/1/page_2.png",
      "/slides/average-of-levels-in-binary-tree/1/page_3.png",
      "/slides/average-of-levels-in-binary-tree/1/page_4.png",
      "/slides/average-of-levels-in-binary-tree/1/page_5.png",
      "/slides/average-of-levels-in-binary-tree/1/page_6.png",
      "/slides/average-of-levels-in-binary-tree/1/page_7.png",
      "/slides/average-of-levels-in-binary-tree/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "bag-of-tokens",
    "paths": [
      "/slides/bag-of-tokens/1/page_1.png",
      "/slides/bag-of-tokens/1/page_2.png",
      "/slides/bag-of-tokens/1/page_3.png",
      "/slides/bag-of-tokens/1/page_4.png",
      "/slides/bag-of-tokens/1/page_5.png",
      "/slides/bag-of-tokens/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Two Pointers",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "balanced-binary-tree",
    "paths": [
      "/slides/balanced-binary-tree/1/page_1.png",
      "/slides/balanced-binary-tree/1/page_10.png",
      "/slides/balanced-binary-tree/1/page_11.png",
      "/slides/balanced-binary-tree/1/page_12.png",
      "/slides/balanced-binary-tree/1/page_13.png",
      "/slides/balanced-binary-tree/1/page_14.png",
      "/slides/balanced-binary-tree/1/page_15.png",
      "/slides/balanced-binary-tree/1/page_16.png",
      "/slides/balanced-binary-tree/1/page_17.png",
      "/slides/balanced-binary-tree/1/page_18.png",
      "/slides/balanced-binary-tree/1/page_19.png",
      "/slides/balanced-binary-tree/1/page_2.png",
      "/slides/balanced-binary-tree/1/page_20.png",
      "/slides/balanced-binary-tree/1/page_21.png",
      "/slides/balanced-binary-tree/1/page_22.png",
      "/slides/balanced-binary-tree/1/page_23.png",
      "/slides/balanced-binary-tree/1/page_24.png",
      "/slides/balanced-binary-tree/1/page_25.png",
      "/slides/balanced-binary-tree/1/page_26.png",
      "/slides/balanced-binary-tree/1/page_27.png",
      "/slides/balanced-binary-tree/1/page_28.png",
      "/slides/balanced-binary-tree/1/page_29.png",
      "/slides/balanced-binary-tree/1/page_3.png",
      "/slides/balanced-binary-tree/1/page_30.png",
      "/slides/balanced-binary-tree/1/page_31.png",
      "/slides/balanced-binary-tree/1/page_4.png",
      "/slides/balanced-binary-tree/1/page_5.png",
      "/slides/balanced-binary-tree/1/page_6.png",
      "/slides/balanced-binary-tree/1/page_7.png",
      "/slides/balanced-binary-tree/1/page_8.png",
      "/slides/balanced-binary-tree/1/page_9.png"
    ],
    "total": 31,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "basic-calculator-ii",
    "paths": [
      "/slides/basic-calculator-ii/1/page_1.png",
      "/slides/basic-calculator-ii/1/page_10.png",
      "/slides/basic-calculator-ii/1/page_11.png",
      "/slides/basic-calculator-ii/1/page_12.png",
      "/slides/basic-calculator-ii/1/page_2.png",
      "/slides/basic-calculator-ii/1/page_3.png",
      "/slides/basic-calculator-ii/1/page_4.png",
      "/slides/basic-calculator-ii/1/page_5.png",
      "/slides/basic-calculator-ii/1/page_6.png",
      "/slides/basic-calculator-ii/1/page_7.png",
      "/slides/basic-calculator-ii/1/page_8.png",
      "/slides/basic-calculator-ii/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Math",
      " String",
      " Stack"
    ]
  },
  {
    "title": "beautiful-arrangement",
    "paths": [
      "/slides/beautiful-arrangement/1/page_1.png",
      "/slides/beautiful-arrangement/1/page_10.png",
      "/slides/beautiful-arrangement/1/page_11.png",
      "/slides/beautiful-arrangement/1/page_2.png",
      "/slides/beautiful-arrangement/1/page_3.png",
      "/slides/beautiful-arrangement/1/page_4.png",
      "/slides/beautiful-arrangement/1/page_5.png",
      "/slides/beautiful-arrangement/1/page_6.png",
      "/slides/beautiful-arrangement/1/page_7.png",
      "/slides/beautiful-arrangement/1/page_8.png",
      "/slides/beautiful-arrangement/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Backtracking",
      " Bit Manipulation",
      " Bitmask"
    ]
  },
  {
    "title": "best-time-to-buy-and-sell-stock-iii",
    "paths": [
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_1.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_2.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_3.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_4.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_5.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_6.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_7.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_8.png",
      "/slides/best-time-to-buy-and-sell-stock-iii/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "best-time-to-buy-and-sell-stock-with-cooldown",
    "paths": [
      "/slides/best-time-to-buy-and-sell-stock-with-cooldown/1/page_1.png",
      "/slides/best-time-to-buy-and-sell-stock-with-cooldown/1/page_2.png",
      "/slides/best-time-to-buy-and-sell-stock-with-cooldown/1/page_3.png",
      "/slides/best-time-to-buy-and-sell-stock-with-cooldown/1/page_4.png",
      "/slides/best-time-to-buy-and-sell-stock-with-cooldown/1/page_5.png",
      "/slides/best-time-to-buy-and-sell-stock-with-cooldown/1/page_6.png",
      "/slides/best-time-to-buy-and-sell-stock-with-cooldown/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "binary-search-tree-iterator",
    "paths": [
      "/slides/binary-search-tree-iterator/1/page_1.png",
      "/slides/binary-search-tree-iterator/1/page_10.png",
      "/slides/binary-search-tree-iterator/1/page_11.png",
      "/slides/binary-search-tree-iterator/1/page_12.png",
      "/slides/binary-search-tree-iterator/1/page_13.png",
      "/slides/binary-search-tree-iterator/1/page_14.png",
      "/slides/binary-search-tree-iterator/1/page_15.png",
      "/slides/binary-search-tree-iterator/1/page_16.png",
      "/slides/binary-search-tree-iterator/1/page_17.png",
      "/slides/binary-search-tree-iterator/1/page_18.png",
      "/slides/binary-search-tree-iterator/1/page_19.png",
      "/slides/binary-search-tree-iterator/1/page_2.png",
      "/slides/binary-search-tree-iterator/1/page_3.png",
      "/slides/binary-search-tree-iterator/1/page_4.png",
      "/slides/binary-search-tree-iterator/1/page_5.png",
      "/slides/binary-search-tree-iterator/1/page_6.png",
      "/slides/binary-search-tree-iterator/1/page_7.png",
      "/slides/binary-search-tree-iterator/1/page_8.png",
      "/slides/binary-search-tree-iterator/1/page_9.png"
    ],
    "total": 19,
    "topics": [
      "Stack",
      " Tree",
      " Design",
      " Binary Search Tree",
      " Binary Tree",
      " Iterator"
    ]
  },
  {
    "title": "binary-subarrays-with-sum",
    "paths": [
      "/slides/binary-subarrays-with-sum/1/page_1.png",
      "/slides/binary-subarrays-with-sum/1/page_2.png",
      "/slides/binary-subarrays-with-sum/1/page_3.png",
      "/slides/binary-subarrays-with-sum/1/page_4.png",
      "/slides/binary-subarrays-with-sum/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Hash Table",
      " Sliding Window",
      " Prefix Sum"
    ]
  },
  {
    "title": "binary-tree-inorder-traversal",
    "paths": [
      "/slides/binary-tree-inorder-traversal/1/page_1.png",
      "/slides/binary-tree-inorder-traversal/1/page_10.png",
      "/slides/binary-tree-inorder-traversal/1/page_11.png",
      "/slides/binary-tree-inorder-traversal/1/page_12.png",
      "/slides/binary-tree-inorder-traversal/1/page_13.png",
      "/slides/binary-tree-inorder-traversal/1/page_14.png",
      "/slides/binary-tree-inorder-traversal/1/page_2.png",
      "/slides/binary-tree-inorder-traversal/1/page_3.png",
      "/slides/binary-tree-inorder-traversal/1/page_4.png",
      "/slides/binary-tree-inorder-traversal/1/page_5.png",
      "/slides/binary-tree-inorder-traversal/1/page_6.png",
      "/slides/binary-tree-inorder-traversal/1/page_7.png",
      "/slides/binary-tree-inorder-traversal/1/page_8.png",
      "/slides/binary-tree-inorder-traversal/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Stack",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "binary-tree-level-order-traversal-ii",
    "paths": [
      "/slides/binary-tree-level-order-traversal-ii/1/page_1.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_10.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_11.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_12.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_13.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_14.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_15.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_16.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_2.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_3.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_4.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_5.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_6.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_7.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_8.png",
      "/slides/binary-tree-level-order-traversal-ii/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Tree",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "binary-tree-longest-consecutive-sequence-ii",
    "paths": [
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_1.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_10.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_11.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_12.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_13.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_14.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_15.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_16.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_2.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_3.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_4.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_5.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_6.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_7.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_8.png",
      "/slides/binary-tree-longest-consecutive-sequence-ii/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "binary-tree-maximum-path-sum",
    "paths": [
      "/slides/binary-tree-maximum-path-sum/1/page_1.png",
      "/slides/binary-tree-maximum-path-sum/1/page_2.png",
      "/slides/binary-tree-maximum-path-sum/1/page_3.png",
      "/slides/binary-tree-maximum-path-sum/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Dynamic Programming",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "binary-tree-paths",
    "paths": [
      "/slides/binary-tree-paths/1/page_1.png",
      "/slides/binary-tree-paths/1/page_2.png",
      "/slides/binary-tree-paths/1/page_3.png",
      "/slides/binary-tree-paths/1/page_4.png",
      "/slides/binary-tree-paths/1/page_5.png",
      "/slides/binary-tree-paths/1/page_6.png",
      "/slides/binary-tree-paths/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "String",
      " Backtracking",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "binary-tree-postorder-traversal",
    "paths": [
      "/slides/binary-tree-postorder-traversal/1/page_1.png",
      "/slides/binary-tree-postorder-traversal/1/page_10.png",
      "/slides/binary-tree-postorder-traversal/1/page_11.png",
      "/slides/binary-tree-postorder-traversal/1/page_12.png",
      "/slides/binary-tree-postorder-traversal/1/page_13.png",
      "/slides/binary-tree-postorder-traversal/1/page_14.png",
      "/slides/binary-tree-postorder-traversal/1/page_15.png",
      "/slides/binary-tree-postorder-traversal/1/page_16.png",
      "/slides/binary-tree-postorder-traversal/1/page_2.png",
      "/slides/binary-tree-postorder-traversal/1/page_3.png",
      "/slides/binary-tree-postorder-traversal/1/page_4.png",
      "/slides/binary-tree-postorder-traversal/1/page_5.png",
      "/slides/binary-tree-postorder-traversal/1/page_6.png",
      "/slides/binary-tree-postorder-traversal/1/page_7.png",
      "/slides/binary-tree-postorder-traversal/1/page_8.png",
      "/slides/binary-tree-postorder-traversal/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Stack",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "binary-tree-preorder-traversal",
    "paths": [
      "/slides/binary-tree-preorder-traversal/1/page_1.png",
      "/slides/binary-tree-preorder-traversal/1/page_10.png",
      "/slides/binary-tree-preorder-traversal/1/page_11.png",
      "/slides/binary-tree-preorder-traversal/1/page_12.png",
      "/slides/binary-tree-preorder-traversal/1/page_13.png",
      "/slides/binary-tree-preorder-traversal/1/page_14.png",
      "/slides/binary-tree-preorder-traversal/1/page_15.png",
      "/slides/binary-tree-preorder-traversal/1/page_16.png",
      "/slides/binary-tree-preorder-traversal/1/page_2.png",
      "/slides/binary-tree-preorder-traversal/1/page_3.png",
      "/slides/binary-tree-preorder-traversal/1/page_4.png",
      "/slides/binary-tree-preorder-traversal/1/page_5.png",
      "/slides/binary-tree-preorder-traversal/1/page_6.png",
      "/slides/binary-tree-preorder-traversal/1/page_7.png",
      "/slides/binary-tree-preorder-traversal/1/page_8.png",
      "/slides/binary-tree-preorder-traversal/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Stack",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "binary-tree-vertical-order-traversal",
    "paths": [
      "/slides/binary-tree-vertical-order-traversal/1/page_1.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_10.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_11.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_12.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_13.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_14.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_2.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_3.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_4.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_5.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_6.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_7.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_8.png",
      "/slides/binary-tree-vertical-order-traversal/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Hash Table",
      " Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Sorting",
      " Binary Tree"
    ]
  },
  {
    "title": "bitwise-and-of-numbers-range",
    "paths": [
      "/slides/bitwise-and-of-numbers-range/1/page_1.png",
      "/slides/bitwise-and-of-numbers-range/1/page_2.png",
      "/slides/bitwise-and-of-numbers-range/1/page_3.png",
      "/slides/bitwise-and-of-numbers-range/1/page_4.png",
      "/slides/bitwise-and-of-numbers-range/1/page_5.png",
      "/slides/bitwise-and-of-numbers-range/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Bit Manipulation"
    ]
  },
  {
    "title": "boundary-of-binary-tree",
    "paths": [
      "/slides/boundary-of-binary-tree/1/page_1.png",
      "/slides/boundary-of-binary-tree/1/page_2.png",
      "/slides/boundary-of-binary-tree/1/page_3.png",
      "/slides/boundary-of-binary-tree/1/page_4.png",
      "/slides/boundary-of-binary-tree/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "brick-wall",
    "paths": [
      "/slides/brick-wall/1/page_1.png",
      "/slides/brick-wall/1/page_10.png",
      "/slides/brick-wall/1/page_11.png",
      "/slides/brick-wall/1/page_12.png",
      "/slides/brick-wall/1/page_13.png",
      "/slides/brick-wall/1/page_14.png",
      "/slides/brick-wall/1/page_15.png",
      "/slides/brick-wall/1/page_16.png",
      "/slides/brick-wall/1/page_17.png",
      "/slides/brick-wall/1/page_18.png",
      "/slides/brick-wall/1/page_19.png",
      "/slides/brick-wall/1/page_2.png",
      "/slides/brick-wall/1/page_3.png",
      "/slides/brick-wall/1/page_4.png",
      "/slides/brick-wall/1/page_5.png",
      "/slides/brick-wall/1/page_6.png",
      "/slides/brick-wall/1/page_7.png",
      "/slides/brick-wall/1/page_8.png",
      "/slides/brick-wall/1/page_9.png"
    ],
    "total": 19,
    "topics": [
      "Array",
      " Hash Table"
    ]
  },
  {
    "title": "buildings-with-an-ocean-view",
    "paths": [
      "/slides/buildings-with-an-ocean-view/1/page_1.png",
      "/slides/buildings-with-an-ocean-view/1/page_10.png",
      "/slides/buildings-with-an-ocean-view/1/page_11.png",
      "/slides/buildings-with-an-ocean-view/1/page_12.png",
      "/slides/buildings-with-an-ocean-view/1/page_2.png",
      "/slides/buildings-with-an-ocean-view/1/page_3.png",
      "/slides/buildings-with-an-ocean-view/1/page_4.png",
      "/slides/buildings-with-an-ocean-view/1/page_5.png",
      "/slides/buildings-with-an-ocean-view/1/page_6.png",
      "/slides/buildings-with-an-ocean-view/1/page_7.png",
      "/slides/buildings-with-an-ocean-view/1/page_8.png",
      "/slides/buildings-with-an-ocean-view/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "campus-bikes",
    "paths": [
      "/slides/campus-bikes/1/page_1.png",
      "/slides/campus-bikes/1/page_10.png",
      "/slides/campus-bikes/1/page_11.png",
      "/slides/campus-bikes/1/page_12.png",
      "/slides/campus-bikes/1/page_13.png",
      "/slides/campus-bikes/1/page_14.png",
      "/slides/campus-bikes/1/page_2.png",
      "/slides/campus-bikes/1/page_3.png",
      "/slides/campus-bikes/1/page_4.png",
      "/slides/campus-bikes/1/page_5.png",
      "/slides/campus-bikes/1/page_6.png",
      "/slides/campus-bikes/1/page_7.png",
      "/slides/campus-bikes/1/page_8.png",
      "/slides/campus-bikes/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "campus-bikes-ii",
    "paths": [
      "/slides/campus-bikes-ii/1/page_1.png",
      "/slides/campus-bikes-ii/1/page_2.png",
      "/slides/campus-bikes-ii/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Backtracking",
      " Bit Manipulation",
      " Bitmask"
    ]
  },
  {
    "title": "can-make-arithmetic-progression-from-sequence",
    "paths": [
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_1.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_10.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_2.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_3.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_4.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_5.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_6.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_7.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_8.png",
      "/slides/can-make-arithmetic-progression-from-sequence/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Sorting"
    ]
  },
  {
    "title": "cheapest-flights-within-k-stops",
    "paths": [
      "/slides/cheapest-flights-within-k-stops/1/page_1.png",
      "/slides/cheapest-flights-within-k-stops/1/page_2.png",
      "/slides/cheapest-flights-within-k-stops/1/page_3.png",
      "/slides/cheapest-flights-within-k-stops/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Dynamic Programming",
      " Depth-First Search",
      " Breadth-First Search",
      " Graph",
      " Heap (Priority Queue)",
      " Shortest Path"
    ]
  },
  {
    "title": "check-if-two-string-arrays-are-equivalent",
    "paths": [
      "/slides/check-if-two-string-arrays-are-equivalent/1/page_1.png",
      "/slides/check-if-two-string-arrays-are-equivalent/1/page_2.png",
      "/slides/check-if-two-string-arrays-are-equivalent/1/page_3.png",
      "/slides/check-if-two-string-arrays-are-equivalent/1/page_4.png",
      "/slides/check-if-two-string-arrays-are-equivalent/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " String"
    ]
  },
  {
    "title": "checking-existence-of-edge-length-limited-paths",
    "paths": [
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_1.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_10.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_11.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_12.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_13.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_14.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_15.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_16.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_17.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_18.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_19.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_2.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_20.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_3.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_4.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_5.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_6.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_7.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_8.png",
      "/slides/checking-existence-of-edge-length-limited-paths/1/page_9.png"
    ],
    "total": 20,
    "topics": [
      "Array",
      " Two Pointers",
      " Union Find",
      " Graph",
      " Sorting"
    ]
  },
  {
    "title": "climbing-stairs",
    "paths": [
      "/slides/climbing-stairs/1/page_1.png",
      "/slides/climbing-stairs/1/page_2.png",
      "/slides/climbing-stairs/1/page_3.png",
      "/slides/climbing-stairs/1/page_4.png",
      "/slides/climbing-stairs/1/page_5.png",
      "/slides/climbing-stairs/1/page_6.png",
      "/slides/climbing-stairs/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Math",
      " Dynamic Programming",
      " Memoization"
    ]
  },
  {
    "title": "compare-version-numbers",
    "paths": [
      "/slides/compare-version-numbers/1/page_1.png",
      "/slides/compare-version-numbers/1/page_2.png",
      "/slides/compare-version-numbers/1/page_3.png",
      "/slides/compare-version-numbers/1/page_4.png",
      "/slides/compare-version-numbers/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Two Pointers",
      " String"
    ]
  },
  {
    "title": "complement-of-base-10-integer",
    "paths": [
      "/slides/complement-of-base-10-integer/1/page_1.png",
      "/slides/complement-of-base-10-integer/1/page_2.png",
      "/slides/complement-of-base-10-integer/1/page_3.png",
      "/slides/complement-of-base-10-integer/1/page_4.png",
      "/slides/complement-of-base-10-integer/1/page_5.png",
      "/slides/complement-of-base-10-integer/1/page_6.png",
      "/slides/complement-of-base-10-integer/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Bit Manipulation"
    ]
  },
  {
    "title": "construct-binary-search-tree-from-preorder-traversal",
    "paths": [
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_1.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_10.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_11.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_12.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_2.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_3.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_4.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_5.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_6.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_7.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_8.png",
      "/slides/construct-binary-search-tree-from-preorder-traversal/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Stack",
      " Tree",
      " Binary Search Tree",
      " Monotonic Stack",
      " Binary Tree"
    ]
  },
  {
    "title": "construct-binary-tree-from-inorder-and-postorder-traversal",
    "paths": [
      "/slides/construct-binary-tree-from-inorder-and-postorder-traversal/1/page_1.png",
      "/slides/construct-binary-tree-from-inorder-and-postorder-traversal/1/page_2.png",
      "/slides/construct-binary-tree-from-inorder-and-postorder-traversal/1/page_3.png",
      "/slides/construct-binary-tree-from-inorder-and-postorder-traversal/1/page_4.png",
      "/slides/construct-binary-tree-from-inorder-and-postorder-traversal/1/page_5.png",
      "/slides/construct-binary-tree-from-inorder-and-postorder-traversal/1/page_6.png",
      "/slides/construct-binary-tree-from-inorder-and-postorder-traversal/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Hash Table",
      " Divide and Conquer",
      " Tree",
      " Binary Tree"
    ]
  },
  {
    "title": "construct-binary-tree-from-preorder-and-inorder-traversal",
    "paths": [
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_1.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_10.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_11.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_12.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_2.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_3.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_4.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_5.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_6.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_7.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_8.png",
      "/slides/construct-binary-tree-from-preorder-and-inorder-traversal/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Hash Table",
      " Divide and Conquer",
      " Tree",
      " Binary Tree"
    ]
  },
  {
    "title": "construct-string-from-binary-tree",
    "paths": [
      "/slides/construct-string-from-binary-tree/1/page_1.png",
      "/slides/construct-string-from-binary-tree/1/page_10.png",
      "/slides/construct-string-from-binary-tree/1/page_11.png",
      "/slides/construct-string-from-binary-tree/1/page_12.png",
      "/slides/construct-string-from-binary-tree/1/page_13.png",
      "/slides/construct-string-from-binary-tree/1/page_2.png",
      "/slides/construct-string-from-binary-tree/1/page_3.png",
      "/slides/construct-string-from-binary-tree/1/page_4.png",
      "/slides/construct-string-from-binary-tree/1/page_5.png",
      "/slides/construct-string-from-binary-tree/1/page_6.png",
      "/slides/construct-string-from-binary-tree/1/page_7.png",
      "/slides/construct-string-from-binary-tree/1/page_8.png",
      "/slides/construct-string-from-binary-tree/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "String",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "construct-target-array-with-multiple-sums",
    "paths": [
      "/slides/construct-target-array-with-multiple-sums/1/page_1.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_10.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_11.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_2.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_3.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_4.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_5.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_6.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_7.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_8.png",
      "/slides/construct-target-array-with-multiple-sums/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "container-with-most-water",
    "paths": [
      "/slides/container-with-most-water/1/page_1.png",
      "/slides/container-with-most-water/1/page_2.png",
      "/slides/container-with-most-water/1/page_3.png",
      "/slides/container-with-most-water/1/page_4.png",
      "/slides/container-with-most-water/1/page_5.png",
      "/slides/container-with-most-water/1/page_6.png",
      "/slides/container-with-most-water/1/page_7.png",
      "/slides/container-with-most-water/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Two Pointers",
      " Greedy"
    ]
  },
  {
    "title": "contiguous-array",
    "paths": [
      "/slides/contiguous-array/1/page_1.png",
      "/slides/contiguous-array/1/page_2.png",
      "/slides/contiguous-array/1/page_3.png",
      "/slides/contiguous-array/1/page_4.png",
      "/slides/contiguous-array/1/page_5.png",
      "/slides/contiguous-array/1/page_6.png",
      "/slides/contiguous-array/1/page_7.png",
      "/slides/contiguous-array/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " Prefix Sum"
    ]
  },
  {
    "title": "convert-binary-search-tree-to-sorted-doubly-linked-list",
    "paths": [
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_1.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_2.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_3.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_4.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_5.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_6.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_7.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_8.png",
      "/slides/convert-binary-search-tree-to-sorted-doubly-linked-list/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Linked List",
      " Stack",
      " Tree",
      " Depth-First Search",
      " Binary Search Tree",
      " Binary Tree",
      " Doubly-Linked List"
    ]
  },
  {
    "title": "correct-a-binary-tree",
    "paths": [
      "/slides/correct-a-binary-tree/1/page_1.png",
      "/slides/correct-a-binary-tree/1/page_10.png",
      "/slides/correct-a-binary-tree/1/page_11.png",
      "/slides/correct-a-binary-tree/1/page_12.png",
      "/slides/correct-a-binary-tree/1/page_13.png",
      "/slides/correct-a-binary-tree/1/page_14.png",
      "/slides/correct-a-binary-tree/1/page_15.png",
      "/slides/correct-a-binary-tree/1/page_16.png",
      "/slides/correct-a-binary-tree/1/page_17.png",
      "/slides/correct-a-binary-tree/1/page_18.png",
      "/slides/correct-a-binary-tree/1/page_19.png",
      "/slides/correct-a-binary-tree/1/page_2.png",
      "/slides/correct-a-binary-tree/1/page_20.png",
      "/slides/correct-a-binary-tree/1/page_21.png",
      "/slides/correct-a-binary-tree/1/page_22.png",
      "/slides/correct-a-binary-tree/1/page_23.png",
      "/slides/correct-a-binary-tree/1/page_24.png",
      "/slides/correct-a-binary-tree/1/page_25.png",
      "/slides/correct-a-binary-tree/1/page_3.png",
      "/slides/correct-a-binary-tree/1/page_4.png",
      "/slides/correct-a-binary-tree/1/page_5.png",
      "/slides/correct-a-binary-tree/1/page_6.png",
      "/slides/correct-a-binary-tree/1/page_7.png",
      "/slides/correct-a-binary-tree/1/page_8.png",
      "/slides/correct-a-binary-tree/1/page_9.png"
    ],
    "total": 25,
    "topics": [
      "Hash Table",
      " Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "count-all-valid-pickup-and-delivery-options",
    "paths": [
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_1.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_10.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_11.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_12.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_13.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_14.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_15.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_2.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_3.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_4.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_5.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_6.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_7.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_8.png",
      "/slides/count-all-valid-pickup-and-delivery-options/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Math",
      " Dynamic Programming",
      " Combinatorics"
    ]
  },
  {
    "title": "count-good-nodes-in-binary-tree",
    "paths": [
      "/slides/count-good-nodes-in-binary-tree/1/page_1.png",
      "/slides/count-good-nodes-in-binary-tree/1/page_2.png",
      "/slides/count-good-nodes-in-binary-tree/1/page_3.png",
      "/slides/count-good-nodes-in-binary-tree/1/page_4.png",
      "/slides/count-good-nodes-in-binary-tree/1/page_5.png",
      "/slides/count-good-nodes-in-binary-tree/1/page_6.png",
      "/slides/count-good-nodes-in-binary-tree/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "count-nice-pairs-in-an-array",
    "paths": [
      "/slides/count-nice-pairs-in-an-array/1/page_1.png",
      "/slides/count-nice-pairs-in-an-array/1/page_10.png",
      "/slides/count-nice-pairs-in-an-array/1/page_2.png",
      "/slides/count-nice-pairs-in-an-array/1/page_3.png",
      "/slides/count-nice-pairs-in-an-array/1/page_4.png",
      "/slides/count-nice-pairs-in-an-array/1/page_5.png",
      "/slides/count-nice-pairs-in-an-array/1/page_6.png",
      "/slides/count-nice-pairs-in-an-array/1/page_7.png",
      "/slides/count-nice-pairs-in-an-array/1/page_8.png",
      "/slides/count-nice-pairs-in-an-array/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Hash Table",
      " Math",
      " Counting"
    ]
  },
  {
    "title": "count-pairs-in-two-arrays",
    "paths": [
      "/slides/count-pairs-in-two-arrays/1/page_1.png",
      "/slides/count-pairs-in-two-arrays/1/page_2.png",
      "/slides/count-pairs-in-two-arrays/1/page_3.png",
      "/slides/count-pairs-in-two-arrays/1/page_4.png",
      "/slides/count-pairs-in-two-arrays/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Two Pointers",
      " Binary Search",
      " Sorting"
    ]
  },
  {
    "title": "count-substrings-with-only-one-distinct-letter",
    "paths": [
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_1.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_10.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_2.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_3.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_4.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_5.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_6.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_7.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_8.png",
      "/slides/count-substrings-with-only-one-distinct-letter/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Math",
      " String"
    ]
  },
  {
    "title": "count-triplets-that-can-form-two-arrays-of-equal-xor",
    "paths": [
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_1.png",
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_2.png",
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_3.png",
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_4.png",
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_5.png",
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_6.png",
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_7.png",
      "/slides/count-triplets-that-can-form-two-arrays-of-equal-xor/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " Math",
      " Bit Manipulation",
      " Prefix Sum"
    ]
  },
  {
    "title": "count-univalue-subtrees",
    "paths": [
      "/slides/count-univalue-subtrees/1/page_1.png",
      "/slides/count-univalue-subtrees/1/page_2.png",
      "/slides/count-univalue-subtrees/1/page_3.png",
      "/slides/count-univalue-subtrees/1/page_4.png",
      "/slides/count-univalue-subtrees/1/page_5.png",
      "/slides/count-univalue-subtrees/1/page_6.png",
      "/slides/count-univalue-subtrees/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "counting-elements",
    "paths": [
      "/slides/counting-elements/1/page_1.png",
      "/slides/counting-elements/1/page_10.png",
      "/slides/counting-elements/1/page_11.png",
      "/slides/counting-elements/1/page_12.png",
      "/slides/counting-elements/1/page_13.png",
      "/slides/counting-elements/1/page_14.png",
      "/slides/counting-elements/1/page_15.png",
      "/slides/counting-elements/1/page_16.png",
      "/slides/counting-elements/1/page_17.png",
      "/slides/counting-elements/1/page_18.png",
      "/slides/counting-elements/1/page_19.png",
      "/slides/counting-elements/1/page_2.png",
      "/slides/counting-elements/1/page_20.png",
      "/slides/counting-elements/1/page_21.png",
      "/slides/counting-elements/1/page_22.png",
      "/slides/counting-elements/1/page_23.png",
      "/slides/counting-elements/1/page_24.png",
      "/slides/counting-elements/1/page_25.png",
      "/slides/counting-elements/1/page_26.png",
      "/slides/counting-elements/1/page_27.png",
      "/slides/counting-elements/1/page_3.png",
      "/slides/counting-elements/1/page_4.png",
      "/slides/counting-elements/1/page_5.png",
      "/slides/counting-elements/1/page_6.png",
      "/slides/counting-elements/1/page_7.png",
      "/slides/counting-elements/1/page_8.png",
      "/slides/counting-elements/1/page_9.png"
    ],
    "total": 27,
    "topics": [
      "Array",
      " Hash Table"
    ]
  },
  {
    "title": "course-schedule-iii",
    "paths": [
      "/slides/course-schedule-iii/1/page_1.png",
      "/slides/course-schedule-iii/1/page_10.png",
      "/slides/course-schedule-iii/1/page_11.png",
      "/slides/course-schedule-iii/1/page_12.png",
      "/slides/course-schedule-iii/1/page_13.png",
      "/slides/course-schedule-iii/1/page_2.png",
      "/slides/course-schedule-iii/1/page_3.png",
      "/slides/course-schedule-iii/1/page_4.png",
      "/slides/course-schedule-iii/1/page_5.png",
      "/slides/course-schedule-iii/1/page_6.png",
      "/slides/course-schedule-iii/1/page_7.png",
      "/slides/course-schedule-iii/1/page_8.png",
      "/slides/course-schedule-iii/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Array",
      " Greedy",
      " Sorting",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "customers-who-bought-all-products",
    "paths": [
      "/slides/customers-who-bought-all-products/1/page_1.png",
      "/slides/customers-who-bought-all-products/1/page_10.png",
      "/slides/customers-who-bought-all-products/1/page_2.png",
      "/slides/customers-who-bought-all-products/1/page_3.png",
      "/slides/customers-who-bought-all-products/1/page_4.png",
      "/slides/customers-who-bought-all-products/1/page_5.png",
      "/slides/customers-who-bought-all-products/1/page_6.png",
      "/slides/customers-who-bought-all-products/1/page_7.png",
      "/slides/customers-who-bought-all-products/1/page_8.png",
      "/slides/customers-who-bought-all-products/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Database"
    ]
  },
  {
    "title": "daily-temperatures",
    "paths": [
      "/slides/daily-temperatures/1/page_1.png",
      "/slides/daily-temperatures/1/page_10.png",
      "/slides/daily-temperatures/1/page_11.png",
      "/slides/daily-temperatures/1/page_12.png",
      "/slides/daily-temperatures/1/page_2.png",
      "/slides/daily-temperatures/1/page_3.png",
      "/slides/daily-temperatures/1/page_4.png",
      "/slides/daily-temperatures/1/page_5.png",
      "/slides/daily-temperatures/1/page_6.png",
      "/slides/daily-temperatures/1/page_7.png",
      "/slides/daily-temperatures/1/page_8.png",
      "/slides/daily-temperatures/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "decode-ways-ii",
    "paths": [
      "/slides/decode-ways-ii/1/page_1.png",
      "/slides/decode-ways-ii/1/page_10.png",
      "/slides/decode-ways-ii/1/page_2.png",
      "/slides/decode-ways-ii/1/page_3.png",
      "/slides/decode-ways-ii/1/page_4.png",
      "/slides/decode-ways-ii/1/page_5.png",
      "/slides/decode-ways-ii/1/page_6.png",
      "/slides/decode-ways-ii/1/page_7.png",
      "/slides/decode-ways-ii/1/page_8.png",
      "/slides/decode-ways-ii/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "deepest-leaves-sum",
    "paths": [
      "/slides/deepest-leaves-sum/1/page_1.png",
      "/slides/deepest-leaves-sum/1/page_2.png",
      "/slides/deepest-leaves-sum/1/page_3.png",
      "/slides/deepest-leaves-sum/1/page_4.png",
      "/slides/deepest-leaves-sum/1/page_5.png",
      "/slides/deepest-leaves-sum/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "delete-and-earn",
    "paths": [
      "/slides/delete-and-earn/1/page_1.png",
      "/slides/delete-and-earn/1/page_2.png",
      "/slides/delete-and-earn/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Array",
      " Hash Table",
      " Dynamic Programming"
    ]
  },
  {
    "title": "delete-leaves-with-a-given-value",
    "paths": [
      "/slides/delete-leaves-with-a-given-value/1/page_1.png",
      "/slides/delete-leaves-with-a-given-value/1/page_10.png",
      "/slides/delete-leaves-with-a-given-value/1/page_11.png",
      "/slides/delete-leaves-with-a-given-value/1/page_12.png",
      "/slides/delete-leaves-with-a-given-value/1/page_13.png",
      "/slides/delete-leaves-with-a-given-value/1/page_14.png",
      "/slides/delete-leaves-with-a-given-value/1/page_15.png",
      "/slides/delete-leaves-with-a-given-value/1/page_16.png",
      "/slides/delete-leaves-with-a-given-value/1/page_17.png",
      "/slides/delete-leaves-with-a-given-value/1/page_18.png",
      "/slides/delete-leaves-with-a-given-value/1/page_2.png",
      "/slides/delete-leaves-with-a-given-value/1/page_3.png",
      "/slides/delete-leaves-with-a-given-value/1/page_4.png",
      "/slides/delete-leaves-with-a-given-value/1/page_5.png",
      "/slides/delete-leaves-with-a-given-value/1/page_6.png",
      "/slides/delete-leaves-with-a-given-value/1/page_7.png",
      "/slides/delete-leaves-with-a-given-value/1/page_8.png",
      "/slides/delete-leaves-with-a-given-value/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "delete-operation-for-two-strings",
    "paths": [
      "/slides/delete-operation-for-two-strings/1/page_1.png",
      "/slides/delete-operation-for-two-strings/1/page_10.png",
      "/slides/delete-operation-for-two-strings/1/page_11.png",
      "/slides/delete-operation-for-two-strings/1/page_12.png",
      "/slides/delete-operation-for-two-strings/1/page_13.png",
      "/slides/delete-operation-for-two-strings/1/page_14.png",
      "/slides/delete-operation-for-two-strings/1/page_15.png",
      "/slides/delete-operation-for-two-strings/1/page_16.png",
      "/slides/delete-operation-for-two-strings/1/page_17.png",
      "/slides/delete-operation-for-two-strings/1/page_18.png",
      "/slides/delete-operation-for-two-strings/1/page_19.png",
      "/slides/delete-operation-for-two-strings/1/page_2.png",
      "/slides/delete-operation-for-two-strings/1/page_20.png",
      "/slides/delete-operation-for-two-strings/1/page_21.png",
      "/slides/delete-operation-for-two-strings/1/page_22.png",
      "/slides/delete-operation-for-two-strings/1/page_23.png",
      "/slides/delete-operation-for-two-strings/1/page_24.png",
      "/slides/delete-operation-for-two-strings/1/page_25.png",
      "/slides/delete-operation-for-two-strings/1/page_26.png",
      "/slides/delete-operation-for-two-strings/1/page_27.png",
      "/slides/delete-operation-for-two-strings/1/page_28.png",
      "/slides/delete-operation-for-two-strings/1/page_3.png",
      "/slides/delete-operation-for-two-strings/1/page_4.png",
      "/slides/delete-operation-for-two-strings/1/page_5.png",
      "/slides/delete-operation-for-two-strings/1/page_6.png",
      "/slides/delete-operation-for-two-strings/1/page_7.png",
      "/slides/delete-operation-for-two-strings/1/page_8.png",
      "/slides/delete-operation-for-two-strings/1/page_9.png"
    ],
    "total": 28,
    "topics": [
      "String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "design-add-and-search-words-data-structure",
    "paths": [
      "/slides/design-add-and-search-words-data-structure/1/page_1.png",
      "/slides/design-add-and-search-words-data-structure/1/page_2.png",
      "/slides/design-add-and-search-words-data-structure/1/page_3.png",
      "/slides/design-add-and-search-words-data-structure/1/page_4.png",
      "/slides/design-add-and-search-words-data-structure/1/page_5.png",
      "/slides/design-add-and-search-words-data-structure/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "String",
      " Depth-First Search",
      " Design",
      " Trie"
    ]
  },
  {
    "title": "design-browser-history",
    "paths": [
      "/slides/design-browser-history/1/page_1.png",
      "/slides/design-browser-history/1/page_10.png",
      "/slides/design-browser-history/1/page_11.png",
      "/slides/design-browser-history/1/page_12.png",
      "/slides/design-browser-history/1/page_13.png",
      "/slides/design-browser-history/1/page_2.png",
      "/slides/design-browser-history/1/page_3.png",
      "/slides/design-browser-history/1/page_4.png",
      "/slides/design-browser-history/1/page_5.png",
      "/slides/design-browser-history/1/page_6.png",
      "/slides/design-browser-history/1/page_7.png",
      "/slides/design-browser-history/1/page_8.png",
      "/slides/design-browser-history/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Array",
      " Linked List",
      " Stack",
      " Design",
      " Doubly-Linked List",
      " Data Stream"
    ]
  },
  {
    "title": "design-excel-sum-formula",
    "paths": [
      "/slides/design-excel-sum-formula/1/page_1.png",
      "/slides/design-excel-sum-formula/1/page_10.png",
      "/slides/design-excel-sum-formula/1/page_11.png",
      "/slides/design-excel-sum-formula/1/page_12.png",
      "/slides/design-excel-sum-formula/1/page_13.png",
      "/slides/design-excel-sum-formula/1/page_2.png",
      "/slides/design-excel-sum-formula/1/page_3.png",
      "/slides/design-excel-sum-formula/1/page_4.png",
      "/slides/design-excel-sum-formula/1/page_5.png",
      "/slides/design-excel-sum-formula/1/page_6.png",
      "/slides/design-excel-sum-formula/1/page_7.png",
      "/slides/design-excel-sum-formula/1/page_8.png",
      "/slides/design-excel-sum-formula/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Array",
      " Graph",
      " Design",
      " Topological Sort",
      " Matrix"
    ]
  },
  {
    "title": "design-hashset",
    "paths": [
      "/slides/design-hashset/1/page_1.png",
      "/slides/design-hashset/1/page_2.png",
      "/slides/design-hashset/1/page_3.png",
      "/slides/design-hashset/1/page_4.png",
      "/slides/design-hashset/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Hash Table",
      " Linked List",
      " Design",
      " Hash Function"
    ]
  },
  {
    "title": "design-parking-system",
    "paths": [
      "/slides/design-parking-system/1/page_1.png",
      "/slides/design-parking-system/1/page_10.png",
      "/slides/design-parking-system/1/page_11.png",
      "/slides/design-parking-system/1/page_12.png",
      "/slides/design-parking-system/1/page_13.png",
      "/slides/design-parking-system/1/page_14.png",
      "/slides/design-parking-system/1/page_15.png",
      "/slides/design-parking-system/1/page_16.png",
      "/slides/design-parking-system/1/page_17.png",
      "/slides/design-parking-system/1/page_18.png",
      "/slides/design-parking-system/1/page_19.png",
      "/slides/design-parking-system/1/page_2.png",
      "/slides/design-parking-system/1/page_20.png",
      "/slides/design-parking-system/1/page_21.png",
      "/slides/design-parking-system/1/page_22.png",
      "/slides/design-parking-system/1/page_23.png",
      "/slides/design-parking-system/1/page_24.png",
      "/slides/design-parking-system/1/page_25.png",
      "/slides/design-parking-system/1/page_26.png",
      "/slides/design-parking-system/1/page_27.png",
      "/slides/design-parking-system/1/page_28.png",
      "/slides/design-parking-system/1/page_29.png",
      "/slides/design-parking-system/1/page_3.png",
      "/slides/design-parking-system/1/page_30.png",
      "/slides/design-parking-system/1/page_31.png",
      "/slides/design-parking-system/1/page_4.png",
      "/slides/design-parking-system/1/page_5.png",
      "/slides/design-parking-system/1/page_6.png",
      "/slides/design-parking-system/1/page_7.png",
      "/slides/design-parking-system/1/page_8.png",
      "/slides/design-parking-system/1/page_9.png"
    ],
    "total": 31,
    "topics": [
      "Design",
      " Simulation",
      " Counting"
    ]
  },
  {
    "title": "design-tic-tac-toe",
    "paths": [
      "/slides/design-tic-tac-toe/1/page_1.png",
      "/slides/design-tic-tac-toe/1/page_2.png",
      "/slides/design-tic-tac-toe/1/page_3.png",
      "/slides/design-tic-tac-toe/1/page_4.png",
      "/slides/design-tic-tac-toe/1/page_5.png",
      "/slides/design-tic-tac-toe/1/page_6.png",
      "/slides/design-tic-tac-toe/1/page_7.png",
      "/slides/design-tic-tac-toe/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " Design",
      " Matrix",
      " Simulation"
    ]
  },
  {
    "title": "distribute-coins-in-binary-tree",
    "paths": [
      "/slides/distribute-coins-in-binary-tree/1/page_1.png",
      "/slides/distribute-coins-in-binary-tree/1/page_10.png",
      "/slides/distribute-coins-in-binary-tree/1/page_11.png",
      "/slides/distribute-coins-in-binary-tree/1/page_2.png",
      "/slides/distribute-coins-in-binary-tree/1/page_3.png",
      "/slides/distribute-coins-in-binary-tree/1/page_4.png",
      "/slides/distribute-coins-in-binary-tree/1/page_5.png",
      "/slides/distribute-coins-in-binary-tree/1/page_6.png",
      "/slides/distribute-coins-in-binary-tree/1/page_7.png",
      "/slides/distribute-coins-in-binary-tree/1/page_8.png",
      "/slides/distribute-coins-in-binary-tree/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "divide-two-integers",
    "paths": [
      "/slides/divide-two-integers/1/page_1.png",
      "/slides/divide-two-integers/1/page_10.png",
      "/slides/divide-two-integers/1/page_11.png",
      "/slides/divide-two-integers/1/page_12.png",
      "/slides/divide-two-integers/1/page_13.png",
      "/slides/divide-two-integers/1/page_14.png",
      "/slides/divide-two-integers/1/page_15.png",
      "/slides/divide-two-integers/1/page_16.png",
      "/slides/divide-two-integers/1/page_2.png",
      "/slides/divide-two-integers/1/page_3.png",
      "/slides/divide-two-integers/1/page_4.png",
      "/slides/divide-two-integers/1/page_5.png",
      "/slides/divide-two-integers/1/page_6.png",
      "/slides/divide-two-integers/1/page_7.png",
      "/slides/divide-two-integers/1/page_8.png",
      "/slides/divide-two-integers/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Math",
      " Bit Manipulation"
    ]
  },
  {
    "title": "dota2-senate",
    "paths": [
      "/slides/dota2-senate/1/page_1.png",
      "/slides/dota2-senate/1/page_10.png",
      "/slides/dota2-senate/1/page_11.png",
      "/slides/dota2-senate/1/page_12.png",
      "/slides/dota2-senate/1/page_13.png",
      "/slides/dota2-senate/1/page_14.png",
      "/slides/dota2-senate/1/page_2.png",
      "/slides/dota2-senate/1/page_3.png",
      "/slides/dota2-senate/1/page_4.png",
      "/slides/dota2-senate/1/page_5.png",
      "/slides/dota2-senate/1/page_6.png",
      "/slides/dota2-senate/1/page_7.png",
      "/slides/dota2-senate/1/page_8.png",
      "/slides/dota2-senate/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "String",
      " Greedy",
      " Queue"
    ]
  },
  {
    "title": "encode-n-ary-tree-to-binary-tree",
    "paths": [
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_1.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_2.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_3.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_4.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_5.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_6.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_7.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_8.png",
      "/slides/encode-n-ary-tree-to-binary-tree/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Design",
      " Binary Tree"
    ]
  },
  {
    "title": "erect-the-fence",
    "paths": [
      "/slides/erect-the-fence/1/page_1.png",
      "/slides/erect-the-fence/1/page_10.png",
      "/slides/erect-the-fence/1/page_11.png",
      "/slides/erect-the-fence/1/page_12.png",
      "/slides/erect-the-fence/1/page_13.png",
      "/slides/erect-the-fence/1/page_14.png",
      "/slides/erect-the-fence/1/page_15.png",
      "/slides/erect-the-fence/1/page_16.png",
      "/slides/erect-the-fence/1/page_17.png",
      "/slides/erect-the-fence/1/page_18.png",
      "/slides/erect-the-fence/1/page_19.png",
      "/slides/erect-the-fence/1/page_2.png",
      "/slides/erect-the-fence/1/page_20.png",
      "/slides/erect-the-fence/1/page_21.png",
      "/slides/erect-the-fence/1/page_22.png",
      "/slides/erect-the-fence/1/page_23.png",
      "/slides/erect-the-fence/1/page_24.png",
      "/slides/erect-the-fence/1/page_25.png",
      "/slides/erect-the-fence/1/page_26.png",
      "/slides/erect-the-fence/1/page_27.png",
      "/slides/erect-the-fence/1/page_28.png",
      "/slides/erect-the-fence/1/page_29.png",
      "/slides/erect-the-fence/1/page_3.png",
      "/slides/erect-the-fence/1/page_30.png",
      "/slides/erect-the-fence/1/page_31.png",
      "/slides/erect-the-fence/1/page_32.png",
      "/slides/erect-the-fence/1/page_33.png",
      "/slides/erect-the-fence/1/page_34.png",
      "/slides/erect-the-fence/1/page_35.png",
      "/slides/erect-the-fence/1/page_36.png",
      "/slides/erect-the-fence/1/page_37.png",
      "/slides/erect-the-fence/1/page_38.png",
      "/slides/erect-the-fence/1/page_39.png",
      "/slides/erect-the-fence/1/page_4.png",
      "/slides/erect-the-fence/1/page_40.png",
      "/slides/erect-the-fence/1/page_5.png",
      "/slides/erect-the-fence/1/page_6.png",
      "/slides/erect-the-fence/1/page_7.png",
      "/slides/erect-the-fence/1/page_8.png",
      "/slides/erect-the-fence/1/page_9.png"
    ],
    "total": 40,
    "topics": [
      "Array",
      " Math",
      " Geometry"
    ]
  },
  {
    "title": "evaluate-reverse-polish-notation",
    "paths": [
      "/slides/evaluate-reverse-polish-notation/1/page_1.png",
      "/slides/evaluate-reverse-polish-notation/1/page_10.png",
      "/slides/evaluate-reverse-polish-notation/1/page_11.png",
      "/slides/evaluate-reverse-polish-notation/1/page_12.png",
      "/slides/evaluate-reverse-polish-notation/1/page_13.png",
      "/slides/evaluate-reverse-polish-notation/1/page_14.png",
      "/slides/evaluate-reverse-polish-notation/1/page_15.png",
      "/slides/evaluate-reverse-polish-notation/1/page_16.png",
      "/slides/evaluate-reverse-polish-notation/1/page_17.png",
      "/slides/evaluate-reverse-polish-notation/1/page_18.png",
      "/slides/evaluate-reverse-polish-notation/1/page_2.png",
      "/slides/evaluate-reverse-polish-notation/1/page_3.png",
      "/slides/evaluate-reverse-polish-notation/1/page_4.png",
      "/slides/evaluate-reverse-polish-notation/1/page_5.png",
      "/slides/evaluate-reverse-polish-notation/1/page_6.png",
      "/slides/evaluate-reverse-polish-notation/1/page_7.png",
      "/slides/evaluate-reverse-polish-notation/1/page_8.png",
      "/slides/evaluate-reverse-polish-notation/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Array",
      " Math",
      " Stack"
    ]
  },
  {
    "title": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
    "paths": [
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_1.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_2.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_3.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_4.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_5.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_6.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_7.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_8.png",
      "/slides/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "find-all-anagrams-in-a-string",
    "paths": [
      "/slides/find-all-anagrams-in-a-string/1/page_1.png",
      "/slides/find-all-anagrams-in-a-string/1/page_2.png",
      "/slides/find-all-anagrams-in-a-string/1/page_3.png",
      "/slides/find-all-anagrams-in-a-string/1/page_4.png",
      "/slides/find-all-anagrams-in-a-string/1/page_5.png",
      "/slides/find-all-anagrams-in-a-string/1/page_6.png",
      "/slides/find-all-anagrams-in-a-string/1/page_7.png",
      "/slides/find-all-anagrams-in-a-string/1/page_8.png",
      "/slides/find-all-anagrams-in-a-string/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Hash Table",
      " String",
      " Sliding Window"
    ]
  },
  {
    "title": "find-all-numbers-disappeared-in-an-array",
    "paths": [
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_1.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_2.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_3.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_4.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_5.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_6.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_7.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_8.png",
      "/slides/find-all-numbers-disappeared-in-an-array/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Hash Table"
    ]
  },
  {
    "title": "find-duplicate-file-in-system",
    "paths": [
      "/slides/find-duplicate-file-in-system/1/page_1.png",
      "/slides/find-duplicate-file-in-system/1/page_2.png",
      "/slides/find-duplicate-file-in-system/1/page_3.png",
      "/slides/find-duplicate-file-in-system/1/page_4.png",
      "/slides/find-duplicate-file-in-system/1/page_5.png",
      "/slides/find-duplicate-file-in-system/1/page_6.png",
      "/slides/find-duplicate-file-in-system/1/page_7.png",
      "/slides/find-duplicate-file-in-system/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " String"
    ]
  },
  {
    "title": "find-k-closest-elements",
    "paths": [
      "/slides/find-k-closest-elements/1/page_1.png",
      "/slides/find-k-closest-elements/1/page_2.png",
      "/slides/find-k-closest-elements/1/page_3.png",
      "/slides/find-k-closest-elements/1/page_4.png",
      "/slides/find-k-closest-elements/1/page_5.png",
      "/slides/find-k-closest-elements/1/page_6.png",
      "/slides/find-k-closest-elements/1/page_7.png",
      "/slides/find-k-closest-elements/1/page_8.png",
      "/slides/find-k-closest-elements/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Two Pointers",
      " Binary Search",
      " Sliding Window",
      " Sorting",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "find-k-length-substrings-with-no-repeated-characters",
    "paths": [
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_1.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_10.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_11.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_12.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_13.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_14.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_15.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_16.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_17.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_18.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_19.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_2.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_20.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_21.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_22.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_23.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_3.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_4.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_5.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_6.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_7.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_8.png",
      "/slides/find-k-length-substrings-with-no-repeated-characters/1/page_9.png"
    ],
    "total": 23,
    "topics": [
      "Hash Table",
      " String",
      " Sliding Window"
    ]
  },
  {
    "title": "find-k-pairs-with-smallest-sums",
    "paths": [
      "/slides/find-k-pairs-with-smallest-sums/1/page_1.png",
      "/slides/find-k-pairs-with-smallest-sums/1/page_2.png",
      "/slides/find-k-pairs-with-smallest-sums/1/page_3.png",
      "/slides/find-k-pairs-with-smallest-sums/1/page_4.png",
      "/slides/find-k-pairs-with-smallest-sums/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "find-mode-in-binary-search-tree",
    "paths": [
      "/slides/find-mode-in-binary-search-tree/1/page_1.png",
      "/slides/find-mode-in-binary-search-tree/1/page_2.png",
      "/slides/find-mode-in-binary-search-tree/1/page_3.png",
      "/slides/find-mode-in-binary-search-tree/1/page_4.png",
      "/slides/find-mode-in-binary-search-tree/1/page_5.png",
      "/slides/find-mode-in-binary-search-tree/1/page_6.png",
      "/slides/find-mode-in-binary-search-tree/1/page_7.png",
      "/slides/find-mode-in-binary-search-tree/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Search Tree",
      " Binary Tree"
    ]
  },
  {
    "title": "find-numbers-with-even-number-of-digits",
    "paths": [
      "/slides/find-numbers-with-even-number-of-digits/1/page_1.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_10.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_11.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_12.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_13.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_14.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_15.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_16.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_2.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_3.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_4.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_5.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_6.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_7.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_8.png",
      "/slides/find-numbers-with-even-number-of-digits/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Array"
    ]
  },
  {
    "title": "find-peak-element",
    "paths": [
      "/slides/find-peak-element/1/page_1.png",
      "/slides/find-peak-element/1/page_2.png",
      "/slides/find-peak-element/1/page_3.png",
      "/slides/find-peak-element/1/page_4.png",
      "/slides/find-peak-element/1/page_5.png",
      "/slides/find-peak-element/1/page_6.png",
      "/slides/find-peak-element/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Binary Search"
    ]
  },
  {
    "title": "find-permutation",
    "paths": [
      "/slides/find-permutation/1/page_1.png",
      "/slides/find-permutation/1/page_10.png",
      "/slides/find-permutation/1/page_11.png",
      "/slides/find-permutation/1/page_12.png",
      "/slides/find-permutation/1/page_13.png",
      "/slides/find-permutation/1/page_14.png",
      "/slides/find-permutation/1/page_15.png",
      "/slides/find-permutation/1/page_16.png",
      "/slides/find-permutation/1/page_17.png",
      "/slides/find-permutation/1/page_18.png",
      "/slides/find-permutation/1/page_19.png",
      "/slides/find-permutation/1/page_2.png",
      "/slides/find-permutation/1/page_20.png",
      "/slides/find-permutation/1/page_3.png",
      "/slides/find-permutation/1/page_4.png",
      "/slides/find-permutation/1/page_5.png",
      "/slides/find-permutation/1/page_6.png",
      "/slides/find-permutation/1/page_7.png",
      "/slides/find-permutation/1/page_8.png",
      "/slides/find-permutation/1/page_9.png"
    ],
    "total": 20,
    "topics": [
      "Array",
      " String",
      " Stack",
      " Greedy"
    ]
  },
  {
    "title": "find-right-interval",
    "paths": [
      "/slides/find-right-interval/1/page_1.png",
      "/slides/find-right-interval/1/page_10.png",
      "/slides/find-right-interval/1/page_11.png",
      "/slides/find-right-interval/1/page_12.png",
      "/slides/find-right-interval/1/page_13.png",
      "/slides/find-right-interval/1/page_14.png",
      "/slides/find-right-interval/1/page_15.png",
      "/slides/find-right-interval/1/page_16.png",
      "/slides/find-right-interval/1/page_2.png",
      "/slides/find-right-interval/1/page_3.png",
      "/slides/find-right-interval/1/page_4.png",
      "/slides/find-right-interval/1/page_5.png",
      "/slides/find-right-interval/1/page_6.png",
      "/slides/find-right-interval/1/page_7.png",
      "/slides/find-right-interval/1/page_8.png",
      "/slides/find-right-interval/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Array",
      " Binary Search",
      " Sorting"
    ]
  },
  {
    "title": "find-servers-that-handled-most-number-of-requests",
    "paths": [
      "/slides/find-servers-that-handled-most-number-of-requests/1/page_1.png",
      "/slides/find-servers-that-handled-most-number-of-requests/1/page_2.png",
      "/slides/find-servers-that-handled-most-number-of-requests/1/page_3.png",
      "/slides/find-servers-that-handled-most-number-of-requests/1/page_4.png",
      "/slides/find-servers-that-handled-most-number-of-requests/1/page_5.png",
      "/slides/find-servers-that-handled-most-number-of-requests/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Greedy",
      " Heap (Priority Queue)",
      " Ordered Set"
    ]
  },
  {
    "title": "find-smallest-common-element-in-all-rows",
    "paths": [
      "/slides/find-smallest-common-element-in-all-rows/1/page_1.png",
      "/slides/find-smallest-common-element-in-all-rows/1/page_2.png",
      "/slides/find-smallest-common-element-in-all-rows/1/page_3.png",
      "/slides/find-smallest-common-element-in-all-rows/1/page_4.png",
      "/slides/find-smallest-common-element-in-all-rows/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Hash Table",
      " Binary Search",
      " Matrix",
      " Counting"
    ]
  },
  {
    "title": "find-the-celebrity",
    "paths": [
      "/slides/find-the-celebrity/1/page_1.png",
      "/slides/find-the-celebrity/1/page_2.png",
      "/slides/find-the-celebrity/1/page_3.png",
      "/slides/find-the-celebrity/1/page_4.png",
      "/slides/find-the-celebrity/1/page_5.png",
      "/slides/find-the-celebrity/1/page_6.png",
      "/slides/find-the-celebrity/1/page_7.png",
      "/slides/find-the-celebrity/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Two Pointers",
      " Graph",
      " Interactive"
    ]
  },
  {
    "title": "find-the-derangement-of-an-array",
    "paths": [
      "/slides/find-the-derangement-of-an-array/1/page_1.png",
      "/slides/find-the-derangement-of-an-array/1/page_10.png",
      "/slides/find-the-derangement-of-an-array/1/page_11.png",
      "/slides/find-the-derangement-of-an-array/1/page_12.png",
      "/slides/find-the-derangement-of-an-array/1/page_2.png",
      "/slides/find-the-derangement-of-an-array/1/page_3.png",
      "/slides/find-the-derangement-of-an-array/1/page_4.png",
      "/slides/find-the-derangement-of-an-array/1/page_5.png",
      "/slides/find-the-derangement-of-an-array/1/page_6.png",
      "/slides/find-the-derangement-of-an-array/1/page_7.png",
      "/slides/find-the-derangement-of-an-array/1/page_8.png",
      "/slides/find-the-derangement-of-an-array/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Math",
      " Dynamic Programming"
    ]
  },
  {
    "title": "find-the-index-of-the-first-occurrence-in-a-string",
    "paths": [
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_1.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_10.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_11.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_12.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_13.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_14.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_15.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_16.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_17.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_18.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_19.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_2.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_20.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_21.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_22.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_23.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_24.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_25.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_26.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_27.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_28.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_29.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_3.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_30.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_31.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_32.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_4.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_5.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_6.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_7.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_8.png",
      "/slides/find-the-index-of-the-first-occurrence-in-a-string/1/page_9.png"
    ],
    "total": 32,
    "topics": [
      "Two Pointers",
      " String",
      " String Matching"
    ]
  },
  {
    "title": "find-the-longest-valid-obstacle-course-at-each-position",
    "paths": [
      "/slides/find-the-longest-valid-obstacle-course-at-each-position/1/page_1.png",
      "/slides/find-the-longest-valid-obstacle-course-at-each-position/1/page_2.png",
      "/slides/find-the-longest-valid-obstacle-course-at-each-position/1/page_3.png",
      "/slides/find-the-longest-valid-obstacle-course-at-each-position/1/page_4.png",
      "/slides/find-the-longest-valid-obstacle-course-at-each-position/1/page_5.png",
      "/slides/find-the-longest-valid-obstacle-course-at-each-position/1/page_6.png",
      "/slides/find-the-longest-valid-obstacle-course-at-each-position/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Binary Search",
      " Binary Indexed Tree"
    ]
  },
  {
    "title": "find-the-smallest-divisor-given-a-threshold",
    "paths": [
      "/slides/find-the-smallest-divisor-given-a-threshold/1/page_1.png",
      "/slides/find-the-smallest-divisor-given-a-threshold/1/page_2.png",
      "/slides/find-the-smallest-divisor-given-a-threshold/1/page_3.png",
      "/slides/find-the-smallest-divisor-given-a-threshold/1/page_4.png",
      "/slides/find-the-smallest-divisor-given-a-threshold/1/page_5.png",
      "/slides/find-the-smallest-divisor-given-a-threshold/1/page_6.png",
      "/slides/find-the-smallest-divisor-given-a-threshold/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Binary Search"
    ]
  },
  {
    "title": "find-the-winner-of-an-array-game",
    "paths": [
      "/slides/find-the-winner-of-an-array-game/1/page_1.png",
      "/slides/find-the-winner-of-an-array-game/1/page_2.png",
      "/slides/find-the-winner-of-an-array-game/1/page_3.png",
      "/slides/find-the-winner-of-an-array-game/1/page_4.png",
      "/slides/find-the-winner-of-an-array-game/1/page_5.png",
      "/slides/find-the-winner-of-an-array-game/1/page_6.png",
      "/slides/find-the-winner-of-an-array-game/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Simulation"
    ]
  },
  {
    "title": "first-missing-positive",
    "paths": [
      "/slides/first-missing-positive/1/page_1.png",
      "/slides/first-missing-positive/1/page_2.png",
      "/slides/first-missing-positive/1/page_3.png",
      "/slides/first-missing-positive/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array",
      " Hash Table"
    ]
  },
  {
    "title": "first-unique-character-in-a-string",
    "paths": [
      "/slides/first-unique-character-in-a-string/1/page_1.png",
      "/slides/first-unique-character-in-a-string/1/page_10.png",
      "/slides/first-unique-character-in-a-string/1/page_11.png",
      "/slides/first-unique-character-in-a-string/1/page_12.png",
      "/slides/first-unique-character-in-a-string/1/page_13.png",
      "/slides/first-unique-character-in-a-string/1/page_14.png",
      "/slides/first-unique-character-in-a-string/1/page_15.png",
      "/slides/first-unique-character-in-a-string/1/page_2.png",
      "/slides/first-unique-character-in-a-string/1/page_3.png",
      "/slides/first-unique-character-in-a-string/1/page_4.png",
      "/slides/first-unique-character-in-a-string/1/page_5.png",
      "/slides/first-unique-character-in-a-string/1/page_6.png",
      "/slides/first-unique-character-in-a-string/1/page_7.png",
      "/slides/first-unique-character-in-a-string/1/page_8.png",
      "/slides/first-unique-character-in-a-string/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Hash Table",
      " String",
      " Queue",
      " Counting"
    ]
  },
  {
    "title": "first-unique-number",
    "paths": [
      "/slides/first-unique-number/1/page_1.png",
      "/slides/first-unique-number/1/page_10.png",
      "/slides/first-unique-number/1/page_11.png",
      "/slides/first-unique-number/1/page_12.png",
      "/slides/first-unique-number/1/page_13.png",
      "/slides/first-unique-number/1/page_14.png",
      "/slides/first-unique-number/1/page_15.png",
      "/slides/first-unique-number/1/page_16.png",
      "/slides/first-unique-number/1/page_17.png",
      "/slides/first-unique-number/1/page_18.png",
      "/slides/first-unique-number/1/page_19.png",
      "/slides/first-unique-number/1/page_2.png",
      "/slides/first-unique-number/1/page_20.png",
      "/slides/first-unique-number/1/page_21.png",
      "/slides/first-unique-number/1/page_22.png",
      "/slides/first-unique-number/1/page_23.png",
      "/slides/first-unique-number/1/page_24.png",
      "/slides/first-unique-number/1/page_25.png",
      "/slides/first-unique-number/1/page_26.png",
      "/slides/first-unique-number/1/page_3.png",
      "/slides/first-unique-number/1/page_4.png",
      "/slides/first-unique-number/1/page_5.png",
      "/slides/first-unique-number/1/page_6.png",
      "/slides/first-unique-number/1/page_7.png",
      "/slides/first-unique-number/1/page_8.png",
      "/slides/first-unique-number/1/page_9.png"
    ],
    "total": 26,
    "topics": [
      "Array",
      " Hash Table",
      " Design",
      " Queue",
      " Data Stream"
    ]
  },
  {
    "title": "fixed-point",
    "paths": [
      "/slides/fixed-point/1/page_1.png",
      "/slides/fixed-point/1/page_2.png",
      "/slides/fixed-point/1/page_3.png",
      "/slides/fixed-point/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array",
      " Binary Search"
    ]
  },
  {
    "title": "flatten-a-multilevel-doubly-linked-list",
    "paths": [
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_1.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_10.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_11.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_2.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_3.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_4.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_5.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_6.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_7.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_8.png",
      "/slides/flatten-a-multilevel-doubly-linked-list/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Linked List",
      " Depth-First Search",
      " Doubly-Linked List"
    ]
  },
  {
    "title": "flatten-nested-list-iterator",
    "paths": [
      "/slides/flatten-nested-list-iterator/1/page_1.png",
      "/slides/flatten-nested-list-iterator/1/page_2.png",
      "/slides/flatten-nested-list-iterator/1/page_3.png",
      "/slides/flatten-nested-list-iterator/1/page_4.png",
      "/slides/flatten-nested-list-iterator/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Stack",
      " Tree",
      " Depth-First Search",
      " Design",
      " Queue",
      " Iterator"
    ]
  },
  {
    "title": "fruit-into-baskets",
    "paths": [
      "/slides/fruit-into-baskets/1/page_1.png",
      "/slides/fruit-into-baskets/1/page_2.png",
      "/slides/fruit-into-baskets/1/page_3.png",
      "/slides/fruit-into-baskets/1/page_4.png",
      "/slides/fruit-into-baskets/1/page_5.png",
      "/slides/fruit-into-baskets/1/page_6.png",
      "/slides/fruit-into-baskets/1/page_7.png",
      "/slides/fruit-into-baskets/1/page_8.png",
      "/slides/fruit-into-baskets/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Hash Table",
      " Sliding Window"
    ]
  },
  {
    "title": "furthest-building-you-can-reach",
    "paths": [
      "/slides/furthest-building-you-can-reach/1/page_1.png",
      "/slides/furthest-building-you-can-reach/1/page_10.png",
      "/slides/furthest-building-you-can-reach/1/page_11.png",
      "/slides/furthest-building-you-can-reach/1/page_12.png",
      "/slides/furthest-building-you-can-reach/1/page_13.png",
      "/slides/furthest-building-you-can-reach/1/page_14.png",
      "/slides/furthest-building-you-can-reach/1/page_2.png",
      "/slides/furthest-building-you-can-reach/1/page_3.png",
      "/slides/furthest-building-you-can-reach/1/page_4.png",
      "/slides/furthest-building-you-can-reach/1/page_5.png",
      "/slides/furthest-building-you-can-reach/1/page_6.png",
      "/slides/furthest-building-you-can-reach/1/page_7.png",
      "/slides/furthest-building-you-can-reach/1/page_8.png",
      "/slides/furthest-building-you-can-reach/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Greedy",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "game-of-nim",
    "paths": [
      "/slides/game-of-nim/1/page_1.png",
      "/slides/game-of-nim/1/page_10.png",
      "/slides/game-of-nim/1/page_11.png",
      "/slides/game-of-nim/1/page_12.png",
      "/slides/game-of-nim/1/page_13.png",
      "/slides/game-of-nim/1/page_14.png",
      "/slides/game-of-nim/1/page_15.png",
      "/slides/game-of-nim/1/page_16.png",
      "/slides/game-of-nim/1/page_17.png",
      "/slides/game-of-nim/1/page_2.png",
      "/slides/game-of-nim/1/page_3.png",
      "/slides/game-of-nim/1/page_4.png",
      "/slides/game-of-nim/1/page_5.png",
      "/slides/game-of-nim/1/page_6.png",
      "/slides/game-of-nim/1/page_7.png",
      "/slides/game-of-nim/1/page_8.png",
      "/slides/game-of-nim/1/page_9.png"
    ],
    "total": 17,
    "topics": [
      "Array",
      " Math",
      " Dynamic Programming",
      " Bit Manipulation",
      " Brainteaser",
      " Game Theory"
    ]
  },
  {
    "title": "get-equal-substrings-within-budget",
    "paths": [
      "/slides/get-equal-substrings-within-budget/1/page_1.png",
      "/slides/get-equal-substrings-within-budget/1/page_2.png",
      "/slides/get-equal-substrings-within-budget/1/page_3.png",
      "/slides/get-equal-substrings-within-budget/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "String",
      " Binary Search",
      " Sliding Window",
      " Prefix Sum"
    ]
  },
  {
    "title": "graph-valid-tree",
    "paths": [
      "/slides/graph-valid-tree/1/page_1.png",
      "/slides/graph-valid-tree/1/page_10.png",
      "/slides/graph-valid-tree/1/page_11.png",
      "/slides/graph-valid-tree/1/page_2.png",
      "/slides/graph-valid-tree/1/page_3.png",
      "/slides/graph-valid-tree/1/page_4.png",
      "/slides/graph-valid-tree/1/page_5.png",
      "/slides/graph-valid-tree/1/page_6.png",
      "/slides/graph-valid-tree/1/page_7.png",
      "/slides/graph-valid-tree/1/page_8.png",
      "/slides/graph-valid-tree/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Depth-First Search",
      " Breadth-First Search",
      " Union Find",
      " Graph"
    ]
  },
  {
    "title": "gray-code",
    "paths": [
      "/slides/gray-code/1/page_1.png",
      "/slides/gray-code/1/page_2.png",
      "/slides/gray-code/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Math",
      " Backtracking",
      " Bit Manipulation"
    ]
  },
  {
    "title": "group-the-people-given-the-group-size-they-belong-to",
    "paths": [
      "/slides/group-the-people-given-the-group-size-they-belong-to/1/page_1.png",
      "/slides/group-the-people-given-the-group-size-they-belong-to/1/page_2.png",
      "/slides/group-the-people-given-the-group-size-they-belong-to/1/page_3.png",
      "/slides/group-the-people-given-the-group-size-they-belong-to/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array",
      " Hash Table"
    ]
  },
  {
    "title": "guess-number-higher-or-lower-ii",
    "paths": [
      "/slides/guess-number-higher-or-lower-ii/1/page_1.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_10.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_11.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_12.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_13.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_14.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_15.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_16.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_17.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_2.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_3.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_4.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_5.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_6.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_7.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_8.png",
      "/slides/guess-number-higher-or-lower-ii/1/page_9.png"
    ],
    "total": 17,
    "topics": [
      "Math",
      " Dynamic Programming",
      " Game Theory"
    ]
  },
  {
    "title": "happy-number",
    "paths": [
      "/slides/happy-number/1/page_1.png",
      "/slides/happy-number/1/page_2.png",
      "/slides/happy-number/1/page_3.png",
      "/slides/happy-number/1/page_4.png",
      "/slides/happy-number/1/page_5.png",
      "/slides/happy-number/1/page_6.png",
      "/slides/happy-number/1/page_7.png",
      "/slides/happy-number/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Hash Table",
      " Math",
      " Two Pointers"
    ]
  },
  {
    "title": "house-robber-ii",
    "paths": [
      "/slides/house-robber-ii/1/page_1.png",
      "/slides/house-robber-ii/1/page_10.png",
      "/slides/house-robber-ii/1/page_11.png",
      "/slides/house-robber-ii/1/page_12.png",
      "/slides/house-robber-ii/1/page_13.png",
      "/slides/house-robber-ii/1/page_14.png",
      "/slides/house-robber-ii/1/page_15.png",
      "/slides/house-robber-ii/1/page_16.png",
      "/slides/house-robber-ii/1/page_17.png",
      "/slides/house-robber-ii/1/page_18.png",
      "/slides/house-robber-ii/1/page_19.png",
      "/slides/house-robber-ii/1/page_2.png",
      "/slides/house-robber-ii/1/page_20.png",
      "/slides/house-robber-ii/1/page_21.png",
      "/slides/house-robber-ii/1/page_22.png",
      "/slides/house-robber-ii/1/page_3.png",
      "/slides/house-robber-ii/1/page_4.png",
      "/slides/house-robber-ii/1/page_5.png",
      "/slides/house-robber-ii/1/page_6.png",
      "/slides/house-robber-ii/1/page_7.png",
      "/slides/house-robber-ii/1/page_8.png",
      "/slides/house-robber-ii/1/page_9.png"
    ],
    "total": 22,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "how-many-apples-can-you-put-into-the-basket",
    "paths": [
      "/slides/how-many-apples-can-you-put-into-the-basket/1/page_1.png",
      "/slides/how-many-apples-can-you-put-into-the-basket/1/page_2.png"
    ],
    "total": 2,
    "topics": [
      "Array",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "increasing-triplet-subsequence",
    "paths": [
      "/slides/increasing-triplet-subsequence/1/page_1.png",
      "/slides/increasing-triplet-subsequence/1/page_10.png",
      "/slides/increasing-triplet-subsequence/1/page_2.png",
      "/slides/increasing-triplet-subsequence/1/page_3.png",
      "/slides/increasing-triplet-subsequence/1/page_4.png",
      "/slides/increasing-triplet-subsequence/1/page_5.png",
      "/slides/increasing-triplet-subsequence/1/page_6.png",
      "/slides/increasing-triplet-subsequence/1/page_7.png",
      "/slides/increasing-triplet-subsequence/1/page_8.png",
      "/slides/increasing-triplet-subsequence/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Greedy"
    ]
  },
  {
    "title": "insert-interval",
    "paths": [
      "/slides/insert-interval/1/page_1.png",
      "/slides/insert-interval/1/page_2.png",
      "/slides/insert-interval/1/page_3.png",
      "/slides/insert-interval/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array"
    ]
  },
  {
    "title": "insert-into-a-binary-search-tree",
    "paths": [
      "/slides/insert-into-a-binary-search-tree/1/page_1.png",
      "/slides/insert-into-a-binary-search-tree/1/page_2.png",
      "/slides/insert-into-a-binary-search-tree/1/page_3.png",
      "/slides/insert-into-a-binary-search-tree/1/page_4.png",
      "/slides/insert-into-a-binary-search-tree/1/page_5.png",
      "/slides/insert-into-a-binary-search-tree/1/page_6.png",
      "/slides/insert-into-a-binary-search-tree/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Tree",
      " Binary Search Tree",
      " Binary Tree"
    ]
  },
  {
    "title": "integer-to-roman",
    "paths": [
      "/slides/integer-to-roman/1/page_1.png",
      "/slides/integer-to-roman/1/page_10.png",
      "/slides/integer-to-roman/1/page_11.png",
      "/slides/integer-to-roman/1/page_12.png",
      "/slides/integer-to-roman/1/page_13.png",
      "/slides/integer-to-roman/1/page_14.png",
      "/slides/integer-to-roman/1/page_15.png",
      "/slides/integer-to-roman/1/page_16.png",
      "/slides/integer-to-roman/1/page_17.png",
      "/slides/integer-to-roman/1/page_18.png",
      "/slides/integer-to-roman/1/page_19.png",
      "/slides/integer-to-roman/1/page_2.png",
      "/slides/integer-to-roman/1/page_3.png",
      "/slides/integer-to-roman/1/page_4.png",
      "/slides/integer-to-roman/1/page_5.png",
      "/slides/integer-to-roman/1/page_6.png",
      "/slides/integer-to-roman/1/page_7.png",
      "/slides/integer-to-roman/1/page_8.png",
      "/slides/integer-to-roman/1/page_9.png"
    ],
    "total": 19,
    "topics": [
      "Hash Table",
      " Math",
      " String"
    ]
  },
  {
    "title": "intersection-of-three-sorted-arrays",
    "paths": [
      "/slides/intersection-of-three-sorted-arrays/1/page_1.png",
      "/slides/intersection-of-three-sorted-arrays/1/page_2.png",
      "/slides/intersection-of-three-sorted-arrays/1/page_3.png",
      "/slides/intersection-of-three-sorted-arrays/1/page_4.png",
      "/slides/intersection-of-three-sorted-arrays/1/page_5.png",
      "/slides/intersection-of-three-sorted-arrays/1/page_6.png",
      "/slides/intersection-of-three-sorted-arrays/1/page_7.png",
      "/slides/intersection-of-three-sorted-arrays/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " Binary Search",
      " Counting"
    ]
  },
  {
    "title": "intersection-of-two-arrays",
    "paths": [
      "/slides/intersection-of-two-arrays/1/page_1.png",
      "/slides/intersection-of-two-arrays/1/page_2.png",
      "/slides/intersection-of-two-arrays/1/page_3.png",
      "/slides/intersection-of-two-arrays/1/page_4.png",
      "/slides/intersection-of-two-arrays/1/page_5.png",
      "/slides/intersection-of-two-arrays/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Hash Table",
      " Two Pointers",
      " Binary Search",
      " Sorting"
    ]
  },
  {
    "title": "is-subsequence",
    "paths": [
      "/slides/is-subsequence/1/page_1.png",
      "/slides/is-subsequence/1/page_10.png",
      "/slides/is-subsequence/1/page_11.png",
      "/slides/is-subsequence/1/page_12.png",
      "/slides/is-subsequence/1/page_13.png",
      "/slides/is-subsequence/1/page_14.png",
      "/slides/is-subsequence/1/page_15.png",
      "/slides/is-subsequence/1/page_16.png",
      "/slides/is-subsequence/1/page_17.png",
      "/slides/is-subsequence/1/page_18.png",
      "/slides/is-subsequence/1/page_2.png",
      "/slides/is-subsequence/1/page_3.png",
      "/slides/is-subsequence/1/page_4.png",
      "/slides/is-subsequence/1/page_5.png",
      "/slides/is-subsequence/1/page_6.png",
      "/slides/is-subsequence/1/page_7.png",
      "/slides/is-subsequence/1/page_8.png",
      "/slides/is-subsequence/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Two Pointers",
      " String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "island-perimeter",
    "paths": [
      "/slides/island-perimeter/1/page_1.png",
      "/slides/island-perimeter/1/page_2.png",
      "/slides/island-perimeter/1/page_3.png",
      "/slides/island-perimeter/1/page_4.png",
      "/slides/island-perimeter/1/page_5.png",
      "/slides/island-perimeter/1/page_6.png",
      "/slides/island-perimeter/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Depth-First Search",
      " Breadth-First Search",
      " Matrix"
    ]
  },
  {
    "title": "jump-game-ii",
    "paths": [
      "/slides/jump-game-ii/1/page_1.png",
      "/slides/jump-game-ii/1/page_10.png",
      "/slides/jump-game-ii/1/page_11.png",
      "/slides/jump-game-ii/1/page_2.png",
      "/slides/jump-game-ii/1/page_3.png",
      "/slides/jump-game-ii/1/page_4.png",
      "/slides/jump-game-ii/1/page_5.png",
      "/slides/jump-game-ii/1/page_6.png",
      "/slides/jump-game-ii/1/page_7.png",
      "/slides/jump-game-ii/1/page_8.png",
      "/slides/jump-game-ii/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Greedy"
    ]
  },
  {
    "title": "k-diff-pairs-in-an-array",
    "paths": [
      "/slides/k-diff-pairs-in-an-array/1/page_1.png",
      "/slides/k-diff-pairs-in-an-array/1/page_10.png",
      "/slides/k-diff-pairs-in-an-array/1/page_11.png",
      "/slides/k-diff-pairs-in-an-array/1/page_12.png",
      "/slides/k-diff-pairs-in-an-array/1/page_13.png",
      "/slides/k-diff-pairs-in-an-array/1/page_14.png",
      "/slides/k-diff-pairs-in-an-array/1/page_15.png",
      "/slides/k-diff-pairs-in-an-array/1/page_16.png",
      "/slides/k-diff-pairs-in-an-array/1/page_17.png",
      "/slides/k-diff-pairs-in-an-array/1/page_18.png",
      "/slides/k-diff-pairs-in-an-array/1/page_19.png",
      "/slides/k-diff-pairs-in-an-array/1/page_2.png",
      "/slides/k-diff-pairs-in-an-array/1/page_20.png",
      "/slides/k-diff-pairs-in-an-array/1/page_21.png",
      "/slides/k-diff-pairs-in-an-array/1/page_22.png",
      "/slides/k-diff-pairs-in-an-array/1/page_23.png",
      "/slides/k-diff-pairs-in-an-array/1/page_24.png",
      "/slides/k-diff-pairs-in-an-array/1/page_25.png",
      "/slides/k-diff-pairs-in-an-array/1/page_26.png",
      "/slides/k-diff-pairs-in-an-array/1/page_27.png",
      "/slides/k-diff-pairs-in-an-array/1/page_28.png",
      "/slides/k-diff-pairs-in-an-array/1/page_29.png",
      "/slides/k-diff-pairs-in-an-array/1/page_3.png",
      "/slides/k-diff-pairs-in-an-array/1/page_30.png",
      "/slides/k-diff-pairs-in-an-array/1/page_31.png",
      "/slides/k-diff-pairs-in-an-array/1/page_32.png",
      "/slides/k-diff-pairs-in-an-array/1/page_33.png",
      "/slides/k-diff-pairs-in-an-array/1/page_34.png",
      "/slides/k-diff-pairs-in-an-array/1/page_35.png",
      "/slides/k-diff-pairs-in-an-array/1/page_36.png",
      "/slides/k-diff-pairs-in-an-array/1/page_37.png",
      "/slides/k-diff-pairs-in-an-array/1/page_38.png",
      "/slides/k-diff-pairs-in-an-array/1/page_39.png",
      "/slides/k-diff-pairs-in-an-array/1/page_4.png",
      "/slides/k-diff-pairs-in-an-array/1/page_40.png",
      "/slides/k-diff-pairs-in-an-array/1/page_41.png",
      "/slides/k-diff-pairs-in-an-array/1/page_42.png",
      "/slides/k-diff-pairs-in-an-array/1/page_43.png",
      "/slides/k-diff-pairs-in-an-array/1/page_44.png",
      "/slides/k-diff-pairs-in-an-array/1/page_5.png",
      "/slides/k-diff-pairs-in-an-array/1/page_6.png",
      "/slides/k-diff-pairs-in-an-array/1/page_7.png",
      "/slides/k-diff-pairs-in-an-array/1/page_8.png",
      "/slides/k-diff-pairs-in-an-array/1/page_9.png"
    ],
    "total": 44,
    "topics": [
      "Array",
      " Hash Table",
      " Two Pointers",
      " Binary Search",
      " Sorting"
    ]
  },
  {
    "title": "k-inverse-pairs-array",
    "paths": [
      "/slides/k-inverse-pairs-array/1/page_1.png",
      "/slides/k-inverse-pairs-array/1/page_10.png",
      "/slides/k-inverse-pairs-array/1/page_11.png",
      "/slides/k-inverse-pairs-array/1/page_12.png",
      "/slides/k-inverse-pairs-array/1/page_13.png",
      "/slides/k-inverse-pairs-array/1/page_14.png",
      "/slides/k-inverse-pairs-array/1/page_15.png",
      "/slides/k-inverse-pairs-array/1/page_16.png",
      "/slides/k-inverse-pairs-array/1/page_17.png",
      "/slides/k-inverse-pairs-array/1/page_18.png",
      "/slides/k-inverse-pairs-array/1/page_19.png",
      "/slides/k-inverse-pairs-array/1/page_2.png",
      "/slides/k-inverse-pairs-array/1/page_20.png",
      "/slides/k-inverse-pairs-array/1/page_21.png",
      "/slides/k-inverse-pairs-array/1/page_22.png",
      "/slides/k-inverse-pairs-array/1/page_23.png",
      "/slides/k-inverse-pairs-array/1/page_24.png",
      "/slides/k-inverse-pairs-array/1/page_25.png",
      "/slides/k-inverse-pairs-array/1/page_3.png",
      "/slides/k-inverse-pairs-array/1/page_4.png",
      "/slides/k-inverse-pairs-array/1/page_5.png",
      "/slides/k-inverse-pairs-array/1/page_6.png",
      "/slides/k-inverse-pairs-array/1/page_7.png",
      "/slides/k-inverse-pairs-array/1/page_8.png",
      "/slides/k-inverse-pairs-array/1/page_9.png"
    ],
    "total": 25,
    "topics": [
      "Dynamic Programming"
    ]
  },
  {
    "title": "k-th-smallest-prime-fraction",
    "paths": [
      "/slides/k-th-smallest-prime-fraction/1/page_1.png",
      "/slides/k-th-smallest-prime-fraction/1/page_10.png",
      "/slides/k-th-smallest-prime-fraction/1/page_11.png",
      "/slides/k-th-smallest-prime-fraction/1/page_2.png",
      "/slides/k-th-smallest-prime-fraction/1/page_3.png",
      "/slides/k-th-smallest-prime-fraction/1/page_4.png",
      "/slides/k-th-smallest-prime-fraction/1/page_5.png",
      "/slides/k-th-smallest-prime-fraction/1/page_6.png",
      "/slides/k-th-smallest-prime-fraction/1/page_7.png",
      "/slides/k-th-smallest-prime-fraction/1/page_8.png",
      "/slides/k-th-smallest-prime-fraction/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Two Pointers",
      " Binary Search",
      " Sorting",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "kill-process",
    "paths": [
      "/slides/kill-process/1/page_1.png",
      "/slides/kill-process/1/page_2.png",
      "/slides/kill-process/1/page_3.png",
      "/slides/kill-process/1/page_4.png",
      "/slides/kill-process/1/page_5.png",
      "/slides/kill-process/1/page_6.png",
      "/slides/kill-process/1/page_7.png",
      "/slides/kill-process/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " Tree",
      " Depth-First Search",
      " Breadth-First Search"
    ]
  },
  {
    "title": "koko-eating-bananas",
    "paths": [
      "/slides/koko-eating-bananas/1/page_1.png",
      "/slides/koko-eating-bananas/1/page_10.png",
      "/slides/koko-eating-bananas/1/page_2.png",
      "/slides/koko-eating-bananas/1/page_3.png",
      "/slides/koko-eating-bananas/1/page_4.png",
      "/slides/koko-eating-bananas/1/page_5.png",
      "/slides/koko-eating-bananas/1/page_6.png",
      "/slides/koko-eating-bananas/1/page_7.png",
      "/slides/koko-eating-bananas/1/page_8.png",
      "/slides/koko-eating-bananas/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Binary Search"
    ]
  },
  {
    "title": "kth-largest-element-in-a-stream",
    "paths": [
      "/slides/kth-largest-element-in-a-stream/1/page_1.png",
      "/slides/kth-largest-element-in-a-stream/1/page_2.png",
      "/slides/kth-largest-element-in-a-stream/1/page_3.png",
      "/slides/kth-largest-element-in-a-stream/1/page_4.png",
      "/slides/kth-largest-element-in-a-stream/1/page_5.png",
      "/slides/kth-largest-element-in-a-stream/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Tree",
      " Design",
      " Binary Search Tree",
      " Heap (Priority Queue)",
      " Binary Tree",
      " Data Stream"
    ]
  },
  {
    "title": "kth-largest-element-in-an-array",
    "paths": [
      "/slides/kth-largest-element-in-an-array/1/page_1.png",
      "/slides/kth-largest-element-in-an-array/1/page_10.png",
      "/slides/kth-largest-element-in-an-array/1/page_2.png",
      "/slides/kth-largest-element-in-an-array/1/page_3.png",
      "/slides/kth-largest-element-in-an-array/1/page_4.png",
      "/slides/kth-largest-element-in-an-array/1/page_5.png",
      "/slides/kth-largest-element-in-an-array/1/page_6.png",
      "/slides/kth-largest-element-in-an-array/1/page_7.png",
      "/slides/kth-largest-element-in-an-array/1/page_8.png",
      "/slides/kth-largest-element-in-an-array/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Divide and Conquer",
      " Sorting",
      " Heap (Priority Queue)",
      " Quickselect"
    ]
  },
  {
    "title": "largest-rectangle-in-histogram",
    "paths": [
      "/slides/largest-rectangle-in-histogram/1/page_1.png",
      "/slides/largest-rectangle-in-histogram/1/page_10.png",
      "/slides/largest-rectangle-in-histogram/1/page_11.png",
      "/slides/largest-rectangle-in-histogram/1/page_12.png",
      "/slides/largest-rectangle-in-histogram/1/page_13.png",
      "/slides/largest-rectangle-in-histogram/1/page_14.png",
      "/slides/largest-rectangle-in-histogram/1/page_15.png",
      "/slides/largest-rectangle-in-histogram/1/page_16.png",
      "/slides/largest-rectangle-in-histogram/1/page_17.png",
      "/slides/largest-rectangle-in-histogram/1/page_18.png",
      "/slides/largest-rectangle-in-histogram/1/page_2.png",
      "/slides/largest-rectangle-in-histogram/1/page_3.png",
      "/slides/largest-rectangle-in-histogram/1/page_4.png",
      "/slides/largest-rectangle-in-histogram/1/page_5.png",
      "/slides/largest-rectangle-in-histogram/1/page_6.png",
      "/slides/largest-rectangle-in-histogram/1/page_7.png",
      "/slides/largest-rectangle-in-histogram/1/page_8.png",
      "/slides/largest-rectangle-in-histogram/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Array",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "last-stone-weight",
    "paths": [
      "/slides/last-stone-weight/1/page_1.png",
      "/slides/last-stone-weight/1/page_10.png",
      "/slides/last-stone-weight/1/page_11.png",
      "/slides/last-stone-weight/1/page_12.png",
      "/slides/last-stone-weight/1/page_13.png",
      "/slides/last-stone-weight/1/page_14.png",
      "/slides/last-stone-weight/1/page_15.png",
      "/slides/last-stone-weight/1/page_16.png",
      "/slides/last-stone-weight/1/page_17.png",
      "/slides/last-stone-weight/1/page_18.png",
      "/slides/last-stone-weight/1/page_19.png",
      "/slides/last-stone-weight/1/page_2.png",
      "/slides/last-stone-weight/1/page_20.png",
      "/slides/last-stone-weight/1/page_21.png",
      "/slides/last-stone-weight/1/page_22.png",
      "/slides/last-stone-weight/1/page_23.png",
      "/slides/last-stone-weight/1/page_24.png",
      "/slides/last-stone-weight/1/page_25.png",
      "/slides/last-stone-weight/1/page_26.png",
      "/slides/last-stone-weight/1/page_27.png",
      "/slides/last-stone-weight/1/page_28.png",
      "/slides/last-stone-weight/1/page_29.png",
      "/slides/last-stone-weight/1/page_3.png",
      "/slides/last-stone-weight/1/page_30.png",
      "/slides/last-stone-weight/1/page_31.png",
      "/slides/last-stone-weight/1/page_32.png",
      "/slides/last-stone-weight/1/page_33.png",
      "/slides/last-stone-weight/1/page_34.png",
      "/slides/last-stone-weight/1/page_35.png",
      "/slides/last-stone-weight/1/page_36.png",
      "/slides/last-stone-weight/1/page_37.png",
      "/slides/last-stone-weight/1/page_38.png",
      "/slides/last-stone-weight/1/page_39.png",
      "/slides/last-stone-weight/1/page_4.png",
      "/slides/last-stone-weight/1/page_40.png",
      "/slides/last-stone-weight/1/page_41.png",
      "/slides/last-stone-weight/1/page_42.png",
      "/slides/last-stone-weight/1/page_5.png",
      "/slides/last-stone-weight/1/page_6.png",
      "/slides/last-stone-weight/1/page_7.png",
      "/slides/last-stone-weight/1/page_8.png",
      "/slides/last-stone-weight/1/page_9.png"
    ],
    "total": 42,
    "topics": [
      "Array",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "least-number-of-unique-integers-after-k-removals",
    "paths": [
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_1.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_10.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_11.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_12.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_13.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_14.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_15.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_16.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_17.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_18.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_2.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_3.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_4.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_5.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_6.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_7.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_8.png",
      "/slides/least-number-of-unique-integers-after-k-removals/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Array",
      " Hash Table",
      " Greedy",
      " Sorting",
      " Counting"
    ]
  },
  {
    "title": "leftmost-column-with-at-least-a-one",
    "paths": [
      "/slides/leftmost-column-with-at-least-a-one/1/page_1.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_10.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_11.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_12.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_13.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_14.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_15.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_16.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_17.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_18.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_19.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_2.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_20.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_21.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_22.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_23.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_24.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_25.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_26.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_27.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_28.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_29.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_3.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_30.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_31.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_32.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_33.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_4.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_5.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_6.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_7.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_8.png",
      "/slides/leftmost-column-with-at-least-a-one/1/page_9.png"
    ],
    "total": 33,
    "topics": [
      "Array",
      " Binary Search",
      " Matrix",
      " Interactive"
    ]
  },
  {
    "title": "length-of-last-word",
    "paths": [
      "/slides/length-of-last-word/1/page_1.png",
      "/slides/length-of-last-word/1/page_2.png",
      "/slides/length-of-last-word/1/page_3.png",
      "/slides/length-of-last-word/1/page_4.png",
      "/slides/length-of-last-word/1/page_5.png",
      "/slides/length-of-last-word/1/page_6.png",
      "/slides/length-of-last-word/1/page_7.png",
      "/slides/length-of-last-word/1/page_8.png",
      "/slides/length-of-last-word/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "String"
    ]
  },
  {
    "title": "letter-combinations-of-a-phone-number",
    "paths": [
      "/slides/letter-combinations-of-a-phone-number/1/page_1.png",
      "/slides/letter-combinations-of-a-phone-number/1/page_2.png",
      "/slides/letter-combinations-of-a-phone-number/1/page_3.png",
      "/slides/letter-combinations-of-a-phone-number/1/page_4.png",
      "/slides/letter-combinations-of-a-phone-number/1/page_5.png",
      "/slides/letter-combinations-of-a-phone-number/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Hash Table",
      " String",
      " Backtracking"
    ]
  },
  {
    "title": "lexicographically-smallest-equivalent-string",
    "paths": [
      "/slides/lexicographically-smallest-equivalent-string/1/page_1.png",
      "/slides/lexicographically-smallest-equivalent-string/1/page_2.png",
      "/slides/lexicographically-smallest-equivalent-string/1/page_3.png",
      "/slides/lexicographically-smallest-equivalent-string/1/page_4.png",
      "/slides/lexicographically-smallest-equivalent-string/1/page_5.png",
      "/slides/lexicographically-smallest-equivalent-string/1/page_6.png",
      "/slides/lexicographically-smallest-equivalent-string/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "String",
      " Union Find"
    ]
  },
  {
    "title": "longest-arithmetic-subsequence",
    "paths": [
      "/slides/longest-arithmetic-subsequence/1/page_1.png",
      "/slides/longest-arithmetic-subsequence/1/page_10.png",
      "/slides/longest-arithmetic-subsequence/1/page_11.png",
      "/slides/longest-arithmetic-subsequence/1/page_2.png",
      "/slides/longest-arithmetic-subsequence/1/page_3.png",
      "/slides/longest-arithmetic-subsequence/1/page_4.png",
      "/slides/longest-arithmetic-subsequence/1/page_5.png",
      "/slides/longest-arithmetic-subsequence/1/page_6.png",
      "/slides/longest-arithmetic-subsequence/1/page_7.png",
      "/slides/longest-arithmetic-subsequence/1/page_8.png",
      "/slides/longest-arithmetic-subsequence/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Hash Table",
      " Binary Search",
      " Dynamic Programming"
    ]
  },
  {
    "title": "longest-arithmetic-subsequence-of-given-difference",
    "paths": [
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_1.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_10.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_11.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_2.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_3.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_4.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_5.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_6.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_7.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_8.png",
      "/slides/longest-arithmetic-subsequence-of-given-difference/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Hash Table",
      " Dynamic Programming"
    ]
  },
  {
    "title": "longest-common-subsequence",
    "paths": [
      "/slides/longest-common-subsequence/1/page_1.png",
      "/slides/longest-common-subsequence/1/page_10.png",
      "/slides/longest-common-subsequence/1/page_11.png",
      "/slides/longest-common-subsequence/1/page_12.png",
      "/slides/longest-common-subsequence/1/page_13.png",
      "/slides/longest-common-subsequence/1/page_14.png",
      "/slides/longest-common-subsequence/1/page_15.png",
      "/slides/longest-common-subsequence/1/page_16.png",
      "/slides/longest-common-subsequence/1/page_17.png",
      "/slides/longest-common-subsequence/1/page_18.png",
      "/slides/longest-common-subsequence/1/page_19.png",
      "/slides/longest-common-subsequence/1/page_2.png",
      "/slides/longest-common-subsequence/1/page_20.png",
      "/slides/longest-common-subsequence/1/page_21.png",
      "/slides/longest-common-subsequence/1/page_22.png",
      "/slides/longest-common-subsequence/1/page_23.png",
      "/slides/longest-common-subsequence/1/page_24.png",
      "/slides/longest-common-subsequence/1/page_25.png",
      "/slides/longest-common-subsequence/1/page_26.png",
      "/slides/longest-common-subsequence/1/page_27.png",
      "/slides/longest-common-subsequence/1/page_28.png",
      "/slides/longest-common-subsequence/1/page_29.png",
      "/slides/longest-common-subsequence/1/page_3.png",
      "/slides/longest-common-subsequence/1/page_30.png",
      "/slides/longest-common-subsequence/1/page_31.png",
      "/slides/longest-common-subsequence/1/page_32.png",
      "/slides/longest-common-subsequence/1/page_33.png",
      "/slides/longest-common-subsequence/1/page_34.png",
      "/slides/longest-common-subsequence/1/page_35.png",
      "/slides/longest-common-subsequence/1/page_36.png",
      "/slides/longest-common-subsequence/1/page_37.png",
      "/slides/longest-common-subsequence/1/page_38.png",
      "/slides/longest-common-subsequence/1/page_39.png",
      "/slides/longest-common-subsequence/1/page_4.png",
      "/slides/longest-common-subsequence/1/page_40.png",
      "/slides/longest-common-subsequence/1/page_41.png",
      "/slides/longest-common-subsequence/1/page_42.png",
      "/slides/longest-common-subsequence/1/page_43.png",
      "/slides/longest-common-subsequence/1/page_44.png",
      "/slides/longest-common-subsequence/1/page_45.png",
      "/slides/longest-common-subsequence/1/page_46.png",
      "/slides/longest-common-subsequence/1/page_47.png",
      "/slides/longest-common-subsequence/1/page_48.png",
      "/slides/longest-common-subsequence/1/page_49.png",
      "/slides/longest-common-subsequence/1/page_5.png",
      "/slides/longest-common-subsequence/1/page_50.png",
      "/slides/longest-common-subsequence/1/page_51.png",
      "/slides/longest-common-subsequence/1/page_52.png",
      "/slides/longest-common-subsequence/1/page_53.png",
      "/slides/longest-common-subsequence/1/page_54.png",
      "/slides/longest-common-subsequence/1/page_55.png",
      "/slides/longest-common-subsequence/1/page_56.png",
      "/slides/longest-common-subsequence/1/page_57.png",
      "/slides/longest-common-subsequence/1/page_58.png",
      "/slides/longest-common-subsequence/1/page_59.png",
      "/slides/longest-common-subsequence/1/page_6.png",
      "/slides/longest-common-subsequence/1/page_60.png",
      "/slides/longest-common-subsequence/1/page_61.png",
      "/slides/longest-common-subsequence/1/page_62.png",
      "/slides/longest-common-subsequence/1/page_63.png",
      "/slides/longest-common-subsequence/1/page_64.png",
      "/slides/longest-common-subsequence/1/page_65.png",
      "/slides/longest-common-subsequence/1/page_66.png",
      "/slides/longest-common-subsequence/1/page_67.png",
      "/slides/longest-common-subsequence/1/page_68.png",
      "/slides/longest-common-subsequence/1/page_69.png",
      "/slides/longest-common-subsequence/1/page_7.png",
      "/slides/longest-common-subsequence/1/page_70.png",
      "/slides/longest-common-subsequence/1/page_71.png",
      "/slides/longest-common-subsequence/1/page_72.png",
      "/slides/longest-common-subsequence/1/page_73.png",
      "/slides/longest-common-subsequence/1/page_74.png",
      "/slides/longest-common-subsequence/1/page_75.png",
      "/slides/longest-common-subsequence/1/page_76.png",
      "/slides/longest-common-subsequence/1/page_77.png",
      "/slides/longest-common-subsequence/1/page_78.png",
      "/slides/longest-common-subsequence/1/page_79.png",
      "/slides/longest-common-subsequence/1/page_8.png",
      "/slides/longest-common-subsequence/1/page_80.png",
      "/slides/longest-common-subsequence/1/page_81.png",
      "/slides/longest-common-subsequence/1/page_82.png",
      "/slides/longest-common-subsequence/1/page_83.png",
      "/slides/longest-common-subsequence/1/page_9.png"
    ],
    "total": 83,
    "topics": [
      "String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "longest-common-subsequence-between-sorted-arrays",
    "paths": [
      "/slides/longest-common-subsequence-between-sorted-arrays/1/page_1.png",
      "/slides/longest-common-subsequence-between-sorted-arrays/1/page_2.png",
      "/slides/longest-common-subsequence-between-sorted-arrays/1/page_3.png",
      "/slides/longest-common-subsequence-between-sorted-arrays/1/page_4.png",
      "/slides/longest-common-subsequence-between-sorted-arrays/1/page_5.png",
      "/slides/longest-common-subsequence-between-sorted-arrays/1/page_6.png",
      "/slides/longest-common-subsequence-between-sorted-arrays/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Hash Table",
      " Counting"
    ]
  },
  {
    "title": "longest-duplicate-substring",
    "paths": [
      "/slides/longest-duplicate-substring/1/page_1.png",
      "/slides/longest-duplicate-substring/1/page_10.png",
      "/slides/longest-duplicate-substring/1/page_2.png",
      "/slides/longest-duplicate-substring/1/page_3.png",
      "/slides/longest-duplicate-substring/1/page_4.png",
      "/slides/longest-duplicate-substring/1/page_5.png",
      "/slides/longest-duplicate-substring/1/page_6.png",
      "/slides/longest-duplicate-substring/1/page_7.png",
      "/slides/longest-duplicate-substring/1/page_8.png",
      "/slides/longest-duplicate-substring/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "String",
      " Binary Search",
      " Sliding Window",
      " Rolling Hash",
      " Suffix Array",
      " Hash Function"
    ]
  },
  {
    "title": "longest-harmonious-subsequence",
    "paths": [
      "/slides/longest-harmonious-subsequence/1/page_1.png",
      "/slides/longest-harmonious-subsequence/1/page_10.png",
      "/slides/longest-harmonious-subsequence/1/page_11.png",
      "/slides/longest-harmonious-subsequence/1/page_12.png",
      "/slides/longest-harmonious-subsequence/1/page_13.png",
      "/slides/longest-harmonious-subsequence/1/page_14.png",
      "/slides/longest-harmonious-subsequence/1/page_15.png",
      "/slides/longest-harmonious-subsequence/1/page_16.png",
      "/slides/longest-harmonious-subsequence/1/page_17.png",
      "/slides/longest-harmonious-subsequence/1/page_18.png",
      "/slides/longest-harmonious-subsequence/1/page_2.png",
      "/slides/longest-harmonious-subsequence/1/page_3.png",
      "/slides/longest-harmonious-subsequence/1/page_4.png",
      "/slides/longest-harmonious-subsequence/1/page_5.png",
      "/slides/longest-harmonious-subsequence/1/page_6.png",
      "/slides/longest-harmonious-subsequence/1/page_7.png",
      "/slides/longest-harmonious-subsequence/1/page_8.png",
      "/slides/longest-harmonious-subsequence/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Array",
      " Hash Table",
      " Sliding Window",
      " Sorting",
      " Counting"
    ]
  },
  {
    "title": "longest-line-of-consecutive-one-in-matrix",
    "paths": [
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_1.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_10.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_11.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_12.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_13.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_14.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_2.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_3.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_4.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_5.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_6.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_7.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_8.png",
      "/slides/longest-line-of-consecutive-one-in-matrix/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Matrix"
    ]
  },
  {
    "title": "longest-repeating-character-replacement",
    "paths": [
      "/slides/longest-repeating-character-replacement/1/page_1.png",
      "/slides/longest-repeating-character-replacement/1/page_10.png",
      "/slides/longest-repeating-character-replacement/1/page_11.png",
      "/slides/longest-repeating-character-replacement/1/page_12.png",
      "/slides/longest-repeating-character-replacement/1/page_13.png",
      "/slides/longest-repeating-character-replacement/1/page_14.png",
      "/slides/longest-repeating-character-replacement/1/page_15.png",
      "/slides/longest-repeating-character-replacement/1/page_16.png",
      "/slides/longest-repeating-character-replacement/1/page_17.png",
      "/slides/longest-repeating-character-replacement/1/page_18.png",
      "/slides/longest-repeating-character-replacement/1/page_19.png",
      "/slides/longest-repeating-character-replacement/1/page_2.png",
      "/slides/longest-repeating-character-replacement/1/page_20.png",
      "/slides/longest-repeating-character-replacement/1/page_21.png",
      "/slides/longest-repeating-character-replacement/1/page_22.png",
      "/slides/longest-repeating-character-replacement/1/page_23.png",
      "/slides/longest-repeating-character-replacement/1/page_24.png",
      "/slides/longest-repeating-character-replacement/1/page_25.png",
      "/slides/longest-repeating-character-replacement/1/page_26.png",
      "/slides/longest-repeating-character-replacement/1/page_27.png",
      "/slides/longest-repeating-character-replacement/1/page_28.png",
      "/slides/longest-repeating-character-replacement/1/page_29.png",
      "/slides/longest-repeating-character-replacement/1/page_3.png",
      "/slides/longest-repeating-character-replacement/1/page_30.png",
      "/slides/longest-repeating-character-replacement/1/page_31.png",
      "/slides/longest-repeating-character-replacement/1/page_4.png",
      "/slides/longest-repeating-character-replacement/1/page_5.png",
      "/slides/longest-repeating-character-replacement/1/page_6.png",
      "/slides/longest-repeating-character-replacement/1/page_7.png",
      "/slides/longest-repeating-character-replacement/1/page_8.png",
      "/slides/longest-repeating-character-replacement/1/page_9.png"
    ],
    "total": 31,
    "topics": [
      "Hash Table",
      " String",
      " Sliding Window"
    ]
  },
  {
    "title": "longest-repeating-substring",
    "paths": [
      "/slides/longest-repeating-substring/1/page_1.png",
      "/slides/longest-repeating-substring/1/page_10.png",
      "/slides/longest-repeating-substring/1/page_2.png",
      "/slides/longest-repeating-substring/1/page_3.png",
      "/slides/longest-repeating-substring/1/page_4.png",
      "/slides/longest-repeating-substring/1/page_5.png",
      "/slides/longest-repeating-substring/1/page_6.png",
      "/slides/longest-repeating-substring/1/page_7.png",
      "/slides/longest-repeating-substring/1/page_8.png",
      "/slides/longest-repeating-substring/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "String",
      " Binary Search",
      " Dynamic Programming",
      " Rolling Hash",
      " Suffix Array",
      " Hash Function"
    ]
  },
  {
    "title": "longest-string-chain",
    "paths": [
      "/slides/longest-string-chain/1/page_1.png",
      "/slides/longest-string-chain/1/page_2.png",
      "/slides/longest-string-chain/1/page_3.png",
      "/slides/longest-string-chain/1/page_4.png",
      "/slides/longest-string-chain/1/page_5.png",
      "/slides/longest-string-chain/1/page_6.png",
      "/slides/longest-string-chain/1/page_7.png",
      "/slides/longest-string-chain/1/page_8.png",
      "/slides/longest-string-chain/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Hash Table",
      " Two Pointers",
      " String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "longest-substring-with-at-most-two-distinct-characters",
    "paths": [
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_1.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_10.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_11.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_12.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_13.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_14.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_15.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_16.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_17.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_18.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_19.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_2.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_20.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_21.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_22.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_23.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_24.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_25.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_26.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_27.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_28.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_29.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_3.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_4.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_5.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_6.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_7.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_8.png",
      "/slides/longest-substring-with-at-most-two-distinct-characters/1/page_9.png"
    ],
    "total": 29,
    "topics": [
      "Hash Table",
      " String",
      " Sliding Window"
    ]
  },
  {
    "title": "longest-valid-parentheses",
    "paths": [
      "/slides/longest-valid-parentheses/1/page_1.png",
      "/slides/longest-valid-parentheses/1/page_2.png",
      "/slides/longest-valid-parentheses/1/page_3.png",
      "/slides/longest-valid-parentheses/1/page_4.png",
      "/slides/longest-valid-parentheses/1/page_5.png",
      "/slides/longest-valid-parentheses/1/page_6.png",
      "/slides/longest-valid-parentheses/1/page_7.png",
      "/slides/longest-valid-parentheses/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "String",
      " Dynamic Programming",
      " Stack"
    ]
  },
  {
    "title": "longest-word-in-dictionary-through-deleting",
    "paths": [
      "/slides/longest-word-in-dictionary-through-deleting/1/page_1.png",
      "/slides/longest-word-in-dictionary-through-deleting/1/page_2.png",
      "/slides/longest-word-in-dictionary-through-deleting/1/page_3.png",
      "/slides/longest-word-in-dictionary-through-deleting/1/page_4.png",
      "/slides/longest-word-in-dictionary-through-deleting/1/page_5.png",
      "/slides/longest-word-in-dictionary-through-deleting/1/page_6.png",
      "/slides/longest-word-in-dictionary-through-deleting/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Two Pointers",
      " String",
      " Sorting"
    ]
  },
  {
    "title": "lowest-common-ancestor-of-a-binary-tree",
    "paths": [
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_1.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_2.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_3.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_4.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_5.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_6.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_7.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_8.png",
      "/slides/lowest-common-ancestor-of-a-binary-tree/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "majority-element-ii",
    "paths": [
      "/slides/majority-element-ii/1/page_1.png",
      "/slides/majority-element-ii/1/page_10.png",
      "/slides/majority-element-ii/1/page_2.png",
      "/slides/majority-element-ii/1/page_3.png",
      "/slides/majority-element-ii/1/page_4.png",
      "/slides/majority-element-ii/1/page_5.png",
      "/slides/majority-element-ii/1/page_6.png",
      "/slides/majority-element-ii/1/page_7.png",
      "/slides/majority-element-ii/1/page_8.png",
      "/slides/majority-element-ii/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Hash Table",
      " Sorting",
      " Counting"
    ]
  },
  {
    "title": "make-the-string-great",
    "paths": [
      "/slides/make-the-string-great/1/page_1.png",
      "/slides/make-the-string-great/1/page_2.png",
      "/slides/make-the-string-great/1/page_3.png",
      "/slides/make-the-string-great/1/page_4.png",
      "/slides/make-the-string-great/1/page_5.png",
      "/slides/make-the-string-great/1/page_6.png",
      "/slides/make-the-string-great/1/page_7.png",
      "/slides/make-the-string-great/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "String",
      " Stack"
    ]
  },
  {
    "title": "max-consecutive-ones-ii",
    "paths": [
      "/slides/max-consecutive-ones-ii/1/page_1.png",
      "/slides/max-consecutive-ones-ii/1/page_10.png",
      "/slides/max-consecutive-ones-ii/1/page_2.png",
      "/slides/max-consecutive-ones-ii/1/page_3.png",
      "/slides/max-consecutive-ones-ii/1/page_4.png",
      "/slides/max-consecutive-ones-ii/1/page_5.png",
      "/slides/max-consecutive-ones-ii/1/page_6.png",
      "/slides/max-consecutive-ones-ii/1/page_7.png",
      "/slides/max-consecutive-ones-ii/1/page_8.png",
      "/slides/max-consecutive-ones-ii/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Sliding Window"
    ]
  },
  {
    "title": "max-number-of-k-sum-pairs",
    "paths": [
      "/slides/max-number-of-k-sum-pairs/1/page_1.png",
      "/slides/max-number-of-k-sum-pairs/1/page_2.png",
      "/slides/max-number-of-k-sum-pairs/1/page_3.png",
      "/slides/max-number-of-k-sum-pairs/1/page_4.png",
      "/slides/max-number-of-k-sum-pairs/1/page_5.png",
      "/slides/max-number-of-k-sum-pairs/1/page_6.png",
      "/slides/max-number-of-k-sum-pairs/1/page_7.png",
      "/slides/max-number-of-k-sum-pairs/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " Two Pointers",
      " Sorting"
    ]
  },
  {
    "title": "max-sum-of-rectangle-no-larger-than-k",
    "paths": [
      "/slides/max-sum-of-rectangle-no-larger-than-k/1/page_1.png",
      "/slides/max-sum-of-rectangle-no-larger-than-k/1/page_2.png",
      "/slides/max-sum-of-rectangle-no-larger-than-k/1/page_3.png",
      "/slides/max-sum-of-rectangle-no-larger-than-k/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array",
      " Binary Search",
      " Matrix",
      " Prefix Sum",
      " Ordered Set"
    ]
  },
  {
    "title": "maximal-rectangle",
    "paths": [
      "/slides/maximal-rectangle/1/page_1.png",
      "/slides/maximal-rectangle/1/page_10.png",
      "/slides/maximal-rectangle/1/page_2.png",
      "/slides/maximal-rectangle/1/page_3.png",
      "/slides/maximal-rectangle/1/page_4.png",
      "/slides/maximal-rectangle/1/page_5.png",
      "/slides/maximal-rectangle/1/page_6.png",
      "/slides/maximal-rectangle/1/page_7.png",
      "/slides/maximal-rectangle/1/page_8.png",
      "/slides/maximal-rectangle/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Stack",
      " Matrix",
      " Monotonic Stack"
    ]
  },
  {
    "title": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
    "paths": [
      "/slides/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/1/page_1.png",
      "/slides/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/1/page_2.png",
      "/slides/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Array",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "maximum-average-subarray-i",
    "paths": [
      "/slides/maximum-average-subarray-i/1/page_1.png",
      "/slides/maximum-average-subarray-i/1/page_2.png",
      "/slides/maximum-average-subarray-i/1/page_3.png",
      "/slides/maximum-average-subarray-i/1/page_4.png",
      "/slides/maximum-average-subarray-i/1/page_5.png",
      "/slides/maximum-average-subarray-i/1/page_6.png",
      "/slides/maximum-average-subarray-i/1/page_7.png",
      "/slides/maximum-average-subarray-i/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Sliding Window"
    ]
  },
  {
    "title": "maximum-depth-of-binary-tree",
    "paths": [
      "/slides/maximum-depth-of-binary-tree/1/page_1.png",
      "/slides/maximum-depth-of-binary-tree/1/page_10.png",
      "/slides/maximum-depth-of-binary-tree/1/page_2.png",
      "/slides/maximum-depth-of-binary-tree/1/page_3.png",
      "/slides/maximum-depth-of-binary-tree/1/page_4.png",
      "/slides/maximum-depth-of-binary-tree/1/page_5.png",
      "/slides/maximum-depth-of-binary-tree/1/page_6.png",
      "/slides/maximum-depth-of-binary-tree/1/page_7.png",
      "/slides/maximum-depth-of-binary-tree/1/page_8.png",
      "/slides/maximum-depth-of-binary-tree/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "maximum-distance-between-a-pair-of-values",
    "paths": [
      "/slides/maximum-distance-between-a-pair-of-values/1/page_1.png",
      "/slides/maximum-distance-between-a-pair-of-values/1/page_2.png",
      "/slides/maximum-distance-between-a-pair-of-values/1/page_3.png",
      "/slides/maximum-distance-between-a-pair-of-values/1/page_4.png",
      "/slides/maximum-distance-between-a-pair-of-values/1/page_5.png",
      "/slides/maximum-distance-between-a-pair-of-values/1/page_6.png",
      "/slides/maximum-distance-between-a-pair-of-values/1/page_7.png",
      "/slides/maximum-distance-between-a-pair-of-values/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Two Pointers",
      " Binary Search"
    ]
  },
  {
    "title": "maximum-distance-in-arrays",
    "paths": [
      "/slides/maximum-distance-in-arrays/1/page_1.png",
      "/slides/maximum-distance-in-arrays/1/page_2.png",
      "/slides/maximum-distance-in-arrays/1/page_3.png",
      "/slides/maximum-distance-in-arrays/1/page_4.png",
      "/slides/maximum-distance-in-arrays/1/page_5.png",
      "/slides/maximum-distance-in-arrays/1/page_6.png",
      "/slides/maximum-distance-in-arrays/1/page_7.png",
      "/slides/maximum-distance-in-arrays/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Greedy"
    ]
  },
  {
    "title": "maximum-points-you-can-obtain-from-cards",
    "paths": [
      "/slides/maximum-points-you-can-obtain-from-cards/1/page_1.png",
      "/slides/maximum-points-you-can-obtain-from-cards/1/page_2.png",
      "/slides/maximum-points-you-can-obtain-from-cards/1/page_3.png",
      "/slides/maximum-points-you-can-obtain-from-cards/1/page_4.png",
      "/slides/maximum-points-you-can-obtain-from-cards/1/page_5.png",
      "/slides/maximum-points-you-can-obtain-from-cards/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Sliding Window",
      " Prefix Sum"
    ]
  },
  {
    "title": "maximum-product-subarray",
    "paths": [
      "/slides/maximum-product-subarray/1/page_1.png",
      "/slides/maximum-product-subarray/1/page_10.png",
      "/slides/maximum-product-subarray/1/page_11.png",
      "/slides/maximum-product-subarray/1/page_12.png",
      "/slides/maximum-product-subarray/1/page_13.png",
      "/slides/maximum-product-subarray/1/page_14.png",
      "/slides/maximum-product-subarray/1/page_15.png",
      "/slides/maximum-product-subarray/1/page_16.png",
      "/slides/maximum-product-subarray/1/page_17.png",
      "/slides/maximum-product-subarray/1/page_2.png",
      "/slides/maximum-product-subarray/1/page_3.png",
      "/slides/maximum-product-subarray/1/page_4.png",
      "/slides/maximum-product-subarray/1/page_5.png",
      "/slides/maximum-product-subarray/1/page_6.png",
      "/slides/maximum-product-subarray/1/page_7.png",
      "/slides/maximum-product-subarray/1/page_8.png",
      "/slides/maximum-product-subarray/1/page_9.png"
    ],
    "total": 17,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "maximum-profit-in-job-scheduling",
    "paths": [
      "/slides/maximum-profit-in-job-scheduling/1/page_1.png",
      "/slides/maximum-profit-in-job-scheduling/1/page_2.png",
      "/slides/maximum-profit-in-job-scheduling/1/page_3.png",
      "/slides/maximum-profit-in-job-scheduling/1/page_4.png",
      "/slides/maximum-profit-in-job-scheduling/1/page_5.png",
      "/slides/maximum-profit-in-job-scheduling/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Binary Search",
      " Dynamic Programming",
      " Sorting"
    ]
  },
  {
    "title": "maximum-size-subarray-sum-equals-k",
    "paths": [
      "/slides/maximum-size-subarray-sum-equals-k/1/page_1.png",
      "/slides/maximum-size-subarray-sum-equals-k/1/page_2.png",
      "/slides/maximum-size-subarray-sum-equals-k/1/page_3.png",
      "/slides/maximum-size-subarray-sum-equals-k/1/page_4.png",
      "/slides/maximum-size-subarray-sum-equals-k/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Hash Table",
      " Prefix Sum"
    ]
  },
  {
    "title": "maximum-subarray",
    "paths": [
      "/slides/maximum-subarray/1/page_1.png",
      "/slides/maximum-subarray/1/page_10.png",
      "/slides/maximum-subarray/1/page_2.png",
      "/slides/maximum-subarray/1/page_3.png",
      "/slides/maximum-subarray/1/page_4.png",
      "/slides/maximum-subarray/1/page_5.png",
      "/slides/maximum-subarray/1/page_6.png",
      "/slides/maximum-subarray/1/page_7.png",
      "/slides/maximum-subarray/1/page_8.png",
      "/slides/maximum-subarray/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Divide and Conquer",
      " Dynamic Programming"
    ]
  },
  {
    "title": "maximum-vacation-days",
    "paths": [
      "/slides/maximum-vacation-days/1/page_1.png",
      "/slides/maximum-vacation-days/1/page_10.png",
      "/slides/maximum-vacation-days/1/page_11.png",
      "/slides/maximum-vacation-days/1/page_2.png",
      "/slides/maximum-vacation-days/1/page_3.png",
      "/slides/maximum-vacation-days/1/page_4.png",
      "/slides/maximum-vacation-days/1/page_5.png",
      "/slides/maximum-vacation-days/1/page_6.png",
      "/slides/maximum-vacation-days/1/page_7.png",
      "/slides/maximum-vacation-days/1/page_8.png",
      "/slides/maximum-vacation-days/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Matrix"
    ]
  },
  {
    "title": "median-of-two-sorted-arrays",
    "paths": [
      "/slides/median-of-two-sorted-arrays/1/page_1.png",
      "/slides/median-of-two-sorted-arrays/1/page_10.png",
      "/slides/median-of-two-sorted-arrays/1/page_11.png",
      "/slides/median-of-two-sorted-arrays/1/page_12.png",
      "/slides/median-of-two-sorted-arrays/1/page_2.png",
      "/slides/median-of-two-sorted-arrays/1/page_3.png",
      "/slides/median-of-two-sorted-arrays/1/page_4.png",
      "/slides/median-of-two-sorted-arrays/1/page_5.png",
      "/slides/median-of-two-sorted-arrays/1/page_6.png",
      "/slides/median-of-two-sorted-arrays/1/page_7.png",
      "/slides/median-of-two-sorted-arrays/1/page_8.png",
      "/slides/median-of-two-sorted-arrays/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Binary Search",
      " Divide and Conquer"
    ]
  },
  {
    "title": "merge-in-between-linked-lists",
    "paths": [
      "/slides/merge-in-between-linked-lists/1/page_1.png",
      "/slides/merge-in-between-linked-lists/1/page_10.png",
      "/slides/merge-in-between-linked-lists/1/page_11.png",
      "/slides/merge-in-between-linked-lists/1/page_12.png",
      "/slides/merge-in-between-linked-lists/1/page_13.png",
      "/slides/merge-in-between-linked-lists/1/page_14.png",
      "/slides/merge-in-between-linked-lists/1/page_15.png",
      "/slides/merge-in-between-linked-lists/1/page_16.png",
      "/slides/merge-in-between-linked-lists/1/page_17.png",
      "/slides/merge-in-between-linked-lists/1/page_2.png",
      "/slides/merge-in-between-linked-lists/1/page_3.png",
      "/slides/merge-in-between-linked-lists/1/page_4.png",
      "/slides/merge-in-between-linked-lists/1/page_5.png",
      "/slides/merge-in-between-linked-lists/1/page_6.png",
      "/slides/merge-in-between-linked-lists/1/page_7.png",
      "/slides/merge-in-between-linked-lists/1/page_8.png",
      "/slides/merge-in-between-linked-lists/1/page_9.png"
    ],
    "total": 17,
    "topics": [
      "Linked List"
    ]
  },
  {
    "title": "merge-k-sorted-lists",
    "paths": [
      "/slides/merge-k-sorted-lists/1/page_1.png",
      "/slides/merge-k-sorted-lists/1/page_10.png",
      "/slides/merge-k-sorted-lists/1/page_11.png",
      "/slides/merge-k-sorted-lists/1/page_2.png",
      "/slides/merge-k-sorted-lists/1/page_3.png",
      "/slides/merge-k-sorted-lists/1/page_4.png",
      "/slides/merge-k-sorted-lists/1/page_5.png",
      "/slides/merge-k-sorted-lists/1/page_6.png",
      "/slides/merge-k-sorted-lists/1/page_7.png",
      "/slides/merge-k-sorted-lists/1/page_8.png",
      "/slides/merge-k-sorted-lists/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Linked List",
      " Divide and Conquer",
      " Heap (Priority Queue)",
      " Merge Sort"
    ]
  },
  {
    "title": "merge-sorted-array",
    "paths": [
      "/slides/merge-sorted-array/1/page_1.png",
      "/slides/merge-sorted-array/1/page_2.png",
      "/slides/merge-sorted-array/1/page_3.png",
      "/slides/merge-sorted-array/1/page_4.png",
      "/slides/merge-sorted-array/1/page_5.png",
      "/slides/merge-sorted-array/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Two Pointers",
      " Sorting"
    ]
  },
  {
    "title": "merge-strings-alternately",
    "paths": [
      "/slides/merge-strings-alternately/1/page_1.png",
      "/slides/merge-strings-alternately/1/page_2.png",
      "/slides/merge-strings-alternately/1/page_3.png",
      "/slides/merge-strings-alternately/1/page_4.png",
      "/slides/merge-strings-alternately/1/page_5.png",
      "/slides/merge-strings-alternately/1/page_6.png",
      "/slides/merge-strings-alternately/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Two Pointers",
      " String"
    ]
  },
  {
    "title": "merge-two-binary-trees",
    "paths": [
      "/slides/merge-two-binary-trees/1/page_1.png",
      "/slides/merge-two-binary-trees/1/page_10.png",
      "/slides/merge-two-binary-trees/1/page_11.png",
      "/slides/merge-two-binary-trees/1/page_12.png",
      "/slides/merge-two-binary-trees/1/page_13.png",
      "/slides/merge-two-binary-trees/1/page_14.png",
      "/slides/merge-two-binary-trees/1/page_15.png",
      "/slides/merge-two-binary-trees/1/page_2.png",
      "/slides/merge-two-binary-trees/1/page_3.png",
      "/slides/merge-two-binary-trees/1/page_4.png",
      "/slides/merge-two-binary-trees/1/page_5.png",
      "/slides/merge-two-binary-trees/1/page_6.png",
      "/slides/merge-two-binary-trees/1/page_7.png",
      "/slides/merge-two-binary-trees/1/page_8.png",
      "/slides/merge-two-binary-trees/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "merge-two-sorted-lists",
    "paths": [
      "/slides/merge-two-sorted-lists/1/page_1.png",
      "/slides/merge-two-sorted-lists/1/page_10.png",
      "/slides/merge-two-sorted-lists/1/page_11.png",
      "/slides/merge-two-sorted-lists/1/page_12.png",
      "/slides/merge-two-sorted-lists/1/page_13.png",
      "/slides/merge-two-sorted-lists/1/page_14.png",
      "/slides/merge-two-sorted-lists/1/page_15.png",
      "/slides/merge-two-sorted-lists/1/page_16.png",
      "/slides/merge-two-sorted-lists/1/page_17.png",
      "/slides/merge-two-sorted-lists/1/page_18.png",
      "/slides/merge-two-sorted-lists/1/page_19.png",
      "/slides/merge-two-sorted-lists/1/page_2.png",
      "/slides/merge-two-sorted-lists/1/page_20.png",
      "/slides/merge-two-sorted-lists/1/page_21.png",
      "/slides/merge-two-sorted-lists/1/page_22.png",
      "/slides/merge-two-sorted-lists/1/page_23.png",
      "/slides/merge-two-sorted-lists/1/page_24.png",
      "/slides/merge-two-sorted-lists/1/page_25.png",
      "/slides/merge-two-sorted-lists/1/page_26.png",
      "/slides/merge-two-sorted-lists/1/page_27.png",
      "/slides/merge-two-sorted-lists/1/page_28.png",
      "/slides/merge-two-sorted-lists/1/page_29.png",
      "/slides/merge-two-sorted-lists/1/page_3.png",
      "/slides/merge-two-sorted-lists/1/page_30.png",
      "/slides/merge-two-sorted-lists/1/page_31.png",
      "/slides/merge-two-sorted-lists/1/page_32.png",
      "/slides/merge-two-sorted-lists/1/page_33.png",
      "/slides/merge-two-sorted-lists/1/page_34.png",
      "/slides/merge-two-sorted-lists/1/page_35.png",
      "/slides/merge-two-sorted-lists/1/page_4.png",
      "/slides/merge-two-sorted-lists/1/page_5.png",
      "/slides/merge-two-sorted-lists/1/page_6.png",
      "/slides/merge-two-sorted-lists/1/page_7.png",
      "/slides/merge-two-sorted-lists/1/page_8.png",
      "/slides/merge-two-sorted-lists/1/page_9.png"
    ],
    "total": 35,
    "topics": [
      "Linked List",
      " Recursion"
    ]
  },
  {
    "title": "min-cost-climbing-stairs",
    "paths": [
      "/slides/min-cost-climbing-stairs/1/page_1.png",
      "/slides/min-cost-climbing-stairs/1/page_2.png",
      "/slides/min-cost-climbing-stairs/1/page_3.png",
      "/slides/min-cost-climbing-stairs/1/page_4.png",
      "/slides/min-cost-climbing-stairs/1/page_5.png",
      "/slides/min-cost-climbing-stairs/1/page_6.png",
      "/slides/min-cost-climbing-stairs/1/page_7.png",
      "/slides/min-cost-climbing-stairs/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "min-cost-to-connect-all-points",
    "paths": [
      "/slides/min-cost-to-connect-all-points/1/page_1.png",
      "/slides/min-cost-to-connect-all-points/1/page_10.png",
      "/slides/min-cost-to-connect-all-points/1/page_11.png",
      "/slides/min-cost-to-connect-all-points/1/page_12.png",
      "/slides/min-cost-to-connect-all-points/1/page_2.png",
      "/slides/min-cost-to-connect-all-points/1/page_3.png",
      "/slides/min-cost-to-connect-all-points/1/page_4.png",
      "/slides/min-cost-to-connect-all-points/1/page_5.png",
      "/slides/min-cost-to-connect-all-points/1/page_6.png",
      "/slides/min-cost-to-connect-all-points/1/page_7.png",
      "/slides/min-cost-to-connect-all-points/1/page_8.png",
      "/slides/min-cost-to-connect-all-points/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Union Find",
      " Graph",
      " Minimum Spanning Tree"
    ]
  },
  {
    "title": "min-stack",
    "paths": [
      "/slides/min-stack/1/page_1.png",
      "/slides/min-stack/1/page_10.png",
      "/slides/min-stack/1/page_11.png",
      "/slides/min-stack/1/page_12.png",
      "/slides/min-stack/1/page_13.png",
      "/slides/min-stack/1/page_14.png",
      "/slides/min-stack/1/page_2.png",
      "/slides/min-stack/1/page_3.png",
      "/slides/min-stack/1/page_4.png",
      "/slides/min-stack/1/page_5.png",
      "/slides/min-stack/1/page_6.png",
      "/slides/min-stack/1/page_7.png",
      "/slides/min-stack/1/page_8.png",
      "/slides/min-stack/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Stack",
      " Design"
    ]
  },
  {
    "title": "minimize-product-sum-of-two-arrays",
    "paths": [
      "/slides/minimize-product-sum-of-two-arrays/1/page_1.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_10.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_11.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_12.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_13.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_14.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_15.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_2.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_3.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_4.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_5.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_6.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_7.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_8.png",
      "/slides/minimize-product-sum-of-two-arrays/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Array",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "minimum-absolute-difference",
    "paths": [
      "/slides/minimum-absolute-difference/1/page_1.png",
      "/slides/minimum-absolute-difference/1/page_10.png",
      "/slides/minimum-absolute-difference/1/page_2.png",
      "/slides/minimum-absolute-difference/1/page_3.png",
      "/slides/minimum-absolute-difference/1/page_4.png",
      "/slides/minimum-absolute-difference/1/page_5.png",
      "/slides/minimum-absolute-difference/1/page_6.png",
      "/slides/minimum-absolute-difference/1/page_7.png",
      "/slides/minimum-absolute-difference/1/page_8.png",
      "/slides/minimum-absolute-difference/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Sorting"
    ]
  },
  {
    "title": "minimum-ascii-delete-sum-for-two-strings",
    "paths": [
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_1.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_10.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_11.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_12.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_13.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_14.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_15.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_16.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_17.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_18.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_19.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_2.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_20.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_21.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_22.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_23.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_24.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_25.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_26.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_27.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_28.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_29.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_3.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_30.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_31.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_32.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_33.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_34.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_35.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_36.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_4.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_5.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_6.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_7.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_8.png",
      "/slides/minimum-ascii-delete-sum-for-two-strings/1/page_9.png"
    ],
    "total": 36,
    "topics": [
      "String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "minimum-cost-to-hire-k-workers",
    "paths": [
      "/slides/minimum-cost-to-hire-k-workers/1/page_1.png",
      "/slides/minimum-cost-to-hire-k-workers/1/page_2.png",
      "/slides/minimum-cost-to-hire-k-workers/1/page_3.png",
      "/slides/minimum-cost-to-hire-k-workers/1/page_4.png",
      "/slides/minimum-cost-to-hire-k-workers/1/page_5.png",
      "/slides/minimum-cost-to-hire-k-workers/1/page_6.png",
      "/slides/minimum-cost-to-hire-k-workers/1/page_7.png",
      "/slides/minimum-cost-to-hire-k-workers/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Greedy",
      " Sorting",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "minimum-deletions-to-make-character-frequencies-unique",
    "paths": [
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_1.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_10.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_11.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_12.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_13.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_2.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_3.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_4.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_5.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_6.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_7.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_8.png",
      "/slides/minimum-deletions-to-make-character-frequencies-unique/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Hash Table",
      " String",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "minimum-difficulty-of-a-job-schedule",
    "paths": [
      "/slides/minimum-difficulty-of-a-job-schedule/1/page_1.png",
      "/slides/minimum-difficulty-of-a-job-schedule/1/page_2.png"
    ],
    "total": 2,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "minimum-factorization",
    "paths": [
      "/slides/minimum-factorization/1/page_1.png",
      "/slides/minimum-factorization/1/page_10.png",
      "/slides/minimum-factorization/1/page_11.png",
      "/slides/minimum-factorization/1/page_2.png",
      "/slides/minimum-factorization/1/page_3.png",
      "/slides/minimum-factorization/1/page_4.png",
      "/slides/minimum-factorization/1/page_5.png",
      "/slides/minimum-factorization/1/page_6.png",
      "/slides/minimum-factorization/1/page_7.png",
      "/slides/minimum-factorization/1/page_8.png",
      "/slides/minimum-factorization/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Math",
      " Greedy"
    ]
  },
  {
    "title": "minimum-falling-path-sum-ii",
    "paths": [
      "/slides/minimum-falling-path-sum-ii/1/page_1.png",
      "/slides/minimum-falling-path-sum-ii/1/page_10.png",
      "/slides/minimum-falling-path-sum-ii/1/page_11.png",
      "/slides/minimum-falling-path-sum-ii/1/page_12.png",
      "/slides/minimum-falling-path-sum-ii/1/page_13.png",
      "/slides/minimum-falling-path-sum-ii/1/page_14.png",
      "/slides/minimum-falling-path-sum-ii/1/page_15.png",
      "/slides/minimum-falling-path-sum-ii/1/page_16.png",
      "/slides/minimum-falling-path-sum-ii/1/page_17.png",
      "/slides/minimum-falling-path-sum-ii/1/page_18.png",
      "/slides/minimum-falling-path-sum-ii/1/page_19.png",
      "/slides/minimum-falling-path-sum-ii/1/page_2.png",
      "/slides/minimum-falling-path-sum-ii/1/page_20.png",
      "/slides/minimum-falling-path-sum-ii/1/page_21.png",
      "/slides/minimum-falling-path-sum-ii/1/page_22.png",
      "/slides/minimum-falling-path-sum-ii/1/page_3.png",
      "/slides/minimum-falling-path-sum-ii/1/page_4.png",
      "/slides/minimum-falling-path-sum-ii/1/page_5.png",
      "/slides/minimum-falling-path-sum-ii/1/page_6.png",
      "/slides/minimum-falling-path-sum-ii/1/page_7.png",
      "/slides/minimum-falling-path-sum-ii/1/page_8.png",
      "/slides/minimum-falling-path-sum-ii/1/page_9.png"
    ],
    "total": 22,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Matrix"
    ]
  },
  {
    "title": "minimum-index-sum-of-two-lists",
    "paths": [
      "/slides/minimum-index-sum-of-two-lists/1/page_1.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_10.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_11.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_12.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_13.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_14.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_2.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_3.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_4.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_5.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_6.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_7.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_8.png",
      "/slides/minimum-index-sum-of-two-lists/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Hash Table",
      " String"
    ]
  },
  {
    "title": "minimum-length-of-string-after-deleting-similar-ends",
    "paths": [
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_1.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_10.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_2.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_3.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_4.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_5.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_6.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_7.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_8.png",
      "/slides/minimum-length-of-string-after-deleting-similar-ends/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Two Pointers",
      " String"
    ]
  },
  {
    "title": "minimum-moves-to-equal-array-elements",
    "paths": [
      "/slides/minimum-moves-to-equal-array-elements/1/page_1.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_10.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_11.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_12.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_13.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_14.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_15.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_16.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_2.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_3.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_4.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_5.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_6.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_7.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_8.png",
      "/slides/minimum-moves-to-equal-array-elements/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Array",
      " Math"
    ]
  },
  {
    "title": "minimum-moves-to-equal-array-elements-ii",
    "paths": [
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_1.png",
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_2.png",
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_3.png",
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_4.png",
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_5.png",
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_6.png",
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_7.png",
      "/slides/minimum-moves-to-equal-array-elements-ii/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Math",
      " Sorting"
    ]
  },
  {
    "title": "minimum-path-sum",
    "paths": [
      "/slides/minimum-path-sum/1/page_1.png",
      "/slides/minimum-path-sum/1/page_10.png",
      "/slides/minimum-path-sum/1/page_11.png",
      "/slides/minimum-path-sum/1/page_12.png",
      "/slides/minimum-path-sum/1/page_13.png",
      "/slides/minimum-path-sum/1/page_14.png",
      "/slides/minimum-path-sum/1/page_15.png",
      "/slides/minimum-path-sum/1/page_16.png",
      "/slides/minimum-path-sum/1/page_17.png",
      "/slides/minimum-path-sum/1/page_2.png",
      "/slides/minimum-path-sum/1/page_3.png",
      "/slides/minimum-path-sum/1/page_4.png",
      "/slides/minimum-path-sum/1/page_5.png",
      "/slides/minimum-path-sum/1/page_6.png",
      "/slides/minimum-path-sum/1/page_7.png",
      "/slides/minimum-path-sum/1/page_8.png",
      "/slides/minimum-path-sum/1/page_9.png"
    ],
    "total": 17,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Matrix"
    ]
  },
  {
    "title": "minimum-remove-to-make-valid-parentheses",
    "paths": [
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_1.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_10.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_11.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_12.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_13.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_14.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_15.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_16.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_17.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_18.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_19.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_2.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_20.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_21.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_22.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_23.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_24.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_25.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_3.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_4.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_5.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_6.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_7.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_8.png",
      "/slides/minimum-remove-to-make-valid-parentheses/1/page_9.png"
    ],
    "total": 25,
    "topics": [
      "String",
      " Stack"
    ]
  },
  {
    "title": "minimum-size-subarray-sum",
    "paths": [
      "/slides/minimum-size-subarray-sum/1/page_1.png",
      "/slides/minimum-size-subarray-sum/1/page_10.png",
      "/slides/minimum-size-subarray-sum/1/page_11.png",
      "/slides/minimum-size-subarray-sum/1/page_2.png",
      "/slides/minimum-size-subarray-sum/1/page_3.png",
      "/slides/minimum-size-subarray-sum/1/page_4.png",
      "/slides/minimum-size-subarray-sum/1/page_5.png",
      "/slides/minimum-size-subarray-sum/1/page_6.png",
      "/slides/minimum-size-subarray-sum/1/page_7.png",
      "/slides/minimum-size-subarray-sum/1/page_8.png",
      "/slides/minimum-size-subarray-sum/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Binary Search",
      " Sliding Window",
      " Prefix Sum"
    ]
  },
  {
    "title": "minimum-swaps-to-group-all-1s-together",
    "paths": [
      "/slides/minimum-swaps-to-group-all-1s-together/1/page_1.png",
      "/slides/minimum-swaps-to-group-all-1s-together/1/page_2.png",
      "/slides/minimum-swaps-to-group-all-1s-together/1/page_3.png",
      "/slides/minimum-swaps-to-group-all-1s-together/1/page_4.png",
      "/slides/minimum-swaps-to-group-all-1s-together/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Sliding Window"
    ]
  },
  {
    "title": "minimum-time-to-make-rope-colorful",
    "paths": [
      "/slides/minimum-time-to-make-rope-colorful/1/page_1.png",
      "/slides/minimum-time-to-make-rope-colorful/1/page_2.png",
      "/slides/minimum-time-to-make-rope-colorful/1/page_3.png",
      "/slides/minimum-time-to-make-rope-colorful/1/page_4.png",
      "/slides/minimum-time-to-make-rope-colorful/1/page_5.png",
      "/slides/minimum-time-to-make-rope-colorful/1/page_6.png",
      "/slides/minimum-time-to-make-rope-colorful/1/page_7.png",
      "/slides/minimum-time-to-make-rope-colorful/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " String",
      " Dynamic Programming",
      " Greedy"
    ]
  },
  {
    "title": "minimum-value-to-get-positive-step-by-step-sum",
    "paths": [
      "/slides/minimum-value-to-get-positive-step-by-step-sum/1/page_1.png",
      "/slides/minimum-value-to-get-positive-step-by-step-sum/1/page_2.png",
      "/slides/minimum-value-to-get-positive-step-by-step-sum/1/page_3.png",
      "/slides/minimum-value-to-get-positive-step-by-step-sum/1/page_4.png",
      "/slides/minimum-value-to-get-positive-step-by-step-sum/1/page_5.png",
      "/slides/minimum-value-to-get-positive-step-by-step-sum/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Prefix Sum"
    ]
  },
  {
    "title": "most-frequent-subtree-sum",
    "paths": [
      "/slides/most-frequent-subtree-sum/1/page_1.png",
      "/slides/most-frequent-subtree-sum/1/page_10.png",
      "/slides/most-frequent-subtree-sum/1/page_11.png",
      "/slides/most-frequent-subtree-sum/1/page_12.png",
      "/slides/most-frequent-subtree-sum/1/page_13.png",
      "/slides/most-frequent-subtree-sum/1/page_14.png",
      "/slides/most-frequent-subtree-sum/1/page_15.png",
      "/slides/most-frequent-subtree-sum/1/page_16.png",
      "/slides/most-frequent-subtree-sum/1/page_17.png",
      "/slides/most-frequent-subtree-sum/1/page_18.png",
      "/slides/most-frequent-subtree-sum/1/page_2.png",
      "/slides/most-frequent-subtree-sum/1/page_3.png",
      "/slides/most-frequent-subtree-sum/1/page_4.png",
      "/slides/most-frequent-subtree-sum/1/page_5.png",
      "/slides/most-frequent-subtree-sum/1/page_6.png",
      "/slides/most-frequent-subtree-sum/1/page_7.png",
      "/slides/most-frequent-subtree-sum/1/page_8.png",
      "/slides/most-frequent-subtree-sum/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Hash Table",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "multiply-strings",
    "paths": [
      "/slides/multiply-strings/1/page_1.png",
      "/slides/multiply-strings/1/page_10.png",
      "/slides/multiply-strings/1/page_11.png",
      "/slides/multiply-strings/1/page_12.png",
      "/slides/multiply-strings/1/page_2.png",
      "/slides/multiply-strings/1/page_3.png",
      "/slides/multiply-strings/1/page_4.png",
      "/slides/multiply-strings/1/page_5.png",
      "/slides/multiply-strings/1/page_6.png",
      "/slides/multiply-strings/1/page_7.png",
      "/slides/multiply-strings/1/page_8.png",
      "/slides/multiply-strings/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Math",
      " String",
      " Simulation"
    ]
  },
  {
    "title": "n-ary-tree-level-order-traversal",
    "paths": [
      "/slides/n-ary-tree-level-order-traversal/1/page_1.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_10.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_11.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_12.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_13.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_14.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_15.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_16.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_17.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_18.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_19.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_2.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_20.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_21.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_22.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_23.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_24.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_25.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_26.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_27.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_28.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_29.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_3.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_30.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_31.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_4.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_5.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_6.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_7.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_8.png",
      "/slides/n-ary-tree-level-order-traversal/1/page_9.png"
    ],
    "total": 31,
    "topics": [
      "Tree",
      " Breadth-First Search"
    ]
  },
  {
    "title": "nearest-exit-from-entrance-in-maze",
    "paths": [
      "/slides/nearest-exit-from-entrance-in-maze/1/page_1.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_10.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_11.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_12.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_13.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_14.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_2.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_3.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_4.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_5.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_6.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_7.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_8.png",
      "/slides/nearest-exit-from-entrance-in-maze/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Breadth-First Search",
      " Matrix"
    ]
  },
  {
    "title": "network-delay-time",
    "paths": [
      "/slides/network-delay-time/1/page_1.png",
      "/slides/network-delay-time/1/page_10.png",
      "/slides/network-delay-time/1/page_2.png",
      "/slides/network-delay-time/1/page_3.png",
      "/slides/network-delay-time/1/page_4.png",
      "/slides/network-delay-time/1/page_5.png",
      "/slides/network-delay-time/1/page_6.png",
      "/slides/network-delay-time/1/page_7.png",
      "/slides/network-delay-time/1/page_8.png",
      "/slides/network-delay-time/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Depth-First Search",
      " Breadth-First Search",
      " Graph",
      " Heap (Priority Queue)",
      " Shortest Path"
    ]
  },
  {
    "title": "next-greater-element-i",
    "paths": [
      "/slides/next-greater-element-i/1/page_1.png",
      "/slides/next-greater-element-i/1/page_10.png",
      "/slides/next-greater-element-i/1/page_11.png",
      "/slides/next-greater-element-i/1/page_12.png",
      "/slides/next-greater-element-i/1/page_13.png",
      "/slides/next-greater-element-i/1/page_14.png",
      "/slides/next-greater-element-i/1/page_15.png",
      "/slides/next-greater-element-i/1/page_16.png",
      "/slides/next-greater-element-i/1/page_17.png",
      "/slides/next-greater-element-i/1/page_18.png",
      "/slides/next-greater-element-i/1/page_19.png",
      "/slides/next-greater-element-i/1/page_2.png",
      "/slides/next-greater-element-i/1/page_20.png",
      "/slides/next-greater-element-i/1/page_21.png",
      "/slides/next-greater-element-i/1/page_22.png",
      "/slides/next-greater-element-i/1/page_3.png",
      "/slides/next-greater-element-i/1/page_4.png",
      "/slides/next-greater-element-i/1/page_5.png",
      "/slides/next-greater-element-i/1/page_6.png",
      "/slides/next-greater-element-i/1/page_7.png",
      "/slides/next-greater-element-i/1/page_8.png",
      "/slides/next-greater-element-i/1/page_9.png"
    ],
    "total": 22,
    "topics": [
      "Array",
      " Hash Table",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "next-greater-element-ii",
    "paths": [
      "/slides/next-greater-element-ii/1/page_1.png",
      "/slides/next-greater-element-ii/1/page_10.png",
      "/slides/next-greater-element-ii/1/page_11.png",
      "/slides/next-greater-element-ii/1/page_12.png",
      "/slides/next-greater-element-ii/1/page_13.png",
      "/slides/next-greater-element-ii/1/page_14.png",
      "/slides/next-greater-element-ii/1/page_15.png",
      "/slides/next-greater-element-ii/1/page_16.png",
      "/slides/next-greater-element-ii/1/page_17.png",
      "/slides/next-greater-element-ii/1/page_18.png",
      "/slides/next-greater-element-ii/1/page_19.png",
      "/slides/next-greater-element-ii/1/page_2.png",
      "/slides/next-greater-element-ii/1/page_20.png",
      "/slides/next-greater-element-ii/1/page_21.png",
      "/slides/next-greater-element-ii/1/page_22.png",
      "/slides/next-greater-element-ii/1/page_23.png",
      "/slides/next-greater-element-ii/1/page_24.png",
      "/slides/next-greater-element-ii/1/page_25.png",
      "/slides/next-greater-element-ii/1/page_3.png",
      "/slides/next-greater-element-ii/1/page_4.png",
      "/slides/next-greater-element-ii/1/page_5.png",
      "/slides/next-greater-element-ii/1/page_6.png",
      "/slides/next-greater-element-ii/1/page_7.png",
      "/slides/next-greater-element-ii/1/page_8.png",
      "/slides/next-greater-element-ii/1/page_9.png"
    ],
    "total": 25,
    "topics": [
      "Array",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "next-greater-element-iii",
    "paths": [
      "/slides/next-greater-element-iii/1/page_1.png",
      "/slides/next-greater-element-iii/1/page_10.png",
      "/slides/next-greater-element-iii/1/page_11.png",
      "/slides/next-greater-element-iii/1/page_12.png",
      "/slides/next-greater-element-iii/1/page_13.png",
      "/slides/next-greater-element-iii/1/page_14.png",
      "/slides/next-greater-element-iii/1/page_2.png",
      "/slides/next-greater-element-iii/1/page_3.png",
      "/slides/next-greater-element-iii/1/page_4.png",
      "/slides/next-greater-element-iii/1/page_5.png",
      "/slides/next-greater-element-iii/1/page_6.png",
      "/slides/next-greater-element-iii/1/page_7.png",
      "/slides/next-greater-element-iii/1/page_8.png",
      "/slides/next-greater-element-iii/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Math",
      " Two Pointers",
      " String"
    ]
  },
  {
    "title": "next-greater-node-in-linked-list",
    "paths": [
      "/slides/next-greater-node-in-linked-list/1/page_1.png",
      "/slides/next-greater-node-in-linked-list/1/page_2.png",
      "/slides/next-greater-node-in-linked-list/1/page_3.png",
      "/slides/next-greater-node-in-linked-list/1/page_4.png",
      "/slides/next-greater-node-in-linked-list/1/page_5.png",
      "/slides/next-greater-node-in-linked-list/1/page_6.png",
      "/slides/next-greater-node-in-linked-list/1/page_7.png",
      "/slides/next-greater-node-in-linked-list/1/page_8.png",
      "/slides/next-greater-node-in-linked-list/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Linked List",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "non-negative-integers-without-consecutive-ones",
    "paths": [
      "/slides/non-negative-integers-without-consecutive-ones/1/page_1.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_10.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_11.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_12.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_2.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_3.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_4.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_5.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_6.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_7.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_8.png",
      "/slides/non-negative-integers-without-consecutive-ones/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Dynamic Programming"
    ]
  },
  {
    "title": "number-complement",
    "paths": [
      "/slides/number-complement/1/page_1.png",
      "/slides/number-complement/1/page_2.png",
      "/slides/number-complement/1/page_3.png",
      "/slides/number-complement/1/page_4.png",
      "/slides/number-complement/1/page_5.png",
      "/slides/number-complement/1/page_6.png",
      "/slides/number-complement/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Bit Manipulation"
    ]
  },
  {
    "title": "number-of-closed-islands",
    "paths": [
      "/slides/number-of-closed-islands/1/page_1.png",
      "/slides/number-of-closed-islands/1/page_2.png",
      "/slides/number-of-closed-islands/1/page_3.png",
      "/slides/number-of-closed-islands/1/page_4.png",
      "/slides/number-of-closed-islands/1/page_5.png",
      "/slides/number-of-closed-islands/1/page_6.png",
      "/slides/number-of-closed-islands/1/page_7.png",
      "/slides/number-of-closed-islands/1/page_8.png",
      "/slides/number-of-closed-islands/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Depth-First Search",
      " Breadth-First Search",
      " Union Find",
      " Matrix"
    ]
  },
  {
    "title": "number-of-enclaves",
    "paths": [
      "/slides/number-of-enclaves/1/page_1.png",
      "/slides/number-of-enclaves/1/page_2.png",
      "/slides/number-of-enclaves/1/page_3.png",
      "/slides/number-of-enclaves/1/page_4.png",
      "/slides/number-of-enclaves/1/page_5.png",
      "/slides/number-of-enclaves/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Depth-First Search",
      " Breadth-First Search",
      " Union Find",
      " Matrix"
    ]
  },
  {
    "title": "number-of-islands",
    "paths": [
      "/slides/number-of-islands/1/page_1.png",
      "/slides/number-of-islands/1/page_2.png",
      "/slides/number-of-islands/1/page_3.png",
      "/slides/number-of-islands/1/page_4.png",
      "/slides/number-of-islands/1/page_5.png",
      "/slides/number-of-islands/1/page_6.png",
      "/slides/number-of-islands/1/page_7.png",
      "/slides/number-of-islands/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Depth-First Search",
      " Breadth-First Search",
      " Union Find",
      " Matrix"
    ]
  },
  {
    "title": "number-of-islands-ii",
    "paths": [
      "/slides/number-of-islands-ii/1/page_1.png",
      "/slides/number-of-islands-ii/1/page_10.png",
      "/slides/number-of-islands-ii/1/page_11.png",
      "/slides/number-of-islands-ii/1/page_12.png",
      "/slides/number-of-islands-ii/1/page_13.png",
      "/slides/number-of-islands-ii/1/page_14.png",
      "/slides/number-of-islands-ii/1/page_15.png",
      "/slides/number-of-islands-ii/1/page_2.png",
      "/slides/number-of-islands-ii/1/page_3.png",
      "/slides/number-of-islands-ii/1/page_4.png",
      "/slides/number-of-islands-ii/1/page_5.png",
      "/slides/number-of-islands-ii/1/page_6.png",
      "/slides/number-of-islands-ii/1/page_7.png",
      "/slides/number-of-islands-ii/1/page_8.png",
      "/slides/number-of-islands-ii/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Array",
      " Hash Table",
      " Union Find"
    ]
  },
  {
    "title": "number-of-longest-increasing-subsequence",
    "paths": [
      "/slides/number-of-longest-increasing-subsequence/1/page_1.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_10.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_11.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_12.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_13.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_14.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_15.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_16.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_17.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_18.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_19.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_2.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_20.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_21.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_22.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_23.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_3.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_4.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_5.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_6.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_7.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_8.png",
      "/slides/number-of-longest-increasing-subsequence/1/page_9.png"
    ],
    "total": 23,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Binary Indexed Tree",
      " Segment Tree"
    ]
  },
  {
    "title": "number-of-nodes-in-the-sub-tree-with-the-same-label",
    "paths": [
      "/slides/number-of-nodes-in-the-sub-tree-with-the-same-label/1/page_1.png",
      "/slides/number-of-nodes-in-the-sub-tree-with-the-same-label/1/page_2.png",
      "/slides/number-of-nodes-in-the-sub-tree-with-the-same-label/1/page_3.png",
      "/slides/number-of-nodes-in-the-sub-tree-with-the-same-label/1/page_4.png",
      "/slides/number-of-nodes-in-the-sub-tree-with-the-same-label/1/page_5.png",
      "/slides/number-of-nodes-in-the-sub-tree-with-the-same-label/1/page_6.png",
      "/slides/number-of-nodes-in-the-sub-tree-with-the-same-label/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Hash Table",
      " Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Counting"
    ]
  },
  {
    "title": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
    "paths": [
      "/slides/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/1/page_1.png",
      "/slides/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/1/page_2.png",
      "/slides/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/1/page_3.png",
      "/slides/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "String",
      " Bit Manipulation"
    ]
  },
  {
    "title": "number-of-steps-to-reduce-a-number-to-zero",
    "paths": [
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_1.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_10.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_11.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_12.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_2.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_3.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_4.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_5.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_6.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_7.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_8.png",
      "/slides/number-of-steps-to-reduce-a-number-to-zero/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Math",
      " Bit Manipulation"
    ]
  },
  {
    "title": "number-of-students-unable-to-eat-lunch",
    "paths": [
      "/slides/number-of-students-unable-to-eat-lunch/1/page_1.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_10.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_11.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_12.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_13.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_14.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_15.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_2.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_3.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_4.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_5.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_6.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_7.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_8.png",
      "/slides/number-of-students-unable-to-eat-lunch/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Array",
      " Stack",
      " Queue",
      " Simulation"
    ]
  },
  {
    "title": "number-of-submatrices-that-sum-to-target",
    "paths": [
      "/slides/number-of-submatrices-that-sum-to-target/1/page_1.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_2.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_3.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_4.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_5.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_6.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_7.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_8.png",
      "/slides/number-of-submatrices-that-sum-to-target/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Hash Table",
      " Matrix",
      " Prefix Sum"
    ]
  },
  {
    "title": "number-of-subsequences-that-satisfy-the-given-sum-condition",
    "paths": [
      "/slides/number-of-subsequences-that-satisfy-the-given-sum-condition/1/page_1.png",
      "/slides/number-of-subsequences-that-satisfy-the-given-sum-condition/1/page_2.png",
      "/slides/number-of-subsequences-that-satisfy-the-given-sum-condition/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Array",
      " Two Pointers",
      " Binary Search",
      " Sorting"
    ]
  },
  {
    "title": "number-of-ways-to-form-a-target-string-given-a-dictionary",
    "paths": [
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_1.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_10.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_2.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_3.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_4.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_5.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_6.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_7.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_8.png",
      "/slides/number-of-ways-to-form-a-target-string-given-a-dictionary/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "ones-and-zeroes",
    "paths": [
      "/slides/ones-and-zeroes/1/page_1.png",
      "/slides/ones-and-zeroes/1/page_10.png",
      "/slides/ones-and-zeroes/1/page_11.png",
      "/slides/ones-and-zeroes/1/page_12.png",
      "/slides/ones-and-zeroes/1/page_13.png",
      "/slides/ones-and-zeroes/1/page_14.png",
      "/slides/ones-and-zeroes/1/page_15.png",
      "/slides/ones-and-zeroes/1/page_16.png",
      "/slides/ones-and-zeroes/1/page_17.png",
      "/slides/ones-and-zeroes/1/page_18.png",
      "/slides/ones-and-zeroes/1/page_19.png",
      "/slides/ones-and-zeroes/1/page_2.png",
      "/slides/ones-and-zeroes/1/page_20.png",
      "/slides/ones-and-zeroes/1/page_3.png",
      "/slides/ones-and-zeroes/1/page_4.png",
      "/slides/ones-and-zeroes/1/page_5.png",
      "/slides/ones-and-zeroes/1/page_6.png",
      "/slides/ones-and-zeroes/1/page_7.png",
      "/slides/ones-and-zeroes/1/page_8.png",
      "/slides/ones-and-zeroes/1/page_9.png"
    ],
    "total": 20,
    "topics": [
      "Array",
      " String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "out-of-boundary-paths",
    "paths": [
      "/slides/out-of-boundary-paths/1/page_1.png",
      "/slides/out-of-boundary-paths/1/page_2.png",
      "/slides/out-of-boundary-paths/1/page_3.png",
      "/slides/out-of-boundary-paths/1/page_4.png",
      "/slides/out-of-boundary-paths/1/page_5.png",
      "/slides/out-of-boundary-paths/1/page_6.png",
      "/slides/out-of-boundary-paths/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Dynamic Programming"
    ]
  },
  {
    "title": "pacific-atlantic-water-flow",
    "paths": [
      "/slides/pacific-atlantic-water-flow/1/page_1.png",
      "/slides/pacific-atlantic-water-flow/1/page_2.png",
      "/slides/pacific-atlantic-water-flow/1/page_3.png",
      "/slides/pacific-atlantic-water-flow/1/page_4.png",
      "/slides/pacific-atlantic-water-flow/1/page_5.png",
      "/slides/pacific-atlantic-water-flow/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Depth-First Search",
      " Breadth-First Search",
      " Matrix"
    ]
  },
  {
    "title": "paint-house",
    "paths": [
      "/slides/paint-house/1/page_1.png",
      "/slides/paint-house/1/page_10.png",
      "/slides/paint-house/1/page_11.png",
      "/slides/paint-house/1/page_12.png",
      "/slides/paint-house/1/page_13.png",
      "/slides/paint-house/1/page_14.png",
      "/slides/paint-house/1/page_15.png",
      "/slides/paint-house/1/page_16.png",
      "/slides/paint-house/1/page_17.png",
      "/slides/paint-house/1/page_18.png",
      "/slides/paint-house/1/page_19.png",
      "/slides/paint-house/1/page_2.png",
      "/slides/paint-house/1/page_20.png",
      "/slides/paint-house/1/page_21.png",
      "/slides/paint-house/1/page_22.png",
      "/slides/paint-house/1/page_23.png",
      "/slides/paint-house/1/page_24.png",
      "/slides/paint-house/1/page_25.png",
      "/slides/paint-house/1/page_26.png",
      "/slides/paint-house/1/page_27.png",
      "/slides/paint-house/1/page_3.png",
      "/slides/paint-house/1/page_4.png",
      "/slides/paint-house/1/page_5.png",
      "/slides/paint-house/1/page_6.png",
      "/slides/paint-house/1/page_7.png",
      "/slides/paint-house/1/page_8.png",
      "/slides/paint-house/1/page_9.png"
    ],
    "total": 27,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "paint-house-ii",
    "paths": [
      "/slides/paint-house-ii/1/page_1.png",
      "/slides/paint-house-ii/1/page_10.png",
      "/slides/paint-house-ii/1/page_11.png",
      "/slides/paint-house-ii/1/page_12.png",
      "/slides/paint-house-ii/1/page_13.png",
      "/slides/paint-house-ii/1/page_14.png",
      "/slides/paint-house-ii/1/page_15.png",
      "/slides/paint-house-ii/1/page_16.png",
      "/slides/paint-house-ii/1/page_17.png",
      "/slides/paint-house-ii/1/page_18.png",
      "/slides/paint-house-ii/1/page_19.png",
      "/slides/paint-house-ii/1/page_2.png",
      "/slides/paint-house-ii/1/page_20.png",
      "/slides/paint-house-ii/1/page_21.png",
      "/slides/paint-house-ii/1/page_22.png",
      "/slides/paint-house-ii/1/page_23.png",
      "/slides/paint-house-ii/1/page_24.png",
      "/slides/paint-house-ii/1/page_25.png",
      "/slides/paint-house-ii/1/page_26.png",
      "/slides/paint-house-ii/1/page_27.png",
      "/slides/paint-house-ii/1/page_3.png",
      "/slides/paint-house-ii/1/page_4.png",
      "/slides/paint-house-ii/1/page_5.png",
      "/slides/paint-house-ii/1/page_6.png",
      "/slides/paint-house-ii/1/page_7.png",
      "/slides/paint-house-ii/1/page_8.png",
      "/slides/paint-house-ii/1/page_9.png"
    ],
    "total": 27,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "pairs-of-songs-with-total-durations-divisible-by-60",
    "paths": [
      "/slides/pairs-of-songs-with-total-durations-divisible-by-60/1/page_1.png",
      "/slides/pairs-of-songs-with-total-durations-divisible-by-60/1/page_2.png",
      "/slides/pairs-of-songs-with-total-durations-divisible-by-60/1/page_3.png",
      "/slides/pairs-of-songs-with-total-durations-divisible-by-60/1/page_4.png",
      "/slides/pairs-of-songs-with-total-durations-divisible-by-60/1/page_5.png",
      "/slides/pairs-of-songs-with-total-durations-divisible-by-60/1/page_6.png",
      "/slides/pairs-of-songs-with-total-durations-divisible-by-60/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Hash Table",
      " Counting"
    ]
  },
  {
    "title": "palindrome-linked-list",
    "paths": [
      "/slides/palindrome-linked-list/1/page_1.png",
      "/slides/palindrome-linked-list/1/page_10.png",
      "/slides/palindrome-linked-list/1/page_11.png",
      "/slides/palindrome-linked-list/1/page_12.png",
      "/slides/palindrome-linked-list/1/page_13.png",
      "/slides/palindrome-linked-list/1/page_14.png",
      "/slides/palindrome-linked-list/1/page_15.png",
      "/slides/palindrome-linked-list/1/page_16.png",
      "/slides/palindrome-linked-list/1/page_17.png",
      "/slides/palindrome-linked-list/1/page_18.png",
      "/slides/palindrome-linked-list/1/page_19.png",
      "/slides/palindrome-linked-list/1/page_2.png",
      "/slides/palindrome-linked-list/1/page_20.png",
      "/slides/palindrome-linked-list/1/page_21.png",
      "/slides/palindrome-linked-list/1/page_22.png",
      "/slides/palindrome-linked-list/1/page_23.png",
      "/slides/palindrome-linked-list/1/page_24.png",
      "/slides/palindrome-linked-list/1/page_25.png",
      "/slides/palindrome-linked-list/1/page_26.png",
      "/slides/palindrome-linked-list/1/page_27.png",
      "/slides/palindrome-linked-list/1/page_28.png",
      "/slides/palindrome-linked-list/1/page_29.png",
      "/slides/palindrome-linked-list/1/page_3.png",
      "/slides/palindrome-linked-list/1/page_30.png",
      "/slides/palindrome-linked-list/1/page_31.png",
      "/slides/palindrome-linked-list/1/page_32.png",
      "/slides/palindrome-linked-list/1/page_33.png",
      "/slides/palindrome-linked-list/1/page_34.png",
      "/slides/palindrome-linked-list/1/page_4.png",
      "/slides/palindrome-linked-list/1/page_5.png",
      "/slides/palindrome-linked-list/1/page_6.png",
      "/slides/palindrome-linked-list/1/page_7.png",
      "/slides/palindrome-linked-list/1/page_8.png",
      "/slides/palindrome-linked-list/1/page_9.png"
    ],
    "total": 34,
    "topics": [
      "Linked List",
      " Two Pointers",
      " Stack",
      " Recursion"
    ]
  },
  {
    "title": "palindrome-pairs",
    "paths": [
      "/slides/palindrome-pairs/1/page_1.png",
      "/slides/palindrome-pairs/1/page_10.png",
      "/slides/palindrome-pairs/1/page_11.png",
      "/slides/palindrome-pairs/1/page_12.png",
      "/slides/palindrome-pairs/1/page_13.png",
      "/slides/palindrome-pairs/1/page_14.png",
      "/slides/palindrome-pairs/1/page_15.png",
      "/slides/palindrome-pairs/1/page_2.png",
      "/slides/palindrome-pairs/1/page_3.png",
      "/slides/palindrome-pairs/1/page_4.png",
      "/slides/palindrome-pairs/1/page_5.png",
      "/slides/palindrome-pairs/1/page_6.png",
      "/slides/palindrome-pairs/1/page_7.png",
      "/slides/palindrome-pairs/1/page_8.png",
      "/slides/palindrome-pairs/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Array",
      " Hash Table",
      " String",
      " Trie"
    ]
  },
  {
    "title": "palindrome-partitioning",
    "paths": [
      "/slides/palindrome-partitioning/1/page_1.png",
      "/slides/palindrome-partitioning/1/page_10.png",
      "/slides/palindrome-partitioning/1/page_2.png",
      "/slides/palindrome-partitioning/1/page_3.png",
      "/slides/palindrome-partitioning/1/page_4.png",
      "/slides/palindrome-partitioning/1/page_5.png",
      "/slides/palindrome-partitioning/1/page_6.png",
      "/slides/palindrome-partitioning/1/page_7.png",
      "/slides/palindrome-partitioning/1/page_8.png",
      "/slides/palindrome-partitioning/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "String",
      " Dynamic Programming",
      " Backtracking"
    ]
  },
  {
    "title": "palindrome-permutation",
    "paths": [
      "/slides/palindrome-permutation/1/page_1.png",
      "/slides/palindrome-permutation/1/page_10.png",
      "/slides/palindrome-permutation/1/page_11.png",
      "/slides/palindrome-permutation/1/page_12.png",
      "/slides/palindrome-permutation/1/page_13.png",
      "/slides/palindrome-permutation/1/page_2.png",
      "/slides/palindrome-permutation/1/page_3.png",
      "/slides/palindrome-permutation/1/page_4.png",
      "/slides/palindrome-permutation/1/page_5.png",
      "/slides/palindrome-permutation/1/page_6.png",
      "/slides/palindrome-permutation/1/page_7.png",
      "/slides/palindrome-permutation/1/page_8.png",
      "/slides/palindrome-permutation/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Hash Table",
      " String",
      " Bit Manipulation"
    ]
  },
  {
    "title": "palindrome-permutation-ii",
    "paths": [
      "/slides/palindrome-permutation-ii/1/page_1.png",
      "/slides/palindrome-permutation-ii/1/page_10.png",
      "/slides/palindrome-permutation-ii/1/page_11.png",
      "/slides/palindrome-permutation-ii/1/page_2.png",
      "/slides/palindrome-permutation-ii/1/page_3.png",
      "/slides/palindrome-permutation-ii/1/page_4.png",
      "/slides/palindrome-permutation-ii/1/page_5.png",
      "/slides/palindrome-permutation-ii/1/page_6.png",
      "/slides/palindrome-permutation-ii/1/page_7.png",
      "/slides/palindrome-permutation-ii/1/page_8.png",
      "/slides/palindrome-permutation-ii/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Hash Table",
      " String",
      " Backtracking"
    ]
  },
  {
    "title": "parallel-courses",
    "paths": [
      "/slides/parallel-courses/1/page_1.png",
      "/slides/parallel-courses/1/page_2.png",
      "/slides/parallel-courses/1/page_3.png",
      "/slides/parallel-courses/1/page_4.png",
      "/slides/parallel-courses/1/page_5.png",
      "/slides/parallel-courses/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Graph",
      " Topological Sort"
    ]
  },
  {
    "title": "partition-equal-subset-sum",
    "paths": [
      "/slides/partition-equal-subset-sum/1/page_1.png",
      "/slides/partition-equal-subset-sum/1/page_10.png",
      "/slides/partition-equal-subset-sum/1/page_2.png",
      "/slides/partition-equal-subset-sum/1/page_3.png",
      "/slides/partition-equal-subset-sum/1/page_4.png",
      "/slides/partition-equal-subset-sum/1/page_5.png",
      "/slides/partition-equal-subset-sum/1/page_6.png",
      "/slides/partition-equal-subset-sum/1/page_7.png",
      "/slides/partition-equal-subset-sum/1/page_8.png",
      "/slides/partition-equal-subset-sum/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "partition-to-k-equal-sum-subsets",
    "paths": [
      "/slides/partition-to-k-equal-sum-subsets/1/page_1.png",
      "/slides/partition-to-k-equal-sum-subsets/1/page_2.png",
      "/slides/partition-to-k-equal-sum-subsets/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Backtracking",
      " Bit Manipulation",
      " Memoization",
      " Bitmask"
    ]
  },
  {
    "title": "pascals-triangle",
    "paths": [
      "/slides/pascals-triangle/1/page_1.png",
      "/slides/pascals-triangle/1/page_10.png",
      "/slides/pascals-triangle/1/page_11.png",
      "/slides/pascals-triangle/1/page_12.png",
      "/slides/pascals-triangle/1/page_2.png",
      "/slides/pascals-triangle/1/page_3.png",
      "/slides/pascals-triangle/1/page_4.png",
      "/slides/pascals-triangle/1/page_5.png",
      "/slides/pascals-triangle/1/page_6.png",
      "/slides/pascals-triangle/1/page_7.png",
      "/slides/pascals-triangle/1/page_8.png",
      "/slides/pascals-triangle/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "pascals-triangle-ii",
    "paths": [
      "/slides/pascals-triangle-ii/1/page_1.png",
      "/slides/pascals-triangle-ii/1/page_2.png",
      "/slides/pascals-triangle-ii/1/page_3.png",
      "/slides/pascals-triangle-ii/1/page_4.png",
      "/slides/pascals-triangle-ii/1/page_5.png",
      "/slides/pascals-triangle-ii/1/page_6.png",
      "/slides/pascals-triangle-ii/1/page_7.png",
      "/slides/pascals-triangle-ii/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "path-sum",
    "paths": [
      "/slides/path-sum/1/page_1.png",
      "/slides/path-sum/1/page_2.png",
      "/slides/path-sum/1/page_3.png",
      "/slides/path-sum/1/page_4.png",
      "/slides/path-sum/1/page_5.png",
      "/slides/path-sum/1/page_6.png",
      "/slides/path-sum/1/page_7.png",
      "/slides/path-sum/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "path-sum-iii",
    "paths": [
      "/slides/path-sum-iii/1/page_1.png",
      "/slides/path-sum-iii/1/page_10.png",
      "/slides/path-sum-iii/1/page_11.png",
      "/slides/path-sum-iii/1/page_12.png",
      "/slides/path-sum-iii/1/page_13.png",
      "/slides/path-sum-iii/1/page_14.png",
      "/slides/path-sum-iii/1/page_15.png",
      "/slides/path-sum-iii/1/page_16.png",
      "/slides/path-sum-iii/1/page_17.png",
      "/slides/path-sum-iii/1/page_2.png",
      "/slides/path-sum-iii/1/page_3.png",
      "/slides/path-sum-iii/1/page_4.png",
      "/slides/path-sum-iii/1/page_5.png",
      "/slides/path-sum-iii/1/page_6.png",
      "/slides/path-sum-iii/1/page_7.png",
      "/slides/path-sum-iii/1/page_8.png",
      "/slides/path-sum-iii/1/page_9.png"
    ],
    "total": 17,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "path-with-maximum-minimum-value",
    "paths": [
      "/slides/path-with-maximum-minimum-value/1/page_1.png",
      "/slides/path-with-maximum-minimum-value/1/page_10.png",
      "/slides/path-with-maximum-minimum-value/1/page_11.png",
      "/slides/path-with-maximum-minimum-value/1/page_12.png",
      "/slides/path-with-maximum-minimum-value/1/page_13.png",
      "/slides/path-with-maximum-minimum-value/1/page_14.png",
      "/slides/path-with-maximum-minimum-value/1/page_15.png",
      "/slides/path-with-maximum-minimum-value/1/page_16.png",
      "/slides/path-with-maximum-minimum-value/1/page_2.png",
      "/slides/path-with-maximum-minimum-value/1/page_3.png",
      "/slides/path-with-maximum-minimum-value/1/page_4.png",
      "/slides/path-with-maximum-minimum-value/1/page_5.png",
      "/slides/path-with-maximum-minimum-value/1/page_6.png",
      "/slides/path-with-maximum-minimum-value/1/page_7.png",
      "/slides/path-with-maximum-minimum-value/1/page_8.png",
      "/slides/path-with-maximum-minimum-value/1/page_9.png"
    ],
    "total": 16,
    "topics": [
      "Array",
      " Binary Search",
      " Depth-First Search",
      " Breadth-First Search",
      " Union Find",
      " Heap (Priority Queue)",
      " Matrix"
    ]
  },
  {
    "title": "path-with-maximum-probability",
    "paths": [
      "/slides/path-with-maximum-probability/1/page_1.png",
      "/slides/path-with-maximum-probability/1/page_10.png",
      "/slides/path-with-maximum-probability/1/page_11.png",
      "/slides/path-with-maximum-probability/1/page_12.png",
      "/slides/path-with-maximum-probability/1/page_2.png",
      "/slides/path-with-maximum-probability/1/page_3.png",
      "/slides/path-with-maximum-probability/1/page_4.png",
      "/slides/path-with-maximum-probability/1/page_5.png",
      "/slides/path-with-maximum-probability/1/page_6.png",
      "/slides/path-with-maximum-probability/1/page_7.png",
      "/slides/path-with-maximum-probability/1/page_8.png",
      "/slides/path-with-maximum-probability/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Graph",
      " Heap (Priority Queue)",
      " Shortest Path"
    ]
  },
  {
    "title": "perform-string-shifts",
    "paths": [
      "/slides/perform-string-shifts/1/page_1.png",
      "/slides/perform-string-shifts/1/page_2.png",
      "/slides/perform-string-shifts/1/page_3.png",
      "/slides/perform-string-shifts/1/page_4.png",
      "/slides/perform-string-shifts/1/page_5.png",
      "/slides/perform-string-shifts/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Math",
      " String"
    ]
  },
  {
    "title": "permutation-in-string",
    "paths": [
      "/slides/permutation-in-string/1/page_1.png",
      "/slides/permutation-in-string/1/page_10.png",
      "/slides/permutation-in-string/1/page_11.png",
      "/slides/permutation-in-string/1/page_2.png",
      "/slides/permutation-in-string/1/page_3.png",
      "/slides/permutation-in-string/1/page_4.png",
      "/slides/permutation-in-string/1/page_5.png",
      "/slides/permutation-in-string/1/page_6.png",
      "/slides/permutation-in-string/1/page_7.png",
      "/slides/permutation-in-string/1/page_8.png",
      "/slides/permutation-in-string/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Hash Table",
      " Two Pointers",
      " String",
      " Sliding Window"
    ]
  },
  {
    "title": "plus-one",
    "paths": [
      "/slides/plus-one/1/page_1.png",
      "/slides/plus-one/1/page_2.png",
      "/slides/plus-one/1/page_3.png",
      "/slides/plus-one/1/page_4.png",
      "/slides/plus-one/1/page_5.png",
      "/slides/plus-one/1/page_6.png",
      "/slides/plus-one/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Math"
    ]
  },
  {
    "title": "print-immutable-linked-list-in-reverse",
    "paths": [
      "/slides/print-immutable-linked-list-in-reverse/1/page_1.png",
      "/slides/print-immutable-linked-list-in-reverse/1/page_2.png",
      "/slides/print-immutable-linked-list-in-reverse/1/page_3.png",
      "/slides/print-immutable-linked-list-in-reverse/1/page_4.png",
      "/slides/print-immutable-linked-list-in-reverse/1/page_5.png",
      "/slides/print-immutable-linked-list-in-reverse/1/page_6.png",
      "/slides/print-immutable-linked-list-in-reverse/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Linked List",
      " Two Pointers",
      " Stack",
      " Recursion"
    ]
  },
  {
    "title": "product-of-array-except-self",
    "paths": [
      "/slides/product-of-array-except-self/1/page_1.png",
      "/slides/product-of-array-except-self/1/page_10.png",
      "/slides/product-of-array-except-self/1/page_2.png",
      "/slides/product-of-array-except-self/1/page_3.png",
      "/slides/product-of-array-except-self/1/page_4.png",
      "/slides/product-of-array-except-self/1/page_5.png",
      "/slides/product-of-array-except-self/1/page_6.png",
      "/slides/product-of-array-except-self/1/page_7.png",
      "/slides/product-of-array-except-self/1/page_8.png",
      "/slides/product-of-array-except-self/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Prefix Sum"
    ]
  },
  {
    "title": "product-price-at-a-given-date",
    "paths": [
      "/slides/product-price-at-a-given-date/1/page_1.png",
      "/slides/product-price-at-a-given-date/1/page_2.png",
      "/slides/product-price-at-a-given-date/1/page_3.png",
      "/slides/product-price-at-a-given-date/1/page_4.png",
      "/slides/product-price-at-a-given-date/1/page_5.png",
      "/slides/product-price-at-a-given-date/1/page_6.png",
      "/slides/product-price-at-a-given-date/1/page_7.png",
      "/slides/product-price-at-a-given-date/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Database"
    ]
  },
  {
    "title": "pseudo-palindromic-paths-in-a-binary-tree",
    "paths": [
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_1.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_2.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_3.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_4.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_5.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_6.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_7.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_8.png",
      "/slides/pseudo-palindromic-paths-in-a-binary-tree/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Bit Manipulation",
      " Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "put-boxes-into-the-warehouse-i",
    "paths": [
      "/slides/put-boxes-into-the-warehouse-i/1/page_1.png",
      "/slides/put-boxes-into-the-warehouse-i/1/page_2.png",
      "/slides/put-boxes-into-the-warehouse-i/1/page_3.png",
      "/slides/put-boxes-into-the-warehouse-i/1/page_4.png",
      "/slides/put-boxes-into-the-warehouse-i/1/page_5.png",
      "/slides/put-boxes-into-the-warehouse-i/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "queue-reconstruction-by-height",
    "paths": [
      "/slides/queue-reconstruction-by-height/1/page_1.png",
      "/slides/queue-reconstruction-by-height/1/page_10.png",
      "/slides/queue-reconstruction-by-height/1/page_2.png",
      "/slides/queue-reconstruction-by-height/1/page_3.png",
      "/slides/queue-reconstruction-by-height/1/page_4.png",
      "/slides/queue-reconstruction-by-height/1/page_5.png",
      "/slides/queue-reconstruction-by-height/1/page_6.png",
      "/slides/queue-reconstruction-by-height/1/page_7.png",
      "/slides/queue-reconstruction-by-height/1/page_8.png",
      "/slides/queue-reconstruction-by-height/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Binary Indexed Tree",
      " Segment Tree",
      " Sorting"
    ]
  },
  {
    "title": "ransom-note",
    "paths": [
      "/slides/ransom-note/1/page_1.png",
      "/slides/ransom-note/1/page_2.png",
      "/slides/ransom-note/1/page_3.png",
      "/slides/ransom-note/1/page_4.png",
      "/slides/ransom-note/1/page_5.png",
      "/slides/ransom-note/1/page_6.png",
      "/slides/ransom-note/1/page_7.png",
      "/slides/ransom-note/1/page_8.png",
      "/slides/ransom-note/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Hash Table",
      " String",
      " Counting"
    ]
  },
  {
    "title": "rearrange-string-k-distance-apart",
    "paths": [
      "/slides/rearrange-string-k-distance-apart/1/page_1.png",
      "/slides/rearrange-string-k-distance-apart/1/page_2.png",
      "/slides/rearrange-string-k-distance-apart/1/page_3.png",
      "/slides/rearrange-string-k-distance-apart/1/page_4.png",
      "/slides/rearrange-string-k-distance-apart/1/page_5.png",
      "/slides/rearrange-string-k-distance-apart/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Hash Table",
      " String",
      " Greedy",
      " Sorting",
      " Heap (Priority Queue)",
      " Counting"
    ]
  },
  {
    "title": "reconstruct-itinerary",
    "paths": [
      "/slides/reconstruct-itinerary/1/page_1.png",
      "/slides/reconstruct-itinerary/1/page_2.png",
      "/slides/reconstruct-itinerary/1/page_3.png",
      "/slides/reconstruct-itinerary/1/page_4.png",
      "/slides/reconstruct-itinerary/1/page_5.png",
      "/slides/reconstruct-itinerary/1/page_6.png",
      "/slides/reconstruct-itinerary/1/page_7.png",
      "/slides/reconstruct-itinerary/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Depth-First Search",
      " Graph",
      " Eulerian Circuit"
    ]
  },
  {
    "title": "reconstruct-original-digits-from-english",
    "paths": [
      "/slides/reconstruct-original-digits-from-english/1/page_1.png",
      "/slides/reconstruct-original-digits-from-english/1/page_10.png",
      "/slides/reconstruct-original-digits-from-english/1/page_11.png",
      "/slides/reconstruct-original-digits-from-english/1/page_12.png",
      "/slides/reconstruct-original-digits-from-english/1/page_2.png",
      "/slides/reconstruct-original-digits-from-english/1/page_3.png",
      "/slides/reconstruct-original-digits-from-english/1/page_4.png",
      "/slides/reconstruct-original-digits-from-english/1/page_5.png",
      "/slides/reconstruct-original-digits-from-english/1/page_6.png",
      "/slides/reconstruct-original-digits-from-english/1/page_7.png",
      "/slides/reconstruct-original-digits-from-english/1/page_8.png",
      "/slides/reconstruct-original-digits-from-english/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Hash Table",
      " Math",
      " String"
    ]
  },
  {
    "title": "recover-binary-search-tree",
    "paths": [
      "/slides/recover-binary-search-tree/1/page_1.png",
      "/slides/recover-binary-search-tree/1/page_2.png",
      "/slides/recover-binary-search-tree/1/page_3.png",
      "/slides/recover-binary-search-tree/1/page_4.png",
      "/slides/recover-binary-search-tree/1/page_5.png",
      "/slides/recover-binary-search-tree/1/page_6.png",
      "/slides/recover-binary-search-tree/1/page_7.png",
      "/slides/recover-binary-search-tree/1/page_8.png",
      "/slides/recover-binary-search-tree/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Search Tree",
      " Binary Tree"
    ]
  },
  {
    "title": "rectangle-area",
    "paths": [
      "/slides/rectangle-area/1/page_1.png",
      "/slides/rectangle-area/1/page_10.png",
      "/slides/rectangle-area/1/page_2.png",
      "/slides/rectangle-area/1/page_3.png",
      "/slides/rectangle-area/1/page_4.png",
      "/slides/rectangle-area/1/page_5.png",
      "/slides/rectangle-area/1/page_6.png",
      "/slides/rectangle-area/1/page_7.png",
      "/slides/rectangle-area/1/page_8.png",
      "/slides/rectangle-area/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Math",
      " Geometry"
    ]
  },
  {
    "title": "reduce-array-size-to-the-half",
    "paths": [
      "/slides/reduce-array-size-to-the-half/1/page_1.png",
      "/slides/reduce-array-size-to-the-half/1/page_2.png",
      "/slides/reduce-array-size-to-the-half/1/page_3.png",
      "/slides/reduce-array-size-to-the-half/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array",
      " Hash Table",
      " Greedy",
      " Sorting",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "reducing-dishes",
    "paths": [
      "/slides/reducing-dishes/1/page_1.png",
      "/slides/reducing-dishes/1/page_2.png",
      "/slides/reducing-dishes/1/page_3.png",
      "/slides/reducing-dishes/1/page_4.png",
      "/slides/reducing-dishes/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "remove-all-adjacent-duplicates-in-string",
    "paths": [
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_1.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_10.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_11.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_2.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_3.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_4.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_5.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_6.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_7.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_8.png",
      "/slides/remove-all-adjacent-duplicates-in-string/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "String",
      " Stack"
    ]
  },
  {
    "title": "remove-covered-intervals",
    "paths": [
      "/slides/remove-covered-intervals/1/page_1.png",
      "/slides/remove-covered-intervals/1/page_2.png",
      "/slides/remove-covered-intervals/1/page_3.png",
      "/slides/remove-covered-intervals/1/page_4.png",
      "/slides/remove-covered-intervals/1/page_5.png",
      "/slides/remove-covered-intervals/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Sorting"
    ]
  },
  {
    "title": "remove-duplicate-letters",
    "paths": [
      "/slides/remove-duplicate-letters/1/page_1.png",
      "/slides/remove-duplicate-letters/1/page_10.png",
      "/slides/remove-duplicate-letters/1/page_11.png",
      "/slides/remove-duplicate-letters/1/page_12.png",
      "/slides/remove-duplicate-letters/1/page_2.png",
      "/slides/remove-duplicate-letters/1/page_3.png",
      "/slides/remove-duplicate-letters/1/page_4.png",
      "/slides/remove-duplicate-letters/1/page_5.png",
      "/slides/remove-duplicate-letters/1/page_6.png",
      "/slides/remove-duplicate-letters/1/page_7.png",
      "/slides/remove-duplicate-letters/1/page_8.png",
      "/slides/remove-duplicate-letters/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "String",
      " Stack",
      " Greedy",
      " Monotonic Stack"
    ]
  },
  {
    "title": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
    "paths": [
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_1.png",
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_2.png",
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_3.png",
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_4.png",
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_5.png",
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_6.png",
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_7.png",
      "/slides/remove-max-number-of-edges-to-keep-graph-fully-traversable/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Union Find",
      " Graph"
    ]
  },
  {
    "title": "remove-zero-sum-consecutive-nodes-from-linked-list",
    "paths": [
      "/slides/remove-zero-sum-consecutive-nodes-from-linked-list/1/page_1.png",
      "/slides/remove-zero-sum-consecutive-nodes-from-linked-list/1/page_2.png",
      "/slides/remove-zero-sum-consecutive-nodes-from-linked-list/1/page_3.png",
      "/slides/remove-zero-sum-consecutive-nodes-from-linked-list/1/page_4.png",
      "/slides/remove-zero-sum-consecutive-nodes-from-linked-list/1/page_5.png",
      "/slides/remove-zero-sum-consecutive-nodes-from-linked-list/1/page_6.png",
      "/slides/remove-zero-sum-consecutive-nodes-from-linked-list/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Hash Table",
      " Linked List"
    ]
  },
  {
    "title": "reorganize-string",
    "paths": [
      "/slides/reorganize-string/1/page_1.png",
      "/slides/reorganize-string/1/page_10.png",
      "/slides/reorganize-string/1/page_11.png",
      "/slides/reorganize-string/1/page_2.png",
      "/slides/reorganize-string/1/page_3.png",
      "/slides/reorganize-string/1/page_4.png",
      "/slides/reorganize-string/1/page_5.png",
      "/slides/reorganize-string/1/page_6.png",
      "/slides/reorganize-string/1/page_7.png",
      "/slides/reorganize-string/1/page_8.png",
      "/slides/reorganize-string/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Hash Table",
      " String",
      " Greedy",
      " Sorting",
      " Heap (Priority Queue)",
      " Counting"
    ]
  },
  {
    "title": "reveal-cards-in-increasing-order",
    "paths": [
      "/slides/reveal-cards-in-increasing-order/1/page_1.png",
      "/slides/reveal-cards-in-increasing-order/1/page_10.png",
      "/slides/reveal-cards-in-increasing-order/1/page_11.png",
      "/slides/reveal-cards-in-increasing-order/1/page_12.png",
      "/slides/reveal-cards-in-increasing-order/1/page_13.png",
      "/slides/reveal-cards-in-increasing-order/1/page_14.png",
      "/slides/reveal-cards-in-increasing-order/1/page_15.png",
      "/slides/reveal-cards-in-increasing-order/1/page_2.png",
      "/slides/reveal-cards-in-increasing-order/1/page_3.png",
      "/slides/reveal-cards-in-increasing-order/1/page_4.png",
      "/slides/reveal-cards-in-increasing-order/1/page_5.png",
      "/slides/reveal-cards-in-increasing-order/1/page_6.png",
      "/slides/reveal-cards-in-increasing-order/1/page_7.png",
      "/slides/reveal-cards-in-increasing-order/1/page_8.png",
      "/slides/reveal-cards-in-increasing-order/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Array",
      " Queue",
      " Sorting",
      " Simulation"
    ]
  },
  {
    "title": "reverse-words-in-a-string-ii",
    "paths": [
      "/slides/reverse-words-in-a-string-ii/1/page_1.png",
      "/slides/reverse-words-in-a-string-ii/1/page_2.png"
    ],
    "total": 2,
    "topics": [
      "Two Pointers",
      " String"
    ]
  },
  {
    "title": "roman-to-integer",
    "paths": [
      "/slides/roman-to-integer/1/page_1.png",
      "/slides/roman-to-integer/1/page_10.png",
      "/slides/roman-to-integer/1/page_2.png",
      "/slides/roman-to-integer/1/page_3.png",
      "/slides/roman-to-integer/1/page_4.png",
      "/slides/roman-to-integer/1/page_5.png",
      "/slides/roman-to-integer/1/page_6.png",
      "/slides/roman-to-integer/1/page_7.png",
      "/slides/roman-to-integer/1/page_8.png",
      "/slides/roman-to-integer/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Hash Table",
      " Math",
      " String"
    ]
  },
  {
    "title": "rotate-list",
    "paths": [
      "/slides/rotate-list/1/page_1.png",
      "/slides/rotate-list/1/page_10.png",
      "/slides/rotate-list/1/page_11.png",
      "/slides/rotate-list/1/page_12.png",
      "/slides/rotate-list/1/page_13.png",
      "/slides/rotate-list/1/page_14.png",
      "/slides/rotate-list/1/page_2.png",
      "/slides/rotate-list/1/page_3.png",
      "/slides/rotate-list/1/page_4.png",
      "/slides/rotate-list/1/page_5.png",
      "/slides/rotate-list/1/page_6.png",
      "/slides/rotate-list/1/page_7.png",
      "/slides/rotate-list/1/page_8.png",
      "/slides/rotate-list/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Linked List",
      " Two Pointers"
    ]
  },
  {
    "title": "rotting-oranges",
    "paths": [
      "/slides/rotting-oranges/1/page_1.png",
      "/slides/rotting-oranges/1/page_2.png",
      "/slides/rotting-oranges/1/page_3.png",
      "/slides/rotting-oranges/1/page_4.png",
      "/slides/rotting-oranges/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Breadth-First Search",
      " Matrix"
    ]
  },
  {
    "title": "same-tree",
    "paths": [
      "/slides/same-tree/1/page_1.png",
      "/slides/same-tree/1/page_2.png",
      "/slides/same-tree/1/page_3.png",
      "/slides/same-tree/1/page_4.png",
      "/slides/same-tree/1/page_5.png",
      "/slides/same-tree/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "score-after-flipping-matrix",
    "paths": [
      "/slides/score-after-flipping-matrix/1/page_1.png",
      "/slides/score-after-flipping-matrix/1/page_10.png",
      "/slides/score-after-flipping-matrix/1/page_11.png",
      "/slides/score-after-flipping-matrix/1/page_2.png",
      "/slides/score-after-flipping-matrix/1/page_3.png",
      "/slides/score-after-flipping-matrix/1/page_4.png",
      "/slides/score-after-flipping-matrix/1/page_5.png",
      "/slides/score-after-flipping-matrix/1/page_6.png",
      "/slides/score-after-flipping-matrix/1/page_7.png",
      "/slides/score-after-flipping-matrix/1/page_8.png",
      "/slides/score-after-flipping-matrix/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Greedy",
      " Bit Manipulation",
      " Matrix"
    ]
  },
  {
    "title": "search-a-2d-matrix",
    "paths": [
      "/slides/search-a-2d-matrix/1/page_1.png",
      "/slides/search-a-2d-matrix/1/page_2.png",
      "/slides/search-a-2d-matrix/1/page_3.png",
      "/slides/search-a-2d-matrix/1/page_4.png",
      "/slides/search-a-2d-matrix/1/page_5.png",
      "/slides/search-a-2d-matrix/1/page_6.png",
      "/slides/search-a-2d-matrix/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Binary Search",
      " Matrix"
    ]
  },
  {
    "title": "search-a-2d-matrix-ii",
    "paths": [
      "/slides/search-a-2d-matrix-ii/1/page_1.png",
      "/slides/search-a-2d-matrix-ii/1/page_10.png",
      "/slides/search-a-2d-matrix-ii/1/page_11.png",
      "/slides/search-a-2d-matrix-ii/1/page_12.png",
      "/slides/search-a-2d-matrix-ii/1/page_13.png",
      "/slides/search-a-2d-matrix-ii/1/page_14.png",
      "/slides/search-a-2d-matrix-ii/1/page_15.png",
      "/slides/search-a-2d-matrix-ii/1/page_16.png",
      "/slides/search-a-2d-matrix-ii/1/page_17.png",
      "/slides/search-a-2d-matrix-ii/1/page_18.png",
      "/slides/search-a-2d-matrix-ii/1/page_19.png",
      "/slides/search-a-2d-matrix-ii/1/page_2.png",
      "/slides/search-a-2d-matrix-ii/1/page_20.png",
      "/slides/search-a-2d-matrix-ii/1/page_21.png",
      "/slides/search-a-2d-matrix-ii/1/page_22.png",
      "/slides/search-a-2d-matrix-ii/1/page_23.png",
      "/slides/search-a-2d-matrix-ii/1/page_24.png",
      "/slides/search-a-2d-matrix-ii/1/page_25.png",
      "/slides/search-a-2d-matrix-ii/1/page_26.png",
      "/slides/search-a-2d-matrix-ii/1/page_27.png",
      "/slides/search-a-2d-matrix-ii/1/page_28.png",
      "/slides/search-a-2d-matrix-ii/1/page_29.png",
      "/slides/search-a-2d-matrix-ii/1/page_3.png",
      "/slides/search-a-2d-matrix-ii/1/page_30.png",
      "/slides/search-a-2d-matrix-ii/1/page_31.png",
      "/slides/search-a-2d-matrix-ii/1/page_32.png",
      "/slides/search-a-2d-matrix-ii/1/page_33.png",
      "/slides/search-a-2d-matrix-ii/1/page_34.png",
      "/slides/search-a-2d-matrix-ii/1/page_35.png",
      "/slides/search-a-2d-matrix-ii/1/page_4.png",
      "/slides/search-a-2d-matrix-ii/1/page_5.png",
      "/slides/search-a-2d-matrix-ii/1/page_6.png",
      "/slides/search-a-2d-matrix-ii/1/page_7.png",
      "/slides/search-a-2d-matrix-ii/1/page_8.png",
      "/slides/search-a-2d-matrix-ii/1/page_9.png"
    ],
    "total": 35,
    "topics": [
      "Array",
      " Binary Search",
      " Divide and Conquer",
      " Matrix"
    ]
  },
  {
    "title": "search-insert-position",
    "paths": [
      "/slides/search-insert-position/1/page_1.png",
      "/slides/search-insert-position/1/page_2.png",
      "/slides/search-insert-position/1/page_3.png",
      "/slides/search-insert-position/1/page_4.png",
      "/slides/search-insert-position/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Binary Search"
    ]
  },
  {
    "title": "serialize-and-deserialize-binary-tree",
    "paths": [
      "/slides/serialize-and-deserialize-binary-tree/1/page_1.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_10.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_11.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_12.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_2.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_3.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_4.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_5.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_6.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_7.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_8.png",
      "/slides/serialize-and-deserialize-binary-tree/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "String",
      " Tree",
      " Depth-First Search",
      " Breadth-First Search",
      " Design",
      " Binary Tree"
    ]
  },
  {
    "title": "set-matrix-zeroes",
    "paths": [
      "/slides/set-matrix-zeroes/1/page_1.png",
      "/slides/set-matrix-zeroes/1/page_10.png",
      "/slides/set-matrix-zeroes/1/page_11.png",
      "/slides/set-matrix-zeroes/1/page_12.png",
      "/slides/set-matrix-zeroes/1/page_13.png",
      "/slides/set-matrix-zeroes/1/page_14.png",
      "/slides/set-matrix-zeroes/1/page_15.png",
      "/slides/set-matrix-zeroes/1/page_16.png",
      "/slides/set-matrix-zeroes/1/page_17.png",
      "/slides/set-matrix-zeroes/1/page_18.png",
      "/slides/set-matrix-zeroes/1/page_2.png",
      "/slides/set-matrix-zeroes/1/page_3.png",
      "/slides/set-matrix-zeroes/1/page_4.png",
      "/slides/set-matrix-zeroes/1/page_5.png",
      "/slides/set-matrix-zeroes/1/page_6.png",
      "/slides/set-matrix-zeroes/1/page_7.png",
      "/slides/set-matrix-zeroes/1/page_8.png",
      "/slides/set-matrix-zeroes/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Array",
      " Hash Table",
      " Matrix"
    ]
  },
  {
    "title": "shift-2d-grid",
    "paths": [
      "/slides/shift-2d-grid/1/page_1.png",
      "/slides/shift-2d-grid/1/page_10.png",
      "/slides/shift-2d-grid/1/page_11.png",
      "/slides/shift-2d-grid/1/page_12.png",
      "/slides/shift-2d-grid/1/page_13.png",
      "/slides/shift-2d-grid/1/page_2.png",
      "/slides/shift-2d-grid/1/page_3.png",
      "/slides/shift-2d-grid/1/page_4.png",
      "/slides/shift-2d-grid/1/page_5.png",
      "/slides/shift-2d-grid/1/page_6.png",
      "/slides/shift-2d-grid/1/page_7.png",
      "/slides/shift-2d-grid/1/page_8.png",
      "/slides/shift-2d-grid/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Array",
      " Matrix",
      " Simulation"
    ]
  },
  {
    "title": "shortest-distance-to-target-color",
    "paths": [
      "/slides/shortest-distance-to-target-color/1/page_1.png",
      "/slides/shortest-distance-to-target-color/1/page_2.png",
      "/slides/shortest-distance-to-target-color/1/page_3.png",
      "/slides/shortest-distance-to-target-color/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array",
      " Binary Search",
      " Dynamic Programming"
    ]
  },
  {
    "title": "shortest-path-in-binary-matrix",
    "paths": [
      "/slides/shortest-path-in-binary-matrix/1/page_1.png",
      "/slides/shortest-path-in-binary-matrix/1/page_10.png",
      "/slides/shortest-path-in-binary-matrix/1/page_11.png",
      "/slides/shortest-path-in-binary-matrix/1/page_12.png",
      "/slides/shortest-path-in-binary-matrix/1/page_13.png",
      "/slides/shortest-path-in-binary-matrix/1/page_14.png",
      "/slides/shortest-path-in-binary-matrix/1/page_15.png",
      "/slides/shortest-path-in-binary-matrix/1/page_16.png",
      "/slides/shortest-path-in-binary-matrix/1/page_17.png",
      "/slides/shortest-path-in-binary-matrix/1/page_2.png",
      "/slides/shortest-path-in-binary-matrix/1/page_3.png",
      "/slides/shortest-path-in-binary-matrix/1/page_4.png",
      "/slides/shortest-path-in-binary-matrix/1/page_5.png",
      "/slides/shortest-path-in-binary-matrix/1/page_6.png",
      "/slides/shortest-path-in-binary-matrix/1/page_7.png",
      "/slides/shortest-path-in-binary-matrix/1/page_8.png",
      "/slides/shortest-path-in-binary-matrix/1/page_9.png"
    ],
    "total": 17,
    "topics": [
      "Array",
      " Breadth-First Search",
      " Matrix"
    ]
  },
  {
    "title": "shortest-way-to-form-string",
    "paths": [
      "/slides/shortest-way-to-form-string/1/page_1.png",
      "/slides/shortest-way-to-form-string/1/page_10.png",
      "/slides/shortest-way-to-form-string/1/page_11.png",
      "/slides/shortest-way-to-form-string/1/page_12.png",
      "/slides/shortest-way-to-form-string/1/page_13.png",
      "/slides/shortest-way-to-form-string/1/page_14.png",
      "/slides/shortest-way-to-form-string/1/page_15.png",
      "/slides/shortest-way-to-form-string/1/page_16.png",
      "/slides/shortest-way-to-form-string/1/page_17.png",
      "/slides/shortest-way-to-form-string/1/page_18.png",
      "/slides/shortest-way-to-form-string/1/page_2.png",
      "/slides/shortest-way-to-form-string/1/page_3.png",
      "/slides/shortest-way-to-form-string/1/page_4.png",
      "/slides/shortest-way-to-form-string/1/page_5.png",
      "/slides/shortest-way-to-form-string/1/page_6.png",
      "/slides/shortest-way-to-form-string/1/page_7.png",
      "/slides/shortest-way-to-form-string/1/page_8.png",
      "/slides/shortest-way-to-form-string/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Two Pointers",
      " String",
      " Greedy"
    ]
  },
  {
    "title": "shortest-word-distance-ii",
    "paths": [
      "/slides/shortest-word-distance-ii/1/page_1.png",
      "/slides/shortest-word-distance-ii/1/page_10.png",
      "/slides/shortest-word-distance-ii/1/page_11.png",
      "/slides/shortest-word-distance-ii/1/page_12.png",
      "/slides/shortest-word-distance-ii/1/page_13.png",
      "/slides/shortest-word-distance-ii/1/page_14.png",
      "/slides/shortest-word-distance-ii/1/page_2.png",
      "/slides/shortest-word-distance-ii/1/page_3.png",
      "/slides/shortest-word-distance-ii/1/page_4.png",
      "/slides/shortest-word-distance-ii/1/page_5.png",
      "/slides/shortest-word-distance-ii/1/page_6.png",
      "/slides/shortest-word-distance-ii/1/page_7.png",
      "/slides/shortest-word-distance-ii/1/page_8.png",
      "/slides/shortest-word-distance-ii/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Hash Table",
      " Two Pointers",
      " String",
      " Design"
    ]
  },
  {
    "title": "shortest-word-distance-iii",
    "paths": [
      "/slides/shortest-word-distance-iii/1/page_1.png",
      "/slides/shortest-word-distance-iii/1/page_2.png",
      "/slides/shortest-word-distance-iii/1/page_3.png",
      "/slides/shortest-word-distance-iii/1/page_4.png",
      "/slides/shortest-word-distance-iii/1/page_5.png",
      "/slides/shortest-word-distance-iii/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " String"
    ]
  },
  {
    "title": "shuffle-an-array",
    "paths": [
      "/slides/shuffle-an-array/1/page_1.png",
      "/slides/shuffle-an-array/1/page_10.png",
      "/slides/shuffle-an-array/1/page_11.png",
      "/slides/shuffle-an-array/1/page_12.png",
      "/slides/shuffle-an-array/1/page_13.png",
      "/slides/shuffle-an-array/1/page_14.png",
      "/slides/shuffle-an-array/1/page_15.png",
      "/slides/shuffle-an-array/1/page_16.png",
      "/slides/shuffle-an-array/1/page_17.png",
      "/slides/shuffle-an-array/1/page_18.png",
      "/slides/shuffle-an-array/1/page_2.png",
      "/slides/shuffle-an-array/1/page_3.png",
      "/slides/shuffle-an-array/1/page_4.png",
      "/slides/shuffle-an-array/1/page_5.png",
      "/slides/shuffle-an-array/1/page_6.png",
      "/slides/shuffle-an-array/1/page_7.png",
      "/slides/shuffle-an-array/1/page_8.png",
      "/slides/shuffle-an-array/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Array",
      " Math",
      " Randomized"
    ]
  },
  {
    "title": "single-row-keyboard",
    "paths": [
      "/slides/single-row-keyboard/1/page_1.png",
      "/slides/single-row-keyboard/1/page_10.png",
      "/slides/single-row-keyboard/1/page_11.png",
      "/slides/single-row-keyboard/1/page_12.png",
      "/slides/single-row-keyboard/1/page_13.png",
      "/slides/single-row-keyboard/1/page_14.png",
      "/slides/single-row-keyboard/1/page_15.png",
      "/slides/single-row-keyboard/1/page_16.png",
      "/slides/single-row-keyboard/1/page_17.png",
      "/slides/single-row-keyboard/1/page_18.png",
      "/slides/single-row-keyboard/1/page_19.png",
      "/slides/single-row-keyboard/1/page_2.png",
      "/slides/single-row-keyboard/1/page_20.png",
      "/slides/single-row-keyboard/1/page_21.png",
      "/slides/single-row-keyboard/1/page_22.png",
      "/slides/single-row-keyboard/1/page_23.png",
      "/slides/single-row-keyboard/1/page_24.png",
      "/slides/single-row-keyboard/1/page_25.png",
      "/slides/single-row-keyboard/1/page_26.png",
      "/slides/single-row-keyboard/1/page_3.png",
      "/slides/single-row-keyboard/1/page_4.png",
      "/slides/single-row-keyboard/1/page_5.png",
      "/slides/single-row-keyboard/1/page_6.png",
      "/slides/single-row-keyboard/1/page_7.png",
      "/slides/single-row-keyboard/1/page_8.png",
      "/slides/single-row-keyboard/1/page_9.png"
    ],
    "total": 26,
    "topics": [
      "Hash Table",
      " String"
    ]
  },
  {
    "title": "single-threaded-cpu",
    "paths": [
      "/slides/single-threaded-cpu/1/page_1.png",
      "/slides/single-threaded-cpu/1/page_10.png",
      "/slides/single-threaded-cpu/1/page_11.png",
      "/slides/single-threaded-cpu/1/page_12.png",
      "/slides/single-threaded-cpu/1/page_13.png",
      "/slides/single-threaded-cpu/1/page_14.png",
      "/slides/single-threaded-cpu/1/page_15.png",
      "/slides/single-threaded-cpu/1/page_16.png",
      "/slides/single-threaded-cpu/1/page_17.png",
      "/slides/single-threaded-cpu/1/page_18.png",
      "/slides/single-threaded-cpu/1/page_19.png",
      "/slides/single-threaded-cpu/1/page_2.png",
      "/slides/single-threaded-cpu/1/page_20.png",
      "/slides/single-threaded-cpu/1/page_21.png",
      "/slides/single-threaded-cpu/1/page_22.png",
      "/slides/single-threaded-cpu/1/page_23.png",
      "/slides/single-threaded-cpu/1/page_24.png",
      "/slides/single-threaded-cpu/1/page_25.png",
      "/slides/single-threaded-cpu/1/page_26.png",
      "/slides/single-threaded-cpu/1/page_27.png",
      "/slides/single-threaded-cpu/1/page_3.png",
      "/slides/single-threaded-cpu/1/page_4.png",
      "/slides/single-threaded-cpu/1/page_5.png",
      "/slides/single-threaded-cpu/1/page_6.png",
      "/slides/single-threaded-cpu/1/page_7.png",
      "/slides/single-threaded-cpu/1/page_8.png",
      "/slides/single-threaded-cpu/1/page_9.png"
    ],
    "total": 27,
    "topics": [
      "Array",
      " Sorting",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "sliding-window-maximum",
    "paths": [
      "/slides/sliding-window-maximum/1/page_1.png",
      "/slides/sliding-window-maximum/1/page_2.png",
      "/slides/sliding-window-maximum/1/page_3.png",
      "/slides/sliding-window-maximum/1/page_4.png",
      "/slides/sliding-window-maximum/1/page_5.png",
      "/slides/sliding-window-maximum/1/page_6.png",
      "/slides/sliding-window-maximum/1/page_7.png",
      "/slides/sliding-window-maximum/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Queue",
      " Sliding Window",
      " Heap (Priority Queue)",
      " Monotonic Queue"
    ]
  },
  {
    "title": "smallest-range-covering-elements-from-k-lists",
    "paths": [
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_1.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_10.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_11.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_2.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_3.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_4.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_5.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_6.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_7.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_8.png",
      "/slides/smallest-range-covering-elements-from-k-lists/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Hash Table",
      " Greedy",
      " Sliding Window",
      " Sorting",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "smallest-string-starting-from-leaf",
    "paths": [
      "/slides/smallest-string-starting-from-leaf/1/page_1.png",
      "/slides/smallest-string-starting-from-leaf/1/page_10.png",
      "/slides/smallest-string-starting-from-leaf/1/page_2.png",
      "/slides/smallest-string-starting-from-leaf/1/page_3.png",
      "/slides/smallest-string-starting-from-leaf/1/page_4.png",
      "/slides/smallest-string-starting-from-leaf/1/page_5.png",
      "/slides/smallest-string-starting-from-leaf/1/page_6.png",
      "/slides/smallest-string-starting-from-leaf/1/page_7.png",
      "/slides/smallest-string-starting-from-leaf/1/page_8.png",
      "/slides/smallest-string-starting-from-leaf/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "String",
      " Backtracking",
      " Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "sort-colors",
    "paths": [
      "/slides/sort-colors/1/page_1.png",
      "/slides/sort-colors/1/page_10.png",
      "/slides/sort-colors/1/page_11.png",
      "/slides/sort-colors/1/page_12.png",
      "/slides/sort-colors/1/page_13.png",
      "/slides/sort-colors/1/page_2.png",
      "/slides/sort-colors/1/page_3.png",
      "/slides/sort-colors/1/page_4.png",
      "/slides/sort-colors/1/page_5.png",
      "/slides/sort-colors/1/page_6.png",
      "/slides/sort-colors/1/page_7.png",
      "/slides/sort-colors/1/page_8.png",
      "/slides/sort-colors/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Array",
      " Two Pointers",
      " Sorting"
    ]
  },
  {
    "title": "sort-integers-by-the-number-of-1-bits",
    "paths": [
      "/slides/sort-integers-by-the-number-of-1-bits/1/page_1.png",
      "/slides/sort-integers-by-the-number-of-1-bits/1/page_2.png",
      "/slides/sort-integers-by-the-number-of-1-bits/1/page_3.png",
      "/slides/sort-integers-by-the-number-of-1-bits/1/page_4.png",
      "/slides/sort-integers-by-the-number-of-1-bits/1/page_5.png",
      "/slides/sort-integers-by-the-number-of-1-bits/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Bit Manipulation",
      " Sorting",
      " Counting"
    ]
  },
  {
    "title": "sort-list",
    "paths": [
      "/slides/sort-list/1/page_1.png",
      "/slides/sort-list/1/page_2.png",
      "/slides/sort-list/1/page_3.png",
      "/slides/sort-list/1/page_4.png",
      "/slides/sort-list/1/page_5.png",
      "/slides/sort-list/1/page_6.png",
      "/slides/sort-list/1/page_7.png",
      "/slides/sort-list/1/page_8.png",
      "/slides/sort-list/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Linked List",
      " Two Pointers",
      " Divide and Conquer",
      " Sorting",
      " Merge Sort"
    ]
  },
  {
    "title": "sparse-matrix-multiplication",
    "paths": [
      "/slides/sparse-matrix-multiplication/1/page_1.png",
      "/slides/sparse-matrix-multiplication/1/page_10.png",
      "/slides/sparse-matrix-multiplication/1/page_11.png",
      "/slides/sparse-matrix-multiplication/1/page_12.png",
      "/slides/sparse-matrix-multiplication/1/page_13.png",
      "/slides/sparse-matrix-multiplication/1/page_14.png",
      "/slides/sparse-matrix-multiplication/1/page_15.png",
      "/slides/sparse-matrix-multiplication/1/page_2.png",
      "/slides/sparse-matrix-multiplication/1/page_3.png",
      "/slides/sparse-matrix-multiplication/1/page_4.png",
      "/slides/sparse-matrix-multiplication/1/page_5.png",
      "/slides/sparse-matrix-multiplication/1/page_6.png",
      "/slides/sparse-matrix-multiplication/1/page_7.png",
      "/slides/sparse-matrix-multiplication/1/page_8.png",
      "/slides/sparse-matrix-multiplication/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Array",
      " Hash Table",
      " Matrix"
    ]
  },
  {
    "title": "spiral-matrix",
    "paths": [
      "/slides/spiral-matrix/1/page_1.png",
      "/slides/spiral-matrix/1/page_2.png",
      "/slides/spiral-matrix/1/page_3.png",
      "/slides/spiral-matrix/1/page_4.png",
      "/slides/spiral-matrix/1/page_5.png",
      "/slides/spiral-matrix/1/page_6.png",
      "/slides/spiral-matrix/1/page_7.png",
      "/slides/spiral-matrix/1/page_8.png",
      "/slides/spiral-matrix/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Matrix",
      " Simulation"
    ]
  },
  {
    "title": "split-array-into-consecutive-subsequences",
    "paths": [
      "/slides/split-array-into-consecutive-subsequences/1/page_1.png",
      "/slides/split-array-into-consecutive-subsequences/1/page_2.png",
      "/slides/split-array-into-consecutive-subsequences/1/page_3.png",
      "/slides/split-array-into-consecutive-subsequences/1/page_4.png",
      "/slides/split-array-into-consecutive-subsequences/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Hash Table",
      " Greedy",
      " Heap (Priority Queue)"
    ]
  },
  {
    "title": "split-array-largest-sum",
    "paths": [
      "/slides/split-array-largest-sum/1/page_1.png",
      "/slides/split-array-largest-sum/1/page_2.png",
      "/slides/split-array-largest-sum/1/page_3.png",
      "/slides/split-array-largest-sum/1/page_4.png",
      "/slides/split-array-largest-sum/1/page_5.png",
      "/slides/split-array-largest-sum/1/page_6.png",
      "/slides/split-array-largest-sum/1/page_7.png",
      "/slides/split-array-largest-sum/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Binary Search",
      " Dynamic Programming",
      " Greedy",
      " Prefix Sum"
    ]
  },
  {
    "title": "split-array-with-equal-sum",
    "paths": [
      "/slides/split-array-with-equal-sum/1/page_1.png",
      "/slides/split-array-with-equal-sum/1/page_10.png",
      "/slides/split-array-with-equal-sum/1/page_2.png",
      "/slides/split-array-with-equal-sum/1/page_3.png",
      "/slides/split-array-with-equal-sum/1/page_4.png",
      "/slides/split-array-with-equal-sum/1/page_5.png",
      "/slides/split-array-with-equal-sum/1/page_6.png",
      "/slides/split-array-with-equal-sum/1/page_7.png",
      "/slides/split-array-with-equal-sum/1/page_8.png",
      "/slides/split-array-with-equal-sum/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Hash Table",
      " Prefix Sum"
    ]
  },
  {
    "title": "strange-printer",
    "paths": [
      "/slides/strange-printer/1/page_1.png",
      "/slides/strange-printer/1/page_10.png",
      "/slides/strange-printer/1/page_11.png",
      "/slides/strange-printer/1/page_12.png",
      "/slides/strange-printer/1/page_13.png",
      "/slides/strange-printer/1/page_14.png",
      "/slides/strange-printer/1/page_15.png",
      "/slides/strange-printer/1/page_16.png",
      "/slides/strange-printer/1/page_17.png",
      "/slides/strange-printer/1/page_18.png",
      "/slides/strange-printer/1/page_2.png",
      "/slides/strange-printer/1/page_3.png",
      "/slides/strange-printer/1/page_4.png",
      "/slides/strange-printer/1/page_5.png",
      "/slides/strange-printer/1/page_6.png",
      "/slides/strange-printer/1/page_7.png",
      "/slides/strange-printer/1/page_8.png",
      "/slides/strange-printer/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "String",
      " Dynamic Programming"
    ]
  },
  {
    "title": "string-compression",
    "paths": [
      "/slides/string-compression/1/page_1.png",
      "/slides/string-compression/1/page_10.png",
      "/slides/string-compression/1/page_11.png",
      "/slides/string-compression/1/page_12.png",
      "/slides/string-compression/1/page_13.png",
      "/slides/string-compression/1/page_14.png",
      "/slides/string-compression/1/page_15.png",
      "/slides/string-compression/1/page_16.png",
      "/slides/string-compression/1/page_17.png",
      "/slides/string-compression/1/page_18.png",
      "/slides/string-compression/1/page_19.png",
      "/slides/string-compression/1/page_2.png",
      "/slides/string-compression/1/page_20.png",
      "/slides/string-compression/1/page_3.png",
      "/slides/string-compression/1/page_4.png",
      "/slides/string-compression/1/page_5.png",
      "/slides/string-compression/1/page_6.png",
      "/slides/string-compression/1/page_7.png",
      "/slides/string-compression/1/page_8.png",
      "/slides/string-compression/1/page_9.png"
    ],
    "total": 20,
    "topics": [
      "Two Pointers",
      " String"
    ]
  },
  {
    "title": "string-to-integer-atoi",
    "paths": [
      "/slides/string-to-integer-atoi/1/page_1.png",
      "/slides/string-to-integer-atoi/1/page_2.png",
      "/slides/string-to-integer-atoi/1/page_3.png",
      "/slides/string-to-integer-atoi/1/page_4.png",
      "/slides/string-to-integer-atoi/1/page_5.png",
      "/slides/string-to-integer-atoi/1/page_6.png",
      "/slides/string-to-integer-atoi/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "String"
    ]
  },
  {
    "title": "strobogrammatic-number",
    "paths": [
      "/slides/strobogrammatic-number/1/page_1.png",
      "/slides/strobogrammatic-number/1/page_10.png",
      "/slides/strobogrammatic-number/1/page_2.png",
      "/slides/strobogrammatic-number/1/page_3.png",
      "/slides/strobogrammatic-number/1/page_4.png",
      "/slides/strobogrammatic-number/1/page_5.png",
      "/slides/strobogrammatic-number/1/page_6.png",
      "/slides/strobogrammatic-number/1/page_7.png",
      "/slides/strobogrammatic-number/1/page_8.png",
      "/slides/strobogrammatic-number/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Hash Table",
      " Two Pointers",
      " String"
    ]
  },
  {
    "title": "strobogrammatic-number-ii",
    "paths": [
      "/slides/strobogrammatic-number-ii/1/page_1.png",
      "/slides/strobogrammatic-number-ii/1/page_2.png",
      "/slides/strobogrammatic-number-ii/1/page_3.png",
      "/slides/strobogrammatic-number-ii/1/page_4.png",
      "/slides/strobogrammatic-number-ii/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " String",
      " Recursion"
    ]
  },
  {
    "title": "subarray-product-less-than-k",
    "paths": [
      "/slides/subarray-product-less-than-k/1/page_1.png",
      "/slides/subarray-product-less-than-k/1/page_2.png",
      "/slides/subarray-product-less-than-k/1/page_3.png",
      "/slides/subarray-product-less-than-k/1/page_4.png",
      "/slides/subarray-product-less-than-k/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Sliding Window"
    ]
  },
  {
    "title": "subarray-sum-equals-k",
    "paths": [
      "/slides/subarray-sum-equals-k/1/page_1.png",
      "/slides/subarray-sum-equals-k/1/page_2.png",
      "/slides/subarray-sum-equals-k/1/page_3.png",
      "/slides/subarray-sum-equals-k/1/page_4.png",
      "/slides/subarray-sum-equals-k/1/page_5.png",
      "/slides/subarray-sum-equals-k/1/page_6.png",
      "/slides/subarray-sum-equals-k/1/page_7.png",
      "/slides/subarray-sum-equals-k/1/page_8.png",
      "/slides/subarray-sum-equals-k/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array",
      " Hash Table",
      " Prefix Sum"
    ]
  },
  {
    "title": "subarrays-with-k-different-integers",
    "paths": [
      "/slides/subarrays-with-k-different-integers/1/page_1.png",
      "/slides/subarrays-with-k-different-integers/1/page_2.png"
    ],
    "total": 2,
    "topics": [
      "Array",
      " Hash Table",
      " Sliding Window",
      " Counting"
    ]
  },
  {
    "title": "subsets-ii",
    "paths": [
      "/slides/subsets-ii/1/page_1.png",
      "/slides/subsets-ii/1/page_2.png"
    ],
    "total": 2,
    "topics": [
      "Array",
      " Backtracking",
      " Bit Manipulation"
    ]
  },
  {
    "title": "substring-with-concatenation-of-all-words",
    "paths": [
      "/slides/substring-with-concatenation-of-all-words/1/page_1.png",
      "/slides/substring-with-concatenation-of-all-words/1/page_2.png",
      "/slides/substring-with-concatenation-of-all-words/1/page_3.png",
      "/slides/substring-with-concatenation-of-all-words/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Hash Table",
      " String",
      " Sliding Window"
    ]
  },
  {
    "title": "sum-of-root-to-leaf-binary-numbers",
    "paths": [
      "/slides/sum-of-root-to-leaf-binary-numbers/1/page_1.png",
      "/slides/sum-of-root-to-leaf-binary-numbers/1/page_2.png",
      "/slides/sum-of-root-to-leaf-binary-numbers/1/page_3.png",
      "/slides/sum-of-root-to-leaf-binary-numbers/1/page_4.png",
      "/slides/sum-of-root-to-leaf-binary-numbers/1/page_5.png",
      "/slides/sum-of-root-to-leaf-binary-numbers/1/page_6.png",
      "/slides/sum-of-root-to-leaf-binary-numbers/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "sum-of-square-numbers",
    "paths": [
      "/slides/sum-of-square-numbers/1/page_1.png",
      "/slides/sum-of-square-numbers/1/page_2.png",
      "/slides/sum-of-square-numbers/1/page_3.png",
      "/slides/sum-of-square-numbers/1/page_4.png",
      "/slides/sum-of-square-numbers/1/page_5.png",
      "/slides/sum-of-square-numbers/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Math",
      " Two Pointers",
      " Binary Search"
    ]
  },
  {
    "title": "sum-of-subarray-minimums",
    "paths": [
      "/slides/sum-of-subarray-minimums/1/page_1.png",
      "/slides/sum-of-subarray-minimums/1/page_10.png",
      "/slides/sum-of-subarray-minimums/1/page_11.png",
      "/slides/sum-of-subarray-minimums/1/page_12.png",
      "/slides/sum-of-subarray-minimums/1/page_13.png",
      "/slides/sum-of-subarray-minimums/1/page_14.png",
      "/slides/sum-of-subarray-minimums/1/page_15.png",
      "/slides/sum-of-subarray-minimums/1/page_2.png",
      "/slides/sum-of-subarray-minimums/1/page_3.png",
      "/slides/sum-of-subarray-minimums/1/page_4.png",
      "/slides/sum-of-subarray-minimums/1/page_5.png",
      "/slides/sum-of-subarray-minimums/1/page_6.png",
      "/slides/sum-of-subarray-minimums/1/page_7.png",
      "/slides/sum-of-subarray-minimums/1/page_8.png",
      "/slides/sum-of-subarray-minimums/1/page_9.png"
    ],
    "total": 15,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "sum-root-to-leaf-numbers",
    "paths": [
      "/slides/sum-root-to-leaf-numbers/1/page_1.png",
      "/slides/sum-root-to-leaf-numbers/1/page_2.png",
      "/slides/sum-root-to-leaf-numbers/1/page_3.png",
      "/slides/sum-root-to-leaf-numbers/1/page_4.png",
      "/slides/sum-root-to-leaf-numbers/1/page_5.png",
      "/slides/sum-root-to-leaf-numbers/1/page_6.png",
      "/slides/sum-root-to-leaf-numbers/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Tree"
    ]
  },
  {
    "title": "summary-ranges",
    "paths": [
      "/slides/summary-ranges/1/page_1.png",
      "/slides/summary-ranges/1/page_2.png",
      "/slides/summary-ranges/1/page_3.png",
      "/slides/summary-ranges/1/page_4.png",
      "/slides/summary-ranges/1/page_5.png",
      "/slides/summary-ranges/1/page_6.png",
      "/slides/summary-ranges/1/page_7.png",
      "/slides/summary-ranges/1/page_8.png",
      "/slides/summary-ranges/1/page_9.png"
    ],
    "total": 9,
    "topics": [
      "Array"
    ]
  },
  {
    "title": "surrounded-regions",
    "paths": [
      "/slides/surrounded-regions/1/page_1.png",
      "/slides/surrounded-regions/1/page_2.png",
      "/slides/surrounded-regions/1/page_3.png",
      "/slides/surrounded-regions/1/page_4.png",
      "/slides/surrounded-regions/1/page_5.png",
      "/slides/surrounded-regions/1/page_6.png",
      "/slides/surrounded-regions/1/page_7.png",
      "/slides/surrounded-regions/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Depth-First Search",
      " Breadth-First Search",
      " Union Find",
      " Matrix"
    ]
  },
  {
    "title": "tag-validator",
    "paths": [
      "/slides/tag-validator/1/page_1.png",
      "/slides/tag-validator/1/page_10.png",
      "/slides/tag-validator/1/page_11.png",
      "/slides/tag-validator/1/page_12.png",
      "/slides/tag-validator/1/page_13.png",
      "/slides/tag-validator/1/page_14.png",
      "/slides/tag-validator/1/page_15.png",
      "/slides/tag-validator/1/page_16.png",
      "/slides/tag-validator/1/page_17.png",
      "/slides/tag-validator/1/page_18.png",
      "/slides/tag-validator/1/page_19.png",
      "/slides/tag-validator/1/page_2.png",
      "/slides/tag-validator/1/page_20.png",
      "/slides/tag-validator/1/page_21.png",
      "/slides/tag-validator/1/page_3.png",
      "/slides/tag-validator/1/page_4.png",
      "/slides/tag-validator/1/page_5.png",
      "/slides/tag-validator/1/page_6.png",
      "/slides/tag-validator/1/page_7.png",
      "/slides/tag-validator/1/page_8.png",
      "/slides/tag-validator/1/page_9.png"
    ],
    "total": 21,
    "topics": [
      "String",
      " Stack"
    ]
  },
  {
    "title": "target-sum",
    "paths": [
      "/slides/target-sum/1/page_1.png",
      "/slides/target-sum/1/page_2.png",
      "/slides/target-sum/1/page_3.png",
      "/slides/target-sum/1/page_4.png",
      "/slides/target-sum/1/page_5.png",
      "/slides/target-sum/1/page_6.png",
      "/slides/target-sum/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Backtracking"
    ]
  },
  {
    "title": "task-scheduler",
    "paths": [
      "/slides/task-scheduler/1/page_1.png",
      "/slides/task-scheduler/1/page_2.png",
      "/slides/task-scheduler/1/page_3.png",
      "/slides/task-scheduler/1/page_4.png",
      "/slides/task-scheduler/1/page_5.png",
      "/slides/task-scheduler/1/page_6.png",
      "/slides/task-scheduler/1/page_7.png",
      "/slides/task-scheduler/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Hash Table",
      " Greedy",
      " Sorting",
      " Heap (Priority Queue)",
      " Counting"
    ]
  },
  {
    "title": "the-k-weakest-rows-in-a-matrix",
    "paths": [
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_1.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_10.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_2.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_3.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_4.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_5.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_6.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_7.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_8.png",
      "/slides/the-k-weakest-rows-in-a-matrix/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "Array",
      " Binary Search",
      " Sorting",
      " Heap (Priority Queue)",
      " Matrix"
    ]
  },
  {
    "title": "the-maze-ii",
    "paths": [
      "/slides/the-maze-ii/1/page_1.png",
      "/slides/the-maze-ii/1/page_10.png",
      "/slides/the-maze-ii/1/page_11.png",
      "/slides/the-maze-ii/1/page_12.png",
      "/slides/the-maze-ii/1/page_13.png",
      "/slides/the-maze-ii/1/page_14.png",
      "/slides/the-maze-ii/1/page_15.png",
      "/slides/the-maze-ii/1/page_16.png",
      "/slides/the-maze-ii/1/page_17.png",
      "/slides/the-maze-ii/1/page_18.png",
      "/slides/the-maze-ii/1/page_19.png",
      "/slides/the-maze-ii/1/page_2.png",
      "/slides/the-maze-ii/1/page_20.png",
      "/slides/the-maze-ii/1/page_21.png",
      "/slides/the-maze-ii/1/page_22.png",
      "/slides/the-maze-ii/1/page_23.png",
      "/slides/the-maze-ii/1/page_24.png",
      "/slides/the-maze-ii/1/page_25.png",
      "/slides/the-maze-ii/1/page_26.png",
      "/slides/the-maze-ii/1/page_27.png",
      "/slides/the-maze-ii/1/page_28.png",
      "/slides/the-maze-ii/1/page_29.png",
      "/slides/the-maze-ii/1/page_3.png",
      "/slides/the-maze-ii/1/page_30.png",
      "/slides/the-maze-ii/1/page_31.png",
      "/slides/the-maze-ii/1/page_4.png",
      "/slides/the-maze-ii/1/page_5.png",
      "/slides/the-maze-ii/1/page_6.png",
      "/slides/the-maze-ii/1/page_7.png",
      "/slides/the-maze-ii/1/page_8.png",
      "/slides/the-maze-ii/1/page_9.png"
    ],
    "total": 31,
    "topics": [
      "Array",
      " Depth-First Search",
      " Breadth-First Search",
      " Graph",
      " Heap (Priority Queue)",
      " Matrix",
      " Shortest Path"
    ]
  },
  {
    "title": "the-number-of-weak-characters-in-the-game",
    "paths": [
      "/slides/the-number-of-weak-characters-in-the-game/1/page_1.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_10.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_11.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_12.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_13.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_14.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_15.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_16.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_17.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_18.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_2.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_3.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_4.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_5.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_6.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_7.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_8.png",
      "/slides/the-number-of-weak-characters-in-the-game/1/page_9.png"
    ],
    "total": 18,
    "topics": [
      "Array",
      " Stack",
      " Greedy",
      " Sorting",
      " Monotonic Stack"
    ]
  },
  {
    "title": "the-skyline-problem",
    "paths": [
      "/slides/the-skyline-problem/1/page_1.png",
      "/slides/the-skyline-problem/1/page_2.png",
      "/slides/the-skyline-problem/1/page_3.png",
      "/slides/the-skyline-problem/1/page_4.png",
      "/slides/the-skyline-problem/1/page_5.png",
      "/slides/the-skyline-problem/1/page_6.png",
      "/slides/the-skyline-problem/1/page_7.png"
    ],
    "total": 7,
    "topics": [
      "Array",
      " Divide and Conquer",
      " Binary Indexed Tree",
      " Segment Tree",
      " Line Sweep",
      " Heap (Priority Queue)",
      " Ordered Set"
    ]
  },
  {
    "title": "third-maximum-number",
    "paths": [
      "/slides/third-maximum-number/1/page_1.png",
      "/slides/third-maximum-number/1/page_10.png",
      "/slides/third-maximum-number/1/page_11.png",
      "/slides/third-maximum-number/1/page_12.png",
      "/slides/third-maximum-number/1/page_2.png",
      "/slides/third-maximum-number/1/page_3.png",
      "/slides/third-maximum-number/1/page_4.png",
      "/slides/third-maximum-number/1/page_5.png",
      "/slides/third-maximum-number/1/page_6.png",
      "/slides/third-maximum-number/1/page_7.png",
      "/slides/third-maximum-number/1/page_8.png",
      "/slides/third-maximum-number/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Sorting"
    ]
  },
  {
    "title": "to-lower-case",
    "paths": [
      "/slides/to-lower-case/1/page_1.png",
      "/slides/to-lower-case/1/page_10.png",
      "/slides/to-lower-case/1/page_2.png",
      "/slides/to-lower-case/1/page_3.png",
      "/slides/to-lower-case/1/page_4.png",
      "/slides/to-lower-case/1/page_5.png",
      "/slides/to-lower-case/1/page_6.png",
      "/slides/to-lower-case/1/page_7.png",
      "/slides/to-lower-case/1/page_8.png",
      "/slides/to-lower-case/1/page_9.png"
    ],
    "total": 10,
    "topics": [
      "String"
    ]
  },
  {
    "title": "top-k-frequent-elements",
    "paths": [
      "/slides/top-k-frequent-elements/1/page_1.png",
      "/slides/top-k-frequent-elements/1/page_10.png",
      "/slides/top-k-frequent-elements/1/page_11.png",
      "/slides/top-k-frequent-elements/1/page_12.png",
      "/slides/top-k-frequent-elements/1/page_13.png",
      "/slides/top-k-frequent-elements/1/page_14.png",
      "/slides/top-k-frequent-elements/1/page_2.png",
      "/slides/top-k-frequent-elements/1/page_3.png",
      "/slides/top-k-frequent-elements/1/page_4.png",
      "/slides/top-k-frequent-elements/1/page_5.png",
      "/slides/top-k-frequent-elements/1/page_6.png",
      "/slides/top-k-frequent-elements/1/page_7.png",
      "/slides/top-k-frequent-elements/1/page_8.png",
      "/slides/top-k-frequent-elements/1/page_9.png"
    ],
    "total": 14,
    "topics": [
      "Array",
      " Hash Table",
      " Divide and Conquer",
      " Sorting",
      " Heap (Priority Queue)",
      " Bucket Sort",
      " Counting",
      " Quickselect"
    ]
  },
  {
    "title": "trapping-rain-water",
    "paths": [
      "/slides/trapping-rain-water/1/page_1.png",
      "/slides/trapping-rain-water/1/page_10.png",
      "/slides/trapping-rain-water/1/page_11.png",
      "/slides/trapping-rain-water/1/page_2.png",
      "/slides/trapping-rain-water/1/page_3.png",
      "/slides/trapping-rain-water/1/page_4.png",
      "/slides/trapping-rain-water/1/page_5.png",
      "/slides/trapping-rain-water/1/page_6.png",
      "/slides/trapping-rain-water/1/page_7.png",
      "/slides/trapping-rain-water/1/page_8.png",
      "/slides/trapping-rain-water/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Two Pointers",
      " Dynamic Programming",
      " Stack",
      " Monotonic Stack"
    ]
  },
  {
    "title": "triangle",
    "paths": [
      "/slides/triangle/1/page_1.png",
      "/slides/triangle/1/page_2.png",
      "/slides/triangle/1/page_3.png",
      "/slides/triangle/1/page_4.png",
      "/slides/triangle/1/page_5.png",
      "/slides/triangle/1/page_6.png",
      "/slides/triangle/1/page_7.png",
      "/slides/triangle/1/page_8.png"
    ],
    "total": 8,
    "topics": [
      "Array",
      " Dynamic Programming"
    ]
  },
  {
    "title": "two-sum-less-than-k",
    "paths": [
      "/slides/two-sum-less-than-k/1/page_1.png",
      "/slides/two-sum-less-than-k/1/page_2.png",
      "/slides/two-sum-less-than-k/1/page_3.png",
      "/slides/two-sum-less-than-k/1/page_4.png",
      "/slides/two-sum-less-than-k/1/page_5.png",
      "/slides/two-sum-less-than-k/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " Two Pointers",
      " Binary Search",
      " Sorting"
    ]
  },
  {
    "title": "unique-email-addresses",
    "paths": [
      "/slides/unique-email-addresses/1/page_1.png",
      "/slides/unique-email-addresses/1/page_10.png",
      "/slides/unique-email-addresses/1/page_11.png",
      "/slides/unique-email-addresses/1/page_12.png",
      "/slides/unique-email-addresses/1/page_13.png",
      "/slides/unique-email-addresses/1/page_14.png",
      "/slides/unique-email-addresses/1/page_15.png",
      "/slides/unique-email-addresses/1/page_16.png",
      "/slides/unique-email-addresses/1/page_17.png",
      "/slides/unique-email-addresses/1/page_18.png",
      "/slides/unique-email-addresses/1/page_19.png",
      "/slides/unique-email-addresses/1/page_2.png",
      "/slides/unique-email-addresses/1/page_20.png",
      "/slides/unique-email-addresses/1/page_21.png",
      "/slides/unique-email-addresses/1/page_22.png",
      "/slides/unique-email-addresses/1/page_3.png",
      "/slides/unique-email-addresses/1/page_4.png",
      "/slides/unique-email-addresses/1/page_5.png",
      "/slides/unique-email-addresses/1/page_6.png",
      "/slides/unique-email-addresses/1/page_7.png",
      "/slides/unique-email-addresses/1/page_8.png",
      "/slides/unique-email-addresses/1/page_9.png"
    ],
    "total": 22,
    "topics": [
      "Array",
      " Hash Table",
      " String"
    ]
  },
  {
    "title": "unique-paths",
    "paths": [
      "/slides/unique-paths/1/page_1.png",
      "/slides/unique-paths/1/page_10.png",
      "/slides/unique-paths/1/page_11.png",
      "/slides/unique-paths/1/page_12.png",
      "/slides/unique-paths/1/page_13.png",
      "/slides/unique-paths/1/page_2.png",
      "/slides/unique-paths/1/page_3.png",
      "/slides/unique-paths/1/page_4.png",
      "/slides/unique-paths/1/page_5.png",
      "/slides/unique-paths/1/page_6.png",
      "/slides/unique-paths/1/page_7.png",
      "/slides/unique-paths/1/page_8.png",
      "/slides/unique-paths/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Math",
      " Dynamic Programming",
      " Combinatorics"
    ]
  },
  {
    "title": "unique-paths-ii",
    "paths": [
      "/slides/unique-paths-ii/1/page_1.png",
      "/slides/unique-paths-ii/1/page_2.png",
      "/slides/unique-paths-ii/1/page_3.png",
      "/slides/unique-paths-ii/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Matrix"
    ]
  },
  {
    "title": "valid-palindrome",
    "paths": [
      "/slides/valid-palindrome/1/page_1.png",
      "/slides/valid-palindrome/1/page_2.png",
      "/slides/valid-palindrome/1/page_3.png",
      "/slides/valid-palindrome/1/page_4.png",
      "/slides/valid-palindrome/1/page_5.png",
      "/slides/valid-palindrome/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Two Pointers",
      " String"
    ]
  },
  {
    "title": "valid-palindrome-ii",
    "paths": [
      "/slides/valid-palindrome-ii/1/page_1.png",
      "/slides/valid-palindrome-ii/1/page_2.png",
      "/slides/valid-palindrome-ii/1/page_3.png",
      "/slides/valid-palindrome-ii/1/page_4.png",
      "/slides/valid-palindrome-ii/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Two Pointers",
      " String",
      " Greedy"
    ]
  },
  {
    "title": "valid-parentheses",
    "paths": [
      "/slides/valid-parentheses/1/page_1.png",
      "/slides/valid-parentheses/1/page_10.png",
      "/slides/valid-parentheses/1/page_11.png",
      "/slides/valid-parentheses/1/page_12.png",
      "/slides/valid-parentheses/1/page_2.png",
      "/slides/valid-parentheses/1/page_3.png",
      "/slides/valid-parentheses/1/page_4.png",
      "/slides/valid-parentheses/1/page_5.png",
      "/slides/valid-parentheses/1/page_6.png",
      "/slides/valid-parentheses/1/page_7.png",
      "/slides/valid-parentheses/1/page_8.png",
      "/slides/valid-parentheses/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "String",
      " Stack"
    ]
  },
  {
    "title": "valid-parenthesis-string",
    "paths": [
      "/slides/valid-parenthesis-string/1/page_1.png",
      "/slides/valid-parenthesis-string/1/page_2.png",
      "/slides/valid-parenthesis-string/1/page_3.png",
      "/slides/valid-parenthesis-string/1/page_4.png",
      "/slides/valid-parenthesis-string/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "String",
      " Dynamic Programming",
      " Stack",
      " Greedy"
    ]
  },
  {
    "title": "valid-sudoku",
    "paths": [
      "/slides/valid-sudoku/1/page_1.png",
      "/slides/valid-sudoku/1/page_2.png"
    ],
    "total": 2,
    "topics": [
      "Array",
      " Hash Table",
      " Matrix"
    ]
  },
  {
    "title": "valid-triangle-number",
    "paths": [
      "/slides/valid-triangle-number/1/page_1.png",
      "/slides/valid-triangle-number/1/page_2.png",
      "/slides/valid-triangle-number/1/page_3.png",
      "/slides/valid-triangle-number/1/page_4.png",
      "/slides/valid-triangle-number/1/page_5.png"
    ],
    "total": 5,
    "topics": [
      "Array",
      " Two Pointers",
      " Binary Search",
      " Greedy",
      " Sorting"
    ]
  },
  {
    "title": "valid-word-square",
    "paths": [
      "/slides/valid-word-square/1/page_1.png",
      "/slides/valid-word-square/1/page_10.png",
      "/slides/valid-word-square/1/page_11.png",
      "/slides/valid-word-square/1/page_2.png",
      "/slides/valid-word-square/1/page_3.png",
      "/slides/valid-word-square/1/page_4.png",
      "/slides/valid-word-square/1/page_5.png",
      "/slides/valid-word-square/1/page_6.png",
      "/slides/valid-word-square/1/page_7.png",
      "/slides/valid-word-square/1/page_8.png",
      "/slides/valid-word-square/1/page_9.png"
    ],
    "total": 11,
    "topics": [
      "Array",
      " Matrix"
    ]
  },
  {
    "title": "validate-binary-search-tree",
    "paths": [
      "/slides/validate-binary-search-tree/1/page_1.png",
      "/slides/validate-binary-search-tree/1/page_2.png",
      "/slides/validate-binary-search-tree/1/page_3.png",
      "/slides/validate-binary-search-tree/1/page_4.png"
    ],
    "total": 4,
    "topics": [
      "Tree",
      " Depth-First Search",
      " Binary Search Tree",
      " Binary Tree"
    ]
  },
  {
    "title": "verify-preorder-serialization-of-a-binary-tree",
    "paths": [
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_1.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_10.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_11.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_12.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_13.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_14.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_15.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_16.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_17.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_18.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_19.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_2.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_20.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_21.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_22.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_23.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_24.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_25.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_26.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_27.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_3.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_4.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_5.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_6.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_7.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_8.png",
      "/slides/verify-preorder-serialization-of-a-binary-tree/1/page_9.png"
    ],
    "total": 27,
    "topics": [
      "String",
      " Stack",
      " Tree",
      " Binary Tree"
    ]
  },
  {
    "title": "wiggle-subsequence",
    "paths": [
      "/slides/wiggle-subsequence/1/page_1.png",
      "/slides/wiggle-subsequence/1/page_10.png",
      "/slides/wiggle-subsequence/1/page_11.png",
      "/slides/wiggle-subsequence/1/page_12.png",
      "/slides/wiggle-subsequence/1/page_2.png",
      "/slides/wiggle-subsequence/1/page_3.png",
      "/slides/wiggle-subsequence/1/page_4.png",
      "/slides/wiggle-subsequence/1/page_5.png",
      "/slides/wiggle-subsequence/1/page_6.png",
      "/slides/wiggle-subsequence/1/page_7.png",
      "/slides/wiggle-subsequence/1/page_8.png",
      "/slides/wiggle-subsequence/1/page_9.png"
    ],
    "total": 12,
    "topics": [
      "Array",
      " Dynamic Programming",
      " Greedy"
    ]
  },
  {
    "title": "word-break",
    "paths": [
      "/slides/word-break/1/page_1.png",
      "/slides/word-break/1/page_2.png",
      "/slides/word-break/1/page_3.png"
    ],
    "total": 3,
    "topics": [
      "Array",
      " Hash Table",
      " String",
      " Dynamic Programming",
      " Trie",
      " Memoization"
    ]
  },
  {
    "title": "word-break-ii",
    "paths": [
      "/slides/word-break-ii/1/page_1.png",
      "/slides/word-break-ii/1/page_10.png",
      "/slides/word-break-ii/1/page_11.png",
      "/slides/word-break-ii/1/page_12.png",
      "/slides/word-break-ii/1/page_13.png",
      "/slides/word-break-ii/1/page_2.png",
      "/slides/word-break-ii/1/page_3.png",
      "/slides/word-break-ii/1/page_4.png",
      "/slides/word-break-ii/1/page_5.png",
      "/slides/word-break-ii/1/page_6.png",
      "/slides/word-break-ii/1/page_7.png",
      "/slides/word-break-ii/1/page_8.png",
      "/slides/word-break-ii/1/page_9.png"
    ],
    "total": 13,
    "topics": [
      "Array",
      " Hash Table",
      " String",
      " Dynamic Programming",
      " Backtracking",
      " Trie",
      " Memoization"
    ]
  },
  {
    "title": "word-search",
    "paths": [
      "/slides/word-search/1/page_1.png",
      "/slides/word-search/1/page_2.png",
      "/slides/word-search/1/page_3.png",
      "/slides/word-search/1/page_4.png",
      "/slides/word-search/1/page_5.png",
      "/slides/word-search/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " String",
      " Backtracking",
      " Matrix"
    ]
  },
  {
    "title": "word-search-ii",
    "paths": [
      "/slides/word-search-ii/1/page_1.png",
      "/slides/word-search-ii/1/page_2.png",
      "/slides/word-search-ii/1/page_3.png",
      "/slides/word-search-ii/1/page_4.png",
      "/slides/word-search-ii/1/page_5.png",
      "/slides/word-search-ii/1/page_6.png"
    ],
    "total": 6,
    "topics": [
      "Array",
      " String",
      " Backtracking",
      " Trie",
      " Matrix"
    ]
  }
]